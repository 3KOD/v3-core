# (Pair owner { Elt 500 10; Elt 3000 60; Elt 10000 200 } { })
{
  storage (pair (address %owner) (big_map %feeAmountTickSpacing nat int) (big_map %getPool (pair address address nat) address));
  parameter (or (or (pair %createPool (address %tokenA) (pair (address %tokenB) (nat %fee_))) (address %setOwner)) (pair %enableFeeAmount (nat %fee_) (int %tickSpacing_)));
  code { LAMBDA
           unit
           bool
           { PUSH unit Unit;
             SELF_ADDRESS;
             SELF_ADDRESS;
             COMPARE;
             NEQ;
             IF
               { SELF_ADDRESS;
                 PUSH string "DelegateCall";
                 PAIR;
                 FAILWITH }
               {  };
             PUSH bool True;
             SWAP;
             DROP;
             SWAP;
             DROP };
         LAMBDA
           int
           nat
           { PUSH unit Unit;
             DUP 2;
             DUP 3;
             PUSH int -887272;
             EDIV;
             IF_NONE
               { PUSH string "DivByZero";
                 FAILWITH }
               { DUP;
                 CAR;
                 SWAP;
                 DROP };
             MUL;
             DUP 3;
             DUP 4;
             PUSH int 887272;
             EDIV;
             IF_NONE
               { PUSH string "DivByZero";
                 FAILWITH }
               { DUP;
                 CAR;
                 SWAP;
                 DROP };
             MUL;
             PUSH int 1;
             DUP 5;
             DUP 4;
             DUP 4;
             SUB;
             EDIV;
             IF_NONE
               { PUSH string "DivByZero";
                 FAILWITH }
               { DUP;
                 CAR;
                 SWAP;
                 DROP };
             ADD;
             DUP;
             PUSH int 1;
             PUSH nat 128;
             PUSH nat 1;
             LSL;
             INT;
             SUB;
             EDIV;
             IF_NONE
               { PUSH string "DivByZero";
                 FAILWITH }
               { DUP;
                 CAR;
                 SWAP;
                 DROP };
             ISNAT;
             IF_NONE
               { PUSH nat 0 }
               {  };
             DUP;
             DIP { DIG 4; DROP };
             DUG 4;
             DROP 4;
             DUG 1;
             DROP };
         NIL operation;
         DIG 3;
         UNPAIR;
         DIP { UNPAIR 3 };
         IF_LEFT
           { IF_LEFT
               { UNPAIR;
                 SWAP;
                 UNPAIR;
                 SWAP;
                 DUP 9;
                 UNIT;
                 EXEC;
                 NOT;
                 IF
                   { PUSH string "createPool1";
                     PUSH string "INVALID_CONDITION";
                     PAIR;
                     FAILWITH }
                   {  };
                 DUP 2;
                 DUP 4;
                 COMPARE;
                 NEQ;
                 NOT;
                 IF
                   { PUSH string "createPool2";
                     PUSH string "INVALID_CONDITION";
                     PAIR;
                     FAILWITH }
                   {  };
                 DUP 2;
                 DUP 4;
                 COMPARE;
                 LT;
                 IF
                   { DUP 3 }
                   { DUP 2 };
                 DUP 3;
                 DUP 5;
                 COMPARE;
                 LT;
                 IF
                   { DUP 3 }
                   { DUP 4 };
                 DUP 7;
                 DUP 4;
                 GET;
                 IF_NONE
                   { PUSH string "feeAmountTickSpacing";
                     PUSH string "ASSET_NOT_FOUND";
                     PAIR;
                     FAILWITH }
                   {  };
                 PUSH int 0;
                 DUP 2;
                 COMPARE;
                 NEQ;
                 NOT;
                 IF
                   { DUP;
                     PUSH string "INVALID_TICK_SPACING";
                     PAIR;
                     FAILWITH }
                   {  };
                 DUP 9;
                 DUP 5;
                 DUP 4;
                 PAIR;
                 DUP 5;
                 PAIR;
                 GET;
                 IF_NONE
                   { NONE address }
                   { DUP;
                     SOME;
                     SWAP;
                     DROP };
                 IF_NONE
                   { PUSH bool True }
                   { PUSH bool False;
                     SWAP;
                     DROP };
                 NOT;
                 IF
                   { DUP 9;
                     DUP 5;
                     DUP 4;
                     PAIR;
                     DUP 5;
                     PAIR;
                     GET;
                     IF_NONE
                       { PUSH string "getPool";
                         PUSH string "ASSET_NOT_FOUND";
                         PAIR;
                         FAILWITH }
                       {  };
                     PUSH string "INVALID_GET_POOL";
                     PAIR;
                     FAILWITH }
                   {  };
                 PUSH mutez 0;
                 DUP 12;
                 DUP 3;
                 EXEC;
                 PUSH bool False;
                 PUSH nat 0;
                 PAIR;
                 PUSH nat 0;
                 PAIR;
                 PUSH nat 0;
                 PAIR;
                 PUSH nat 0;
                 PAIR;
                 PUSH int 0;
                 PAIR;
                 PUSH nat 0;
                 PAIR;
                 EMPTY_BIG_MAP nat (pair nat int nat bool);
                 EMPTY_BIG_MAP (pair address int int) (pair nat (pair nat nat) nat nat);
                 PAIR;
                 EMPTY_BIG_MAP int nat;
                 PAIR;
                 EMPTY_BIG_MAP int (pair nat int nat nat int nat nat bool);
                 PAIR;
                 PUSH nat 0;
                 PAIR;
                 PUSH nat 0;
                 PUSH nat 0;
                 PAIR;
                 PAIR;
                 PUSH nat 0;
                 PAIR;
                 PUSH nat 0;
                 PAIR;
                 DUP 2;
                 PAIR;
                 PUSH nat 0;
                 PAIR;
                 PUSH nat 0;
                 PAIR;
                 DUP 3;
                 PAIR;
                 DUP 5;
                 PAIR;
                 DUP 8;
                 PAIR;
                 DUP 6;
                 PAIR;
                 DUP 7;
                 PAIR;
                 SELF_ADDRESS;
                 PAIR;
                 DUP;
                 DUP 5;
                 NONE key_hash;
                 CREATE_CONTRACT
                   { storage
                       (pair (address %factory)
                             (address %token0)
                             (address %token1)
                             (nat %fee)
                             (int %tickSpacing)
                             (nat %maxLiquidityPerTick)
                             (nat %balance0)
                             (nat %balance1)
                             (pair %slot0
                                (nat %sqrtPriceX96)
                                (int %tick)
                                (nat %observationIndex)
                                (nat %observationCardinality)
                                (nat %observationCardinalityNext)
                                (nat %feeProtocol)
                                (bool %unlocked))
                             (nat %feeGrowthGlobal0X128)
                             (nat %feeGrowthGlobal1X128)
                             (pair %protocolFees (nat %token0) (nat %token1))
                             (nat %liquidity)
                             (big_map %ticks
                                int
                                (pair (nat %liquidityGross)
                                      (int %liquidityNet)
                                      (nat %feeGrowthOutside0X128)
                                      (nat %feeGrowthOutside1X128)
                                      (int %tickCumulativeOutside)
                                      (nat %secondsPerLiquidityOutsideX128)
                                      (nat %secondsOutside)
                                      (bool %initialized)))
                             (big_map %tickBitmap int nat)
                             (big_map %positions
                                (pair address int int)
                                (pair (nat %liquidity)
                                      (pair (nat %feeGrowthInside0LastX128) (nat %feeGrowthInside1LastX128))
                                      (pair (nat %tokensOwed0) (nat %tokensOwed1))))
                             (big_map %observations
                                nat
                                (pair (nat %blockTimestamp)
                                      (pair (int %tickCumulative)
                                            (nat %secondsPerLiquidityCumulativeX128)
                                            (bool %initialized))))) ;
                     parameter
                       (or (or (or (nat %increaseObservationCardinalityNext) (nat %initialize))
                               (or (pair %mint
                                      (address %recipient_mint)
                                      (pair (int %tickLower_mint)
                                            (pair (int %tickUpper_mint) (pair (nat %amount_mint) (bytes %data_mint)))))
                                   (pair %collect
                                      (address %recipient_collect)
                                      (pair (int %tickLower_collect)
                                            (pair (int %tickUpper_collect)
                                                  (pair (nat %amount0Requested_collect) (nat %amount1Requested_collect)))))))
                           (or (or (pair %burn (int %tickLower_burn) (pair (int %tickUpper_burn) (nat %amount_burn)))
                                   (pair %swap
                                      (address %recipient)
                                      (pair (bool %zeroForOne)
                                            (pair (int %amountSpecified) (pair (nat %sqrtPriceLimitX96) (bytes %data))))))
                               (or (pair %setFeeProtocol (nat %feeProtocol0) (nat %feeProtocol1))
                                   (pair %collectProtocol
                                      (address %recipient)
                                      (pair (nat %amount0Requested) (nat %amount1Requested)))))) ;
                     code { LAMBDA
                              (pair (list nat) nat)
                              (option nat)
                              { UNPAIR ;
                                PUSH nat 0 ;
                                PUSH (option nat) None ;
                                DIG 2 ;
                                ITER { DUP 3 ;
                                       DUP 5 ;
                                       COMPARE ;
                                       EQ ;
                                       IF { SOME ; SWAP ; DROP } { DROP } ;
                                       SWAP ;
                                       PUSH nat 1 ;
                                       ADD ;
                                       SWAP } ;
                                DIP { DROP 2 } } ;
                            LAMBDA
                              unit
                              bool
                              { PUSH unit Unit ;
                                SELF_ADDRESS ;
                                SELF_ADDRESS ;
                                COMPARE ;
                                NEQ ;
                                IF { SELF_ADDRESS ; PUSH string "DelegateCall" ; PAIR ; FAILWITH } {} ;
                                PUSH bool True ;
                                SWAP ;
                                DROP ;
                                SWAP ;
                                DROP } ;
                            LAMBDA
                              address
                              bool
                              { PUSH unit Unit ;
                                DUP 2 ;
                                PUSH unit Unit ;
                                VIEW "getOwner" address ;
                                IF_NONE { PUSH string "VIEW_OWNER_ERR" ; FAILWITH } {} ;
                                DUP ;
                                SENDER ;
                                COMPARE ;
                                EQ ;
                                NOT ;
                                IF { PUSH string "ONLY_FACTORY_OWNER_ERR" ; FAILWITH } {} ;
                                PUSH bool True ;
                                DIP { DIG 1 ; DROP } ;
                                DUG 1 ;
                                DROP ;
                                DUG 1 ;
                                DROP } ;
                            LAMBDA
                              (pair int int)
                              bool
                              { UNPAIR 2 ;
                                PUSH unit Unit ;
                                DUP 3 ;
                                DUP 3 ;
                                COMPARE ;
                                LT ;
                                NOT ;
                                IF { PUSH string "TLU" ; FAILWITH } {} ;
                                PUSH int -887272 ;
                                DUP 3 ;
                                COMPARE ;
                                GE ;
                                NOT ;
                                IF { PUSH string "TLM" ; FAILWITH } {} ;
                                PUSH int 887272 ;
                                DUP 4 ;
                                COMPARE ;
                                LE ;
                                NOT ;
                                IF { PUSH string "TUM" ; FAILWITH } {} ;
                                PUSH bool True ;
                                SWAP ;
                                DROP ;
                                DUG 2 ;
                                DROP 2 } ;
                            LAMBDA
                              unit
                              nat
                              { PUSH unit Unit ;
                                PUSH int 1 ;
                                PUSH timestamp 0 ;
                                NOW ;
                                SUB ;
                                EDIV ;
                                IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                ISNAT ;
                                IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                DUP ;
                                DIP { DIG 1 ; DROP } ;
                                DUG 1 ;
                                DROP ;
                                SWAP ;
                                DROP } ;
                            LAMBDA
                              int
                              nat
                              { PUSH unit Unit ;
                                DUP 2 ;
                                ABS ;
                                PUSH int 887272 ;
                                DUP 2 ;
                                INT ;
                                COMPARE ;
                                LE ;
                                NOT ;
                                IF { PUSH string "T" ; FAILWITH } {} ;
                                PUSH nat 0 ;
                                PUSH int 2 ;
                                DUP 3 ;
                                INT ;
                                EDIV ;
                                IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CDR ; SWAP ; DROP } ;
                                COMPARE ;
                                NEQ ;
                                IF { PUSH nat 340265354078544963557816517032075149313 }
                                   { PUSH nat 340282366920938463463374607431768211456 } ;
                                PUSH nat 0 ;
                                PUSH int 2 ;
                                PUSH nat 1 ;
                                PUSH nat 1 ;
                                LSL ;
                                DUP 5 ;
                                EDIV ;
                                IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                INT ;
                                EDIV ;
                                IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CDR ; SWAP ; DROP } ;
                                COMPARE ;
                                NEQ ;
                                IF { PUSH nat 128 ;
                                     PUSH nat 340248342086729790484326174814286782778 ;
                                     DUP 3 ;
                                     MUL ;
                                     LSR ;
                                     SWAP ;
                                     DROP }
                                   {} ;
                                PUSH nat 0 ;
                                PUSH int 2 ;
                                PUSH nat 2 ;
                                PUSH nat 1 ;
                                LSL ;
                                DUP 5 ;
                                EDIV ;
                                IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                INT ;
                                EDIV ;
                                IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CDR ; SWAP ; DROP } ;
                                COMPARE ;
                                NEQ ;
                                IF { PUSH nat 128 ;
                                     PUSH nat 340214320654664324051920982716015181260 ;
                                     DUP 3 ;
                                     MUL ;
                                     LSR ;
                                     SWAP ;
                                     DROP }
                                   {} ;
                                PUSH nat 0 ;
                                PUSH int 2 ;
                                PUSH nat 3 ;
                                PUSH nat 1 ;
                                LSL ;
                                DUP 5 ;
                                EDIV ;
                                IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                INT ;
                                EDIV ;
                                IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CDR ; SWAP ; DROP } ;
                                COMPARE ;
                                NEQ ;
                                IF { PUSH nat 128 ;
                                     PUSH nat 340146287995602323631171512101879684304 ;
                                     DUP 3 ;
                                     MUL ;
                                     LSR ;
                                     SWAP ;
                                     DROP }
                                   {} ;
                                PUSH nat 0 ;
                                PUSH int 2 ;
                                PUSH nat 4 ;
                                PUSH nat 1 ;
                                LSL ;
                                DUP 5 ;
                                EDIV ;
                                IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                INT ;
                                EDIV ;
                                IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CDR ; SWAP ; DROP } ;
                                COMPARE ;
                                NEQ ;
                                IF { PUSH nat 128 ;
                                     PUSH nat 340010263488231146823593991679159461444 ;
                                     DUP 3 ;
                                     MUL ;
                                     LSR ;
                                     SWAP ;
                                     DROP }
                                   {} ;
                                PUSH nat 0 ;
                                PUSH int 2 ;
                                PUSH nat 5 ;
                                PUSH nat 1 ;
                                LSL ;
                                DUP 5 ;
                                EDIV ;
                                IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                INT ;
                                EDIV ;
                                IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CDR ; SWAP ; DROP } ;
                                COMPARE ;
                                NEQ ;
                                IF { PUSH nat 128 ;
                                     PUSH nat 339738377640345403697157401104375502016 ;
                                     DUP 3 ;
                                     MUL ;
                                     LSR ;
                                     SWAP ;
                                     DROP }
                                   {} ;
                                PUSH nat 0 ;
                                PUSH int 2 ;
                                PUSH nat 6 ;
                                PUSH nat 1 ;
                                LSL ;
                                DUP 5 ;
                                EDIV ;
                                IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                INT ;
                                EDIV ;
                                IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CDR ; SWAP ; DROP } ;
                                COMPARE ;
                                NEQ ;
                                IF { PUSH nat 128 ;
                                     PUSH nat 339195258003219555707034227454543997025 ;
                                     DUP 3 ;
                                     MUL ;
                                     LSR ;
                                     SWAP ;
                                     DROP }
                                   {} ;
                                PUSH nat 0 ;
                                PUSH int 2 ;
                                PUSH nat 7 ;
                                PUSH nat 1 ;
                                LSL ;
                                DUP 5 ;
                                EDIV ;
                                IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                INT ;
                                EDIV ;
                                IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CDR ; SWAP ; DROP } ;
                                COMPARE ;
                                NEQ ;
                                IF { PUSH nat 128 ;
                                     PUSH nat 338111622100601834656805679988414885971 ;
                                     DUP 3 ;
                                     MUL ;
                                     LSR ;
                                     SWAP ;
                                     DROP }
                                   {} ;
                                PUSH nat 0 ;
                                PUSH int 2 ;
                                PUSH nat 8 ;
                                PUSH nat 1 ;
                                LSL ;
                                DUP 5 ;
                                EDIV ;
                                IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                INT ;
                                EDIV ;
                                IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CDR ; SWAP ; DROP } ;
                                COMPARE ;
                                NEQ ;
                                IF { PUSH nat 128 ;
                                     PUSH nat 335954724994790223023589805789778977700 ;
                                     DUP 3 ;
                                     MUL ;
                                     LSR ;
                                     SWAP ;
                                     DROP }
                                   {} ;
                                PUSH nat 0 ;
                                PUSH int 2 ;
                                PUSH nat 9 ;
                                PUSH nat 1 ;
                                LSL ;
                                DUP 5 ;
                                EDIV ;
                                IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                INT ;
                                EDIV ;
                                IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CDR ; SWAP ; DROP } ;
                                COMPARE ;
                                NEQ ;
                                IF { PUSH nat 128 ;
                                     PUSH nat 331682121138379247127172139078559817300 ;
                                     DUP 3 ;
                                     MUL ;
                                     LSR ;
                                     SWAP ;
                                     DROP }
                                   {} ;
                                PUSH nat 0 ;
                                PUSH int 2 ;
                                PUSH nat 10 ;
                                PUSH nat 1 ;
                                LSL ;
                                DUP 5 ;
                                EDIV ;
                                IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                INT ;
                                EDIV ;
                                IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CDR ; SWAP ; DROP } ;
                                COMPARE ;
                                NEQ ;
                                IF { PUSH nat 128 ;
                                     PUSH nat 323299236684853023288211250268160618739 ;
                                     DUP 3 ;
                                     MUL ;
                                     LSR ;
                                     SWAP ;
                                     DROP }
                                   {} ;
                                PUSH nat 0 ;
                                PUSH int 2 ;
                                PUSH nat 11 ;
                                PUSH nat 1 ;
                                LSL ;
                                DUP 5 ;
                                EDIV ;
                                IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                INT ;
                                EDIV ;
                                IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CDR ; SWAP ; DROP } ;
                                COMPARE ;
                                NEQ ;
                                IF { PUSH nat 128 ;
                                     PUSH nat 307163716377032989948697243942600083929 ;
                                     DUP 3 ;
                                     MUL ;
                                     LSR ;
                                     SWAP ;
                                     DROP }
                                   {} ;
                                PUSH nat 0 ;
                                PUSH int 2 ;
                                PUSH nat 12 ;
                                PUSH nat 1 ;
                                LSL ;
                                DUP 5 ;
                                EDIV ;
                                IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                INT ;
                                EDIV ;
                                IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CDR ; SWAP ; DROP } ;
                                COMPARE ;
                                NEQ ;
                                IF { PUSH nat 128 ;
                                     PUSH nat 277268403626896220162999269216087595045 ;
                                     DUP 3 ;
                                     MUL ;
                                     LSR ;
                                     SWAP ;
                                     DROP }
                                   {} ;
                                PUSH nat 0 ;
                                PUSH int 2 ;
                                PUSH nat 13 ;
                                PUSH nat 1 ;
                                LSL ;
                                DUP 5 ;
                                EDIV ;
                                IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                INT ;
                                EDIV ;
                                IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CDR ; SWAP ; DROP } ;
                                COMPARE ;
                                NEQ ;
                                IF { PUSH nat 128 ;
                                     PUSH nat 225923453940442621947126027127485391333 ;
                                     DUP 3 ;
                                     MUL ;
                                     LSR ;
                                     SWAP ;
                                     DROP }
                                   {} ;
                                PUSH nat 0 ;
                                PUSH int 2 ;
                                PUSH nat 14 ;
                                PUSH nat 1 ;
                                LSL ;
                                DUP 5 ;
                                EDIV ;
                                IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                INT ;
                                EDIV ;
                                IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CDR ; SWAP ; DROP } ;
                                COMPARE ;
                                NEQ ;
                                IF { PUSH nat 128 ;
                                     PUSH nat 149997214084966997727330242082538205943 ;
                                     DUP 3 ;
                                     MUL ;
                                     LSR ;
                                     SWAP ;
                                     DROP }
                                   {} ;
                                PUSH nat 0 ;
                                PUSH int 2 ;
                                PUSH nat 15 ;
                                PUSH nat 1 ;
                                LSL ;
                                DUP 5 ;
                                EDIV ;
                                IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                INT ;
                                EDIV ;
                                IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CDR ; SWAP ; DROP } ;
                                COMPARE ;
                                NEQ ;
                                IF { PUSH nat 128 ;
                                     PUSH nat 66119101136024775622716233608466517926 ;
                                     DUP 3 ;
                                     MUL ;
                                     LSR ;
                                     SWAP ;
                                     DROP }
                                   {} ;
                                PUSH nat 0 ;
                                PUSH int 2 ;
                                PUSH nat 16 ;
                                PUSH nat 1 ;
                                LSL ;
                                DUP 5 ;
                                EDIV ;
                                IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                INT ;
                                EDIV ;
                                IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CDR ; SWAP ; DROP } ;
                                COMPARE ;
                                NEQ ;
                                IF { PUSH nat 128 ;
                                     PUSH nat 12847376061809297530290974190478138313 ;
                                     DUP 3 ;
                                     MUL ;
                                     LSR ;
                                     SWAP ;
                                     DROP }
                                   {} ;
                                PUSH nat 0 ;
                                PUSH int 2 ;
                                PUSH nat 17 ;
                                PUSH nat 1 ;
                                LSL ;
                                DUP 5 ;
                                EDIV ;
                                IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                INT ;
                                EDIV ;
                                IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CDR ; SWAP ; DROP } ;
                                COMPARE ;
                                NEQ ;
                                IF { PUSH nat 128 ;
                                     PUSH nat 485053260817066172746253684029974020 ;
                                     DUP 3 ;
                                     MUL ;
                                     LSR ;
                                     SWAP ;
                                     DROP }
                                   {} ;
                                PUSH nat 0 ;
                                PUSH int 2 ;
                                PUSH nat 18 ;
                                PUSH nat 1 ;
                                LSL ;
                                DUP 5 ;
                                EDIV ;
                                IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                INT ;
                                EDIV ;
                                IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CDR ; SWAP ; DROP } ;
                                COMPARE ;
                                NEQ ;
                                IF { PUSH nat 128 ;
                                     PUSH nat 691415978906521570653435304214168 ;
                                     DUP 3 ;
                                     MUL ;
                                     LSR ;
                                     SWAP ;
                                     DROP }
                                   {} ;
                                PUSH nat 0 ;
                                PUSH int 2 ;
                                PUSH nat 19 ;
                                PUSH nat 1 ;
                                LSL ;
                                DUP 5 ;
                                EDIV ;
                                IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                INT ;
                                EDIV ;
                                IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CDR ; SWAP ; DROP } ;
                                COMPARE ;
                                NEQ ;
                                IF { PUSH nat 128 ;
                                     PUSH nat 1404880482679654955896180642 ;
                                     DUP 3 ;
                                     MUL ;
                                     LSR ;
                                     SWAP ;
                                     DROP }
                                   {} ;
                                PUSH int 0 ;
                                DUP 5 ;
                                COMPARE ;
                                GT ;
                                IF { DUP ;
                                     PUSH int 1 ;
                                     PUSH nat 256 ;
                                     PUSH nat 1 ;
                                     LSL ;
                                     INT ;
                                     SUB ;
                                     ABS ;
                                     EDIV ;
                                     IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                     SWAP ;
                                     DROP }
                                   {} ;
                                PUSH nat 0 ;
                                PUSH nat 32 ;
                                PUSH nat 1 ;
                                LSL ;
                                INT ;
                                DUP 3 ;
                                INT ;
                                EDIV ;
                                IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CDR ; SWAP ; DROP } ;
                                COMPARE ;
                                EQ ;
                                IF { PUSH nat 0 } { PUSH nat 1 } ;
                                PUSH nat 32 ;
                                DUP 3 ;
                                LSR ;
                                ADD ;
                                DUP ;
                                DIP { DIG 3 ; DROP } ;
                                DUG 3 ;
                                DROP 3 ;
                                DUG 1 ;
                                DROP } ;
                            LAMBDA
                              (pair nat (lambda int nat))
                              int
                              { UNPAIR 2 ;
                                PUSH unit Unit ;
                                PUSH nat 4295128739 ;
                                DUP 3 ;
                                COMPARE ;
                                GE ;
                                IF { PUSH nat 1461446703485210103287273052203988822378723970342 ;
                                     DUP 3 ;
                                     COMPARE ;
                                     LT ;
                                     IF { PUSH bool True } { PUSH bool False } }
                                   { PUSH bool False } ;
                                NOT ;
                                IF { PUSH string "R" ; FAILWITH } {} ;
                                PUSH nat 32 ;
                                DUP 3 ;
                                LSL ;
                                DUP ;
                                PUSH nat 0 ;
                                PUSH nat 0 ;
                                PUSH nat 0 ;
                                PUSH nat 128 ;
                                PUSH nat 1 ;
                                LSL ;
                                PUSH nat 1 ;
                                DUP 6 ;
                                ADD ;
                                COMPARE ;
                                GT ;
                                IF { PUSH nat 1 } { PUSH nat 0 } ;
                                DIP { DIG 1 ; DROP } ;
                                DUG 1 ;
                                PUSH nat 7 ;
                                DUP 3 ;
                                LSL ;
                                SWAP ;
                                DROP ;
                                DUP ;
                                DUP 4 ;
                                OR ;
                                DIP { DIG 2 ; DROP } ;
                                DUG 2 ;
                                DUP ;
                                DUP 5 ;
                                LSR ;
                                DIP { DIG 3 ; DROP } ;
                                DUG 3 ;
                                PUSH nat 64 ;
                                PUSH nat 1 ;
                                LSL ;
                                PUSH nat 1 ;
                                DUP 6 ;
                                ADD ;
                                COMPARE ;
                                GT ;
                                IF { PUSH nat 1 } { PUSH nat 0 } ;
                                DIP { DIG 1 ; DROP } ;
                                DUG 1 ;
                                PUSH nat 6 ;
                                DUP 3 ;
                                LSL ;
                                SWAP ;
                                DROP ;
                                DUP ;
                                DUP 4 ;
                                OR ;
                                DIP { DIG 2 ; DROP } ;
                                DUG 2 ;
                                DUP ;
                                DUP 5 ;
                                LSR ;
                                DIP { DIG 3 ; DROP } ;
                                DUG 3 ;
                                PUSH nat 32 ;
                                PUSH nat 1 ;
                                LSL ;
                                PUSH nat 1 ;
                                DUP 6 ;
                                ADD ;
                                COMPARE ;
                                GT ;
                                IF { PUSH nat 1 } { PUSH nat 0 } ;
                                DIP { DIG 1 ; DROP } ;
                                DUG 1 ;
                                PUSH nat 5 ;
                                DUP 3 ;
                                LSL ;
                                SWAP ;
                                DROP ;
                                DUP ;
                                DUP 4 ;
                                OR ;
                                DIP { DIG 2 ; DROP } ;
                                DUG 2 ;
                                DUP ;
                                DUP 5 ;
                                LSR ;
                                DIP { DIG 3 ; DROP } ;
                                DUG 3 ;
                                PUSH nat 16 ;
                                PUSH nat 1 ;
                                LSL ;
                                PUSH nat 1 ;
                                DUP 6 ;
                                ADD ;
                                COMPARE ;
                                GT ;
                                IF { PUSH nat 1 } { PUSH nat 0 } ;
                                DIP { DIG 1 ; DROP } ;
                                DUG 1 ;
                                PUSH nat 4 ;
                                DUP 3 ;
                                LSL ;
                                SWAP ;
                                DROP ;
                                DUP ;
                                DUP 4 ;
                                OR ;
                                DIP { DIG 2 ; DROP } ;
                                DUG 2 ;
                                DUP ;
                                DUP 5 ;
                                LSR ;
                                DIP { DIG 3 ; DROP } ;
                                DUG 3 ;
                                PUSH nat 8 ;
                                PUSH nat 1 ;
                                LSL ;
                                PUSH nat 1 ;
                                DUP 6 ;
                                ADD ;
                                COMPARE ;
                                GT ;
                                IF { PUSH nat 1 } { PUSH nat 0 } ;
                                DIP { DIG 1 ; DROP } ;
                                DUG 1 ;
                                PUSH nat 3 ;
                                DUP 3 ;
                                LSL ;
                                SWAP ;
                                DROP ;
                                DUP ;
                                DUP 4 ;
                                OR ;
                                DIP { DIG 2 ; DROP } ;
                                DUG 2 ;
                                DUP ;
                                DUP 5 ;
                                LSR ;
                                DIP { DIG 3 ; DROP } ;
                                DUG 3 ;
                                PUSH nat 4 ;
                                PUSH nat 1 ;
                                LSL ;
                                PUSH nat 1 ;
                                DUP 6 ;
                                ADD ;
                                COMPARE ;
                                GT ;
                                IF { PUSH nat 1 } { PUSH nat 0 } ;
                                DIP { DIG 1 ; DROP } ;
                                DUG 1 ;
                                PUSH nat 2 ;
                                DUP 3 ;
                                LSL ;
                                SWAP ;
                                DROP ;
                                DUP ;
                                DUP 4 ;
                                OR ;
                                DIP { DIG 2 ; DROP } ;
                                DUG 2 ;
                                DUP ;
                                DUP 5 ;
                                LSR ;
                                DIP { DIG 3 ; DROP } ;
                                DUG 3 ;
                                PUSH nat 2 ;
                                PUSH nat 1 ;
                                LSL ;
                                PUSH nat 1 ;
                                DUP 6 ;
                                ADD ;
                                COMPARE ;
                                GT ;
                                IF { PUSH nat 1 } { PUSH nat 0 } ;
                                DIP { DIG 1 ; DROP } ;
                                DUG 1 ;
                                PUSH nat 1 ;
                                DUP 3 ;
                                LSL ;
                                SWAP ;
                                DROP ;
                                DUP ;
                                DUP 4 ;
                                OR ;
                                DIP { DIG 2 ; DROP } ;
                                DUG 2 ;
                                DUP ;
                                DUP 5 ;
                                LSR ;
                                DIP { DIG 3 ; DROP } ;
                                DUG 3 ;
                                PUSH nat 1 ;
                                DUP 5 ;
                                COMPARE ;
                                GT ;
                                IF { PUSH nat 1 } { PUSH nat 0 } ;
                                SWAP ;
                                DROP ;
                                DUP ;
                                DUP 4 ;
                                OR ;
                                DIP { DIG 2 ; DROP } ;
                                DUG 2 ;
                                PUSH nat 128 ;
                                DUP 4 ;
                                COMPARE ;
                                GE ;
                                IF { PUSH int 127 ;
                                     DUP 4 ;
                                     INT ;
                                     SUB ;
                                     ISNAT ;
                                     IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                     DUP ;
                                     DUP 7 ;
                                     LSR ;
                                     DIP { DIG 4 ; DROP } ;
                                     DUG 4 ;
                                     DROP }
                                   { DUP 3 ;
                                     INT ;
                                     PUSH int 127 ;
                                     SUB ;
                                     ISNAT ;
                                     IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                     DUP ;
                                     DUP 7 ;
                                     LSL ;
                                     DIP { DIG 4 ; DROP } ;
                                     DUG 4 ;
                                     DROP } ;
                                PUSH nat 64 ;
                                PUSH nat 1 ;
                                LSL ;
                                INT ;
                                PUSH int 128 ;
                                DUP 5 ;
                                INT ;
                                SUB ;
                                MUL ;
                                PUSH nat 127 ;
                                DUP 6 ;
                                DUP 7 ;
                                MUL ;
                                LSR ;
                                DIP { DIG 4 ; DROP } ;
                                DUG 4 ;
                                PUSH nat 128 ;
                                DUP 6 ;
                                LSR ;
                                DIP { DIG 1 ; DROP } ;
                                DUG 1 ;
                                PUSH nat 63 ;
                                DUP 3 ;
                                LSL ;
                                DUP 2 ;
                                ISNAT ;
                                IF_NONE { PUSH nat 0 } {} ;
                                OR ;
                                INT ;
                                SWAP ;
                                DROP ;
                                DUP 2 ;
                                DUP 6 ;
                                LSR ;
                                DIP { DIG 4 ; DROP } ;
                                DUG 4 ;
                                PUSH nat 127 ;
                                DUP 6 ;
                                DUP 7 ;
                                MUL ;
                                LSR ;
                                DIP { DIG 4 ; DROP } ;
                                DUG 4 ;
                                PUSH nat 128 ;
                                DUP 6 ;
                                LSR ;
                                DIP { DIG 1 ; DROP } ;
                                DUG 1 ;
                                PUSH nat 62 ;
                                DUP 3 ;
                                LSL ;
                                DUP 2 ;
                                ISNAT ;
                                IF_NONE { PUSH nat 0 } {} ;
                                OR ;
                                INT ;
                                SWAP ;
                                DROP ;
                                DUP 2 ;
                                DUP 6 ;
                                LSR ;
                                DIP { DIG 4 ; DROP } ;
                                DUG 4 ;
                                PUSH nat 127 ;
                                DUP 6 ;
                                DUP 7 ;
                                MUL ;
                                LSR ;
                                DIP { DIG 4 ; DROP } ;
                                DUG 4 ;
                                PUSH nat 128 ;
                                DUP 6 ;
                                LSR ;
                                DIP { DIG 1 ; DROP } ;
                                DUG 1 ;
                                PUSH nat 61 ;
                                DUP 3 ;
                                LSL ;
                                DUP 2 ;
                                ISNAT ;
                                IF_NONE { PUSH nat 0 } {} ;
                                OR ;
                                INT ;
                                SWAP ;
                                DROP ;
                                DUP 2 ;
                                DUP 6 ;
                                LSR ;
                                DIP { DIG 4 ; DROP } ;
                                DUG 4 ;
                                PUSH nat 127 ;
                                DUP 6 ;
                                DUP 7 ;
                                MUL ;
                                LSR ;
                                DIP { DIG 4 ; DROP } ;
                                DUG 4 ;
                                PUSH nat 128 ;
                                DUP 6 ;
                                LSR ;
                                DIP { DIG 1 ; DROP } ;
                                DUG 1 ;
                                PUSH nat 60 ;
                                DUP 3 ;
                                LSL ;
                                DUP 2 ;
                                ISNAT ;
                                IF_NONE { PUSH nat 0 } {} ;
                                OR ;
                                INT ;
                                SWAP ;
                                DROP ;
                                DUP 2 ;
                                DUP 6 ;
                                LSR ;
                                DIP { DIG 4 ; DROP } ;
                                DUG 4 ;
                                PUSH nat 127 ;
                                DUP 6 ;
                                DUP 7 ;
                                MUL ;
                                LSR ;
                                DIP { DIG 4 ; DROP } ;
                                DUG 4 ;
                                PUSH nat 128 ;
                                DUP 6 ;
                                LSR ;
                                DIP { DIG 1 ; DROP } ;
                                DUG 1 ;
                                PUSH nat 59 ;
                                DUP 3 ;
                                LSL ;
                                DUP 2 ;
                                ISNAT ;
                                IF_NONE { PUSH nat 0 } {} ;
                                OR ;
                                INT ;
                                SWAP ;
                                DROP ;
                                DUP 2 ;
                                DUP 6 ;
                                LSR ;
                                DIP { DIG 4 ; DROP } ;
                                DUG 4 ;
                                PUSH nat 127 ;
                                DUP 6 ;
                                DUP 7 ;
                                MUL ;
                                LSR ;
                                DIP { DIG 4 ; DROP } ;
                                DUG 4 ;
                                PUSH nat 128 ;
                                DUP 6 ;
                                LSR ;
                                DIP { DIG 1 ; DROP } ;
                                DUG 1 ;
                                PUSH nat 58 ;
                                DUP 3 ;
                                LSL ;
                                DUP 2 ;
                                ISNAT ;
                                IF_NONE { PUSH nat 0 } {} ;
                                OR ;
                                INT ;
                                SWAP ;
                                DROP ;
                                DUP 2 ;
                                DUP 6 ;
                                LSR ;
                                DIP { DIG 4 ; DROP } ;
                                DUG 4 ;
                                PUSH nat 127 ;
                                DUP 6 ;
                                DUP 7 ;
                                MUL ;
                                LSR ;
                                DIP { DIG 4 ; DROP } ;
                                DUG 4 ;
                                PUSH nat 128 ;
                                DUP 6 ;
                                LSR ;
                                DIP { DIG 1 ; DROP } ;
                                DUG 1 ;
                                PUSH nat 57 ;
                                DUP 3 ;
                                LSL ;
                                DUP 2 ;
                                ISNAT ;
                                IF_NONE { PUSH nat 0 } {} ;
                                OR ;
                                INT ;
                                SWAP ;
                                DROP ;
                                DUP 2 ;
                                DUP 6 ;
                                LSR ;
                                DIP { DIG 4 ; DROP } ;
                                DUG 4 ;
                                PUSH nat 127 ;
                                DUP 6 ;
                                DUP 7 ;
                                MUL ;
                                LSR ;
                                DIP { DIG 4 ; DROP } ;
                                DUG 4 ;
                                PUSH nat 128 ;
                                DUP 6 ;
                                LSR ;
                                DIP { DIG 1 ; DROP } ;
                                DUG 1 ;
                                PUSH nat 56 ;
                                DUP 3 ;
                                LSL ;
                                DUP 2 ;
                                ISNAT ;
                                IF_NONE { PUSH nat 0 } {} ;
                                OR ;
                                INT ;
                                SWAP ;
                                DROP ;
                                DUP 2 ;
                                DUP 6 ;
                                LSR ;
                                DIP { DIG 4 ; DROP } ;
                                DUG 4 ;
                                PUSH nat 127 ;
                                DUP 6 ;
                                DUP 7 ;
                                MUL ;
                                LSR ;
                                DIP { DIG 4 ; DROP } ;
                                DUG 4 ;
                                PUSH nat 128 ;
                                DUP 6 ;
                                LSR ;
                                DIP { DIG 1 ; DROP } ;
                                DUG 1 ;
                                PUSH nat 55 ;
                                DUP 3 ;
                                LSL ;
                                DUP 2 ;
                                ISNAT ;
                                IF_NONE { PUSH nat 0 } {} ;
                                OR ;
                                INT ;
                                SWAP ;
                                DROP ;
                                DUP 2 ;
                                DUP 6 ;
                                LSR ;
                                DIP { DIG 4 ; DROP } ;
                                DUG 4 ;
                                PUSH nat 127 ;
                                DUP 6 ;
                                DUP 7 ;
                                MUL ;
                                LSR ;
                                DIP { DIG 4 ; DROP } ;
                                DUG 4 ;
                                PUSH nat 128 ;
                                DUP 6 ;
                                LSR ;
                                DIP { DIG 1 ; DROP } ;
                                DUG 1 ;
                                PUSH nat 54 ;
                                DUP 3 ;
                                LSL ;
                                DUP 2 ;
                                ISNAT ;
                                IF_NONE { PUSH nat 0 } {} ;
                                OR ;
                                INT ;
                                SWAP ;
                                DROP ;
                                DUP 2 ;
                                DUP 6 ;
                                LSR ;
                                DIP { DIG 4 ; DROP } ;
                                DUG 4 ;
                                PUSH nat 127 ;
                                DUP 6 ;
                                DUP 7 ;
                                MUL ;
                                LSR ;
                                DIP { DIG 4 ; DROP } ;
                                DUG 4 ;
                                PUSH nat 128 ;
                                DUP 6 ;
                                LSR ;
                                DIP { DIG 1 ; DROP } ;
                                DUG 1 ;
                                PUSH nat 53 ;
                                DUP 3 ;
                                LSL ;
                                DUP 2 ;
                                ISNAT ;
                                IF_NONE { PUSH nat 0 } {} ;
                                OR ;
                                INT ;
                                SWAP ;
                                DROP ;
                                DUP 2 ;
                                DUP 6 ;
                                LSR ;
                                DIP { DIG 4 ; DROP } ;
                                DUG 4 ;
                                PUSH nat 127 ;
                                DUP 6 ;
                                DUP 7 ;
                                MUL ;
                                LSR ;
                                DIP { DIG 4 ; DROP } ;
                                DUG 4 ;
                                PUSH nat 128 ;
                                DUP 6 ;
                                LSR ;
                                DIP { DIG 1 ; DROP } ;
                                DUG 1 ;
                                PUSH nat 52 ;
                                DUP 3 ;
                                LSL ;
                                DUP 2 ;
                                ISNAT ;
                                IF_NONE { PUSH nat 0 } {} ;
                                OR ;
                                INT ;
                                SWAP ;
                                DROP ;
                                DUP 2 ;
                                DUP 6 ;
                                LSR ;
                                DIP { DIG 4 ; DROP } ;
                                DUG 4 ;
                                PUSH nat 127 ;
                                DUP 6 ;
                                DUP 7 ;
                                MUL ;
                                LSR ;
                                DIP { DIG 4 ; DROP } ;
                                DUG 4 ;
                                PUSH nat 128 ;
                                DUP 6 ;
                                LSR ;
                                DIP { DIG 1 ; DROP } ;
                                DUG 1 ;
                                PUSH nat 51 ;
                                DUP 3 ;
                                LSL ;
                                DUP 2 ;
                                ISNAT ;
                                IF_NONE { PUSH nat 0 } {} ;
                                OR ;
                                INT ;
                                SWAP ;
                                DROP ;
                                DUP 2 ;
                                DUP 6 ;
                                LSR ;
                                DIP { DIG 4 ; DROP } ;
                                DUG 4 ;
                                PUSH nat 127 ;
                                DUP 6 ;
                                DUP 7 ;
                                MUL ;
                                LSR ;
                                DIP { DIG 4 ; DROP } ;
                                DUG 4 ;
                                PUSH nat 128 ;
                                DUP 6 ;
                                LSR ;
                                DIP { DIG 1 ; DROP } ;
                                DUG 1 ;
                                PUSH nat 50 ;
                                DUP 3 ;
                                LSL ;
                                DUP 2 ;
                                ISNAT ;
                                IF_NONE { PUSH nat 0 } {} ;
                                OR ;
                                INT ;
                                SWAP ;
                                DROP ;
                                PUSH int 255738958999603826347141 ;
                                DUP 2 ;
                                MUL ;
                                PUSH nat 128 ;
                                PUSH nat 1 ;
                                LSL ;
                                INT ;
                                PUSH int 3402992956809132418596140100660247210 ;
                                DUP 3 ;
                                SUB ;
                                EDIV ;
                                IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                PUSH nat 128 ;
                                PUSH nat 1 ;
                                LSL ;
                                INT ;
                                PUSH int 291339464771989622907027621153398088495 ;
                                DUP 4 ;
                                ADD ;
                                EDIV ;
                                IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                DUP ;
                                DUP 3 ;
                                COMPARE ;
                                EQ ;
                                IF { DUP 2 }
                                   { DUP 11 ;
                                     DUP 13 ;
                                     DUP 3 ;
                                     EXEC ;
                                     COMPARE ;
                                     LE ;
                                     IF { DUP } { DUP 2 } } ;
                                DUP ;
                                DIP { DIG 10 ; DROP } ;
                                DUG 10 ;
                                DROP 10 ;
                                DUG 2 ;
                                DROP 2 } ;
                            LAMBDA
                              (pair nat nat nat)
                              bool
                              { UNPAIR 3 ;
                                PUSH unit Unit ;
                                PUSH bool False ;
                                DUP 3 ;
                                DUP 5 ;
                                COMPARE ;
                                LE ;
                                IF { DUP 3 ;
                                     DUP 6 ;
                                     COMPARE ;
                                     LE ;
                                     IF { PUSH bool True } { PUSH bool False } }
                                   { PUSH bool False } ;
                                IF { DUP 5 ;
                                     DUP 5 ;
                                     COMPARE ;
                                     LE ;
                                     SWAP ;
                                     DROP ;
                                     DUP ;
                                     DIP { DIG 1 ; DROP } ;
                                     DUG 1 }
                                   { DUP 3 ;
                                     DUP 5 ;
                                     COMPARE ;
                                     GT ;
                                     IF { DUP 4 } { PUSH nat 32 ; PUSH nat 1 ; DUP 6 ; ADD ; LSL } ;
                                     DUP 4 ;
                                     DUP 7 ;
                                     COMPARE ;
                                     GT ;
                                     IF { DUP 6 } { PUSH nat 32 ; PUSH nat 1 ; DUP 8 ; ADD ; LSL } ;
                                     DUP ;
                                     DUP 3 ;
                                     COMPARE ;
                                     LE ;
                                     DIP { DIG 2 ; DROP } ;
                                     DUG 2 ;
                                     DUP 3 ;
                                     DIP { DIG 3 ; DROP } ;
                                     DUG 3 ;
                                     DROP 2 } ;
                                DROP ;
                                DUG 3 ;
                                DROP 3 } ;
                            LAMBDA
                              (pair (big_map
                                       nat
                                       (pair (nat %blockTimestamp)
                                             (pair (int %tickCumulative)
                                                   (nat %secondsPerLiquidityCumulativeX128)
                                                   (bool %initialized))))
                                    nat
                                    nat
                                    nat
                                    nat
                                    (lambda (pair nat nat nat) bool))
                              (pair (pair (nat %blockTimestamp)
                                          (pair (int %tickCumulative)
                                                (nat %secondsPerLiquidityCumulativeX128)
                                                (bool %initialized)))
                                    (pair (nat %blockTimestamp)
                                          (pair (int %tickCumulative)
                                                (nat %secondsPerLiquidityCumulativeX128)
                                                (bool %initialized))))
                              { UNPAIR 6 ;
                                PUSH unit Unit ;
                                DUP 6 ;
                                INT ;
                                PUSH nat 1 ;
                                DUP 7 ;
                                ADD ;
                                INT ;
                                EDIV ;
                                IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CDR ; SWAP ; DROP } ;
                                PUSH int 1 ;
                                DUP 8 ;
                                DUP 3 ;
                                ADD ;
                                INT ;
                                SUB ;
                                PUSH bool False ;
                                PUSH nat 0 ;
                                PAIR ;
                                PUSH int 0 ;
                                PAIR ;
                                PUSH nat 0 ;
                                PAIR ;
                                PUSH bool False ;
                                PUSH nat 0 ;
                                PAIR ;
                                PUSH int 0 ;
                                PAIR ;
                                PUSH nat 0 ;
                                PAIR ;
                                PUSH nat 0 ;
                                PUSH bool True ;
                                DUP ;
                                LOOP { PUSH int 2 ;
                                       DUP 6 ;
                                       DUP 8 ;
                                       INT ;
                                       ADD ;
                                       EDIV ;
                                       IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                       ISNAT ;
                                       IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                       DIP { DIG 1 ; DROP } ;
                                       DUG 1 ;
                                       DUP 8 ;
                                       DUP 13 ;
                                       INT ;
                                       DUP 4 ;
                                       INT ;
                                       EDIV ;
                                       IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CDR ; SWAP ; DROP } ;
                                       GET ;
                                       IF_NONE
                                         { PUSH string "observations" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                         {} ;
                                       DIP { DIG 3 ; DROP } ;
                                       DUG 3 ;
                                       DUP 4 ;
                                       CDR ;
                                       CDR ;
                                       CDR ;
                                       NOT ;
                                       IF { PUSH nat 1 ; DUP 3 ; ADD ; DIP { DIG 5 ; DROP } ; DUG 5 }
                                          { DUP 8 ;
                                            DUP 13 ;
                                            INT ;
                                            PUSH nat 1 ;
                                            DUP 5 ;
                                            ADD ;
                                            INT ;
                                            EDIV ;
                                            IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CDR ; SWAP ; DROP } ;
                                            GET ;
                                            IF_NONE
                                              { PUSH string "observations" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                              {} ;
                                            DIP { DIG 2 ; DROP } ;
                                            DUG 2 ;
                                            DUP 13 ;
                                            DUP 11 ;
                                            DUP 6 ;
                                            CAR ;
                                            PAIR ;
                                            DUP 11 ;
                                            PAIR ;
                                            EXEC ;
                                            DUP ;
                                            IF { DUP 14 ;
                                                 DUP 5 ;
                                                 CAR ;
                                                 DUP 13 ;
                                                 PAIR ;
                                                 DUP 12 ;
                                                 PAIR ;
                                                 EXEC ;
                                                 IF { PUSH bool True } { PUSH bool False } }
                                               { PUSH bool False } ;
                                            IF { PUSH bool False ; DIP { DIG 1 ; DROP } ; DUG 1 } {} ;
                                            DUP ;
                                            NOT ;
                                            IF { PUSH int 1 ; DUP 4 ; INT ; SUB ; DIP { DIG 5 ; DROP } ; DUG 5 }
                                               { PUSH nat 1 ; DUP 4 ; ADD ; DIP { DIG 6 ; DROP } ; DUG 6 } ;
                                            DROP } ;
                                       DUP } ;
                                DUP 3 ;
                                DUP 5 ;
                                PAIR ;
                                DIP { DIG 6 ; DROP } ;
                                DUG 6 ;
                                DROP 6 ;
                                DUG 6 ;
                                DROP 6 } ;
                            LAMBDA
                              (pair (pair (nat %blockTimestamp)
                                          (pair (int %tickCumulative)
                                                (nat %secondsPerLiquidityCumulativeX128)
                                                (bool %initialized)))
                                    nat
                                    int
                                    nat)
                              (pair (nat %blockTimestamp)
                                    (pair (int %tickCumulative)
                                          (nat %secondsPerLiquidityCumulativeX128)
                                          (bool %initialized)))
                              { UNPAIR 4 ;
                                PUSH unit Unit ;
                                DUP 2 ;
                                CAR ;
                                INT ;
                                DUP 4 ;
                                INT ;
                                SUB ;
                                ISNAT ;
                                IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                DUP ;
                                INT ;
                                DUP 6 ;
                                MUL ;
                                DUP 4 ;
                                CDR ;
                                CAR ;
                                ADD ;
                                PUSH nat 0 ;
                                DUP 8 ;
                                COMPARE ;
                                GT ;
                                IF { DUP 7 } { PUSH nat 1 } ;
                                PUSH nat 128 ;
                                DUP 4 ;
                                LSL ;
                                EDIV ;
                                IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                DUP 5 ;
                                CDR ;
                                CDR ;
                                CAR ;
                                ADD ;
                                PUSH bool True ;
                                DUP 2 ;
                                PAIR ;
                                DUP 3 ;
                                PAIR ;
                                DUP 7 ;
                                PAIR ;
                                DUP ;
                                DIP { DIG 4 ; DROP } ;
                                DUG 4 ;
                                DROP 4 ;
                                DUG 4 ;
                                DROP 4 } ;
                            LAMBDA
                              (pair (big_map
                                       nat
                                       (pair (nat %blockTimestamp)
                                             (pair (int %tickCumulative)
                                                   (nat %secondsPerLiquidityCumulativeX128)
                                                   (bool %initialized))))
                                    nat
                                    nat
                                    int
                                    nat
                                    nat
                                    nat
                                    (lambda
                                       (pair (big_map
                                                nat
                                                (pair (nat %blockTimestamp)
                                                      (pair (int %tickCumulative)
                                                            (nat %secondsPerLiquidityCumulativeX128)
                                                            (bool %initialized))))
                                             nat
                                             nat
                                             nat
                                             nat
                                             (lambda (pair nat nat nat) bool))
                                       (pair (pair (nat %blockTimestamp)
                                                   (pair (int %tickCumulative)
                                                         (nat %secondsPerLiquidityCumulativeX128)
                                                         (bool %initialized)))
                                             (pair (nat %blockTimestamp)
                                                   (pair (int %tickCumulative)
                                                         (nat %secondsPerLiquidityCumulativeX128)
                                                         (bool %initialized)))))
                                    (lambda
                                       (pair (pair (nat %blockTimestamp)
                                                   (pair (int %tickCumulative)
                                                         (nat %secondsPerLiquidityCumulativeX128)
                                                         (bool %initialized)))
                                             nat
                                             int
                                             nat)
                                       (pair (nat %blockTimestamp)
                                             (pair (int %tickCumulative)
                                                   (nat %secondsPerLiquidityCumulativeX128)
                                                   (bool %initialized))))
                                    (lambda (pair nat nat nat) bool))
                              (pair (pair (nat %blockTimestamp)
                                          (pair (int %tickCumulative)
                                                (nat %secondsPerLiquidityCumulativeX128)
                                                (bool %initialized)))
                                    (pair (nat %blockTimestamp)
                                          (pair (int %tickCumulative)
                                                (nat %secondsPerLiquidityCumulativeX128)
                                                (bool %initialized))))
                              { UNPAIR 10 ;
                                PUSH unit Unit ;
                                DUP 2 ;
                                DUP 7 ;
                                GET ;
                                IF_NONE
                                  { PUSH string "observations" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                  {} ;
                                PUSH bool False ;
                                PUSH nat 0 ;
                                PAIR ;
                                PUSH int 0 ;
                                PAIR ;
                                PUSH nat 0 ;
                                PAIR ;
                                DUP 13 ;
                                DUP 7 ;
                                DUP 4 ;
                                CAR ;
                                PAIR ;
                                DUP 7 ;
                                PAIR ;
                                EXEC ;
                                IF { DUP 6 ;
                                     DUP 3 ;
                                     CAR ;
                                     COMPARE ;
                                     EQ ;
                                     IF { DUP ; DUP 3 ; PAIR ; DIP { DIG 2 ; DROP } ; DUG 2 }
                                        { DUP 12 ;
                                          DUP 10 ;
                                          DUP 9 ;
                                          PAIR ;
                                          DUP 8 ;
                                          PAIR ;
                                          DUP 4 ;
                                          PAIR ;
                                          EXEC ;
                                          DUP 3 ;
                                          PAIR ;
                                          DIP { DIG 2 ; DROP } ;
                                          DUG 2 } }
                                   { DUP 4 ;
                                     DUP 11 ;
                                     INT ;
                                     PUSH nat 1 ;
                                     DUP 11 ;
                                     ADD ;
                                     INT ;
                                     EDIV ;
                                     IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CDR ; SWAP ; DROP } ;
                                     GET ;
                                     IF_NONE
                                       { PUSH string "observations" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                       {} ;
                                     DIP { DIG 1 ; DROP } ;
                                     DUG 1 ;
                                     DUP 2 ;
                                     CDR ;
                                     CDR ;
                                     CDR ;
                                     NOT ;
                                     IF { DUP 4 ;
                                          PUSH nat 0 ;
                                          GET ;
                                          IF_NONE
                                            { PUSH string "observations" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                            {} ;
                                          DIP { DIG 1 ; DROP } ;
                                          DUG 1 }
                                        {} ;
                                     DUP 13 ;
                                     DUP 7 ;
                                     DUP 4 ;
                                     CAR ;
                                     PAIR ;
                                     DUP 7 ;
                                     PAIR ;
                                     EXEC ;
                                     NOT ;
                                     IF { PUSH string "OLD" ; FAILWITH } {} ;
                                     DUP 11 ;
                                     DUP 14 ;
                                     DUP 12 ;
                                     PAIR ;
                                     DUP 10 ;
                                     PAIR ;
                                     DUP 8 ;
                                     PAIR ;
                                     DUP 7 ;
                                     PAIR ;
                                     DUP 6 ;
                                     PAIR ;
                                     EXEC ;
                                     DIP { DIG 2 ; DROP } ;
                                     DUG 2 } ;
                                DROP 2 ;
                                DUG 10 ;
                                DROP 10 } ;
                            LAMBDA
                              (pair (big_map
                                       nat
                                       (pair (nat %blockTimestamp)
                                             (pair (int %tickCumulative)
                                                   (nat %secondsPerLiquidityCumulativeX128)
                                                   (bool %initialized))))
                                    nat
                                    nat
                                    int
                                    nat
                                    nat
                                    nat
                                    (lambda
                                       (pair (big_map
                                                nat
                                                (pair (nat %blockTimestamp)
                                                      (pair (int %tickCumulative)
                                                            (nat %secondsPerLiquidityCumulativeX128)
                                                            (bool %initialized))))
                                             nat
                                             nat
                                             int
                                             nat
                                             nat
                                             nat
                                             (lambda
                                                (pair (big_map
                                                         nat
                                                         (pair (nat %blockTimestamp)
                                                               (pair (int %tickCumulative)
                                                                     (nat %secondsPerLiquidityCumulativeX128)
                                                                     (bool %initialized))))
                                                      nat
                                                      nat
                                                      nat
                                                      nat
                                                      (lambda (pair nat nat nat) bool))
                                                (pair (pair (nat %blockTimestamp)
                                                            (pair (int %tickCumulative)
                                                                  (nat %secondsPerLiquidityCumulativeX128)
                                                                  (bool %initialized)))
                                                      (pair (nat %blockTimestamp)
                                                            (pair (int %tickCumulative)
                                                                  (nat %secondsPerLiquidityCumulativeX128)
                                                                  (bool %initialized)))))
                                             (lambda
                                                (pair (pair (nat %blockTimestamp)
                                                            (pair (int %tickCumulative)
                                                                  (nat %secondsPerLiquidityCumulativeX128)
                                                                  (bool %initialized)))
                                                      nat
                                                      int
                                                      nat)
                                                (pair (nat %blockTimestamp)
                                                      (pair (int %tickCumulative)
                                                            (nat %secondsPerLiquidityCumulativeX128)
                                                            (bool %initialized))))
                                             (lambda (pair nat nat nat) bool))
                                       (pair (pair (nat %blockTimestamp)
                                                   (pair (int %tickCumulative)
                                                         (nat %secondsPerLiquidityCumulativeX128)
                                                         (bool %initialized)))
                                             (pair (nat %blockTimestamp)
                                                   (pair (int %tickCumulative)
                                                         (nat %secondsPerLiquidityCumulativeX128)
                                                         (bool %initialized)))))
                                    (lambda
                                       (pair (big_map
                                                nat
                                                (pair (nat %blockTimestamp)
                                                      (pair (int %tickCumulative)
                                                            (nat %secondsPerLiquidityCumulativeX128)
                                                            (bool %initialized))))
                                             nat
                                             nat
                                             nat
                                             nat
                                             (lambda (pair nat nat nat) bool))
                                       (pair (pair (nat %blockTimestamp)
                                                   (pair (int %tickCumulative)
                                                         (nat %secondsPerLiquidityCumulativeX128)
                                                         (bool %initialized)))
                                             (pair (nat %blockTimestamp)
                                                   (pair (int %tickCumulative)
                                                         (nat %secondsPerLiquidityCumulativeX128)
                                                         (bool %initialized)))))
                                    (lambda (pair nat nat nat) bool)
                                    (lambda
                                       (pair (pair (nat %blockTimestamp)
                                                   (pair (int %tickCumulative)
                                                         (nat %secondsPerLiquidityCumulativeX128)
                                                         (bool %initialized)))
                                             nat
                                             int
                                             nat)
                                       (pair (nat %blockTimestamp)
                                             (pair (int %tickCumulative)
                                                   (nat %secondsPerLiquidityCumulativeX128)
                                                   (bool %initialized)))))
                              (pair int nat)
                              { UNPAIR 11 ;
                                PUSH unit Unit ;
                                PUSH nat 0 ;
                                DUP 5 ;
                                COMPARE ;
                                EQ ;
                                IF { DUP 2 ;
                                     DUP 7 ;
                                     GET ;
                                     IF_NONE
                                       { PUSH string "observations" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                       {} ;
                                     DUP 4 ;
                                     DUP 2 ;
                                     CAR ;
                                     COMPARE ;
                                     NEQ ;
                                     IF { DUP 13 ;
                                          DUP 9 ;
                                          DUP 8 ;
                                          PAIR ;
                                          DUP 6 ;
                                          PAIR ;
                                          DUP 3 ;
                                          PAIR ;
                                          EXEC ;
                                          SWAP ;
                                          DROP }
                                        {} ;
                                     DUP ;
                                     CDR ;
                                     CAR ;
                                     DUP 2 ;
                                     CDR ;
                                     CDR ;
                                     CAR ;
                                     DUP ;
                                     DUP 3 ;
                                     PAIR ;
                                     DIP { DIG 3 ; DROP } ;
                                     DUG 3 ;
                                     DROP 3 }
                                   { DUP 4 ;
                                     INT ;
                                     DUP 4 ;
                                     INT ;
                                     SUB ;
                                     ISNAT ;
                                     IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                     DUP 10 ;
                                     DUP 13 ;
                                     DUP 15 ;
                                     PAIR ;
                                     DUP 13 ;
                                     PAIR ;
                                     DUP 11 ;
                                     PAIR ;
                                     DUP 10 ;
                                     PAIR ;
                                     DUP 9 ;
                                     PAIR ;
                                     DUP 8 ;
                                     PAIR ;
                                     DUP 3 ;
                                     PAIR ;
                                     DUP 6 ;
                                     PAIR ;
                                     DUP 5 ;
                                     PAIR ;
                                     EXEC ;
                                     DUP ;
                                     CAR ;
                                     DUP 2 ;
                                     CDR ;
                                     DUP 2 ;
                                     CAR ;
                                     DUP 5 ;
                                     COMPARE ;
                                     EQ ;
                                     IF { DUP 2 ;
                                          CDR ;
                                          CDR ;
                                          CAR ;
                                          DUP 3 ;
                                          CDR ;
                                          CAR ;
                                          PAIR ;
                                          DIP { DIG 4 ; DROP } ;
                                          DUG 4 }
                                        { DUP ;
                                          CAR ;
                                          DUP 5 ;
                                          COMPARE ;
                                          EQ ;
                                          IF { DUP ;
                                               CDR ;
                                               CDR ;
                                               CAR ;
                                               DUP 2 ;
                                               CDR ;
                                               CAR ;
                                               PAIR ;
                                               DIP { DIG 4 ; DROP } ;
                                               DUG 4 }
                                             { DUP 2 ;
                                               CAR ;
                                               INT ;
                                               DUP 2 ;
                                               CAR ;
                                               INT ;
                                               SUB ;
                                               DUP 3 ;
                                               CAR ;
                                               INT ;
                                               DUP 6 ;
                                               INT ;
                                               SUB ;
                                               DUP ;
                                               DUP 3 ;
                                               DUP 6 ;
                                               CDR ;
                                               CAR ;
                                               DUP 6 ;
                                               CDR ;
                                               CAR ;
                                               SUB ;
                                               EDIV ;
                                               IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                               MUL ;
                                               DUP 5 ;
                                               CDR ;
                                               CAR ;
                                               ADD ;
                                               DUP 3 ;
                                               DUP 3 ;
                                               DUP 7 ;
                                               CDR ;
                                               CDR ;
                                               CAR ;
                                               INT ;
                                               DUP 7 ;
                                               CDR ;
                                               CDR ;
                                               CAR ;
                                               INT ;
                                               SUB ;
                                               MUL ;
                                               EDIV ;
                                               IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                               DUP 6 ;
                                               CDR ;
                                               CDR ;
                                               CAR ;
                                               INT ;
                                               ADD ;
                                               DUP ;
                                               ISNAT ;
                                               IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                               DUP ;
                                               DUP 4 ;
                                               PAIR ;
                                               DIP { DIG 9 ; DROP } ;
                                               DUG 9 ;
                                               DROP 5 } } ;
                                     DROP 4 } ;
                                DUG 11 ;
                                DROP 11 } ;
                            LAMBDA
                              (pair (big_map
                                       int
                                       (pair (nat %liquidityGross)
                                             (int %liquidityNet)
                                             (nat %feeGrowthOutside0X128)
                                             (nat %feeGrowthOutside1X128)
                                             (int %tickCumulativeOutside)
                                             (nat %secondsPerLiquidityOutsideX128)
                                             (nat %secondsOutside)
                                             (bool %initialized)))
                                    int
                                    int
                                    int
                                    nat
                                    nat)
                              (pair nat nat)
                              { UNPAIR 6 ;
                                PUSH unit Unit ;
                                DUP 2 ;
                                DUP 4 ;
                                GET ;
                                IF_NONE
                                  { PUSH string "ticks" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                  {} ;
                                DUP 3 ;
                                DUP 6 ;
                                GET ;
                                IF_NONE
                                  { PUSH string "ticks" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                  {} ;
                                PUSH nat 0 ;
                                PUSH nat 0 ;
                                DUP 7 ;
                                DUP 10 ;
                                COMPARE ;
                                GE ;
                                IF { DUP 4 ;
                                     CDR ;
                                     CDR ;
                                     CAR ;
                                     DIP { DIG 1 ; DROP } ;
                                     DUG 1 ;
                                     DUP 4 ;
                                     CDR ;
                                     CDR ;
                                     CDR ;
                                     CAR ;
                                     SWAP ;
                                     DROP }
                                   { DUP 4 ;
                                     CDR ;
                                     CDR ;
                                     CAR ;
                                     INT ;
                                     DUP 11 ;
                                     INT ;
                                     SUB ;
                                     ISNAT ;
                                     IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                     DIP { DIG 1 ; DROP } ;
                                     DUG 1 ;
                                     DUP 4 ;
                                     CDR ;
                                     CDR ;
                                     CDR ;
                                     CAR ;
                                     INT ;
                                     DUP 12 ;
                                     INT ;
                                     SUB ;
                                     ISNAT ;
                                     IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                     SWAP ;
                                     DROP } ;
                                PUSH nat 0 ;
                                PUSH nat 0 ;
                                DUP 10 ;
                                DUP 12 ;
                                COMPARE ;
                                LT ;
                                IF { DUP 5 ;
                                     CDR ;
                                     CDR ;
                                     CAR ;
                                     DIP { DIG 1 ; DROP } ;
                                     DUG 1 ;
                                     DUP 5 ;
                                     CDR ;
                                     CDR ;
                                     CDR ;
                                     CAR ;
                                     SWAP ;
                                     DROP }
                                   { DUP 5 ;
                                     CDR ;
                                     CDR ;
                                     CAR ;
                                     INT ;
                                     DUP 13 ;
                                     INT ;
                                     SUB ;
                                     ISNAT ;
                                     IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                     DIP { DIG 1 ; DROP } ;
                                     DUG 1 ;
                                     DUP 5 ;
                                     CDR ;
                                     CDR ;
                                     CDR ;
                                     CAR ;
                                     INT ;
                                     DUP 14 ;
                                     INT ;
                                     SUB ;
                                     ISNAT ;
                                     IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                     SWAP ;
                                     DROP } ;
                                DUP 2 ;
                                INT ;
                                DUP 5 ;
                                INT ;
                                DUP 14 ;
                                INT ;
                                SUB ;
                                SUB ;
                                ISNAT ;
                                IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                DUP 2 ;
                                INT ;
                                DUP 5 ;
                                INT ;
                                DUP 16 ;
                                INT ;
                                SUB ;
                                SUB ;
                                ISNAT ;
                                IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                DUP ;
                                DUP 3 ;
                                PAIR ;
                                DIP { DIG 8 ; DROP } ;
                                DUG 8 ;
                                DROP 8 ;
                                DUG 6 ;
                                DROP 6 } ;
                            LAMBDA
                              (pair nat nat nat bool)
                              nat
                              { UNPAIR 4 ;
                                PUSH unit Unit ;
                                DUP 2 ;
                                DUP 4 ;
                                DUP 5 ;
                                DUP 5 ;
                                COMPARE ;
                                GT ;
                                IF { DUP 5 ; DIP { DIG 1 ; DROP } ; DUG 1 ; DUP 4 ; SWAP ; DROP } {} ;
                                PUSH nat 96 ;
                                DUP 7 ;
                                LSL ;
                                DUP 3 ;
                                INT ;
                                DUP 3 ;
                                INT ;
                                SUB ;
                                ISNAT ;
                                IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                PUSH nat 0 ;
                                DUP 5 ;
                                COMPARE ;
                                GT ;
                                NOT ;
                                IF { PUSH string "ERR" ; FAILWITH } {} ;
                                DUP 9 ;
                                IF { PUSH nat 1 ;
                                     DUP 4 ;
                                     INT ;
                                     PAIR ;
                                     PUSH nat 1 ;
                                     DUP 3 ;
                                     DUP 5 ;
                                     MUL ;
                                     INT ;
                                     PAIR ;
                                     PAIR ;
                                     UNPAIR ;
                                     DIP { UNPAIR } ;
                                     UNPAIR ;
                                     DIG 3 ;
                                     DUP ;
                                     DIG 3 ;
                                     DUP ;
                                     DUG 4 ;
                                     MUL ;
                                     PUSH nat 0 ;
                                     COMPARE ;
                                     EQ ;
                                     IF { PUSH string "DIV_BY_ZERO" ; FAILWITH } {} ;
                                     PUSH int 0 ;
                                     DIG 4 ;
                                     DUP ;
                                     DUG 5 ;
                                     COMPARE ;
                                     GE ;
                                     IF { INT } { NEG } ;
                                     MUL ;
                                     DIP { MUL ; ABS } ;
                                     PAIR ;
                                     UNPAIR ;
                                     EDIV ;
                                     IF_NONE
                                       { PUSH string "DIV_BY_ZERO" ; FAILWITH }
                                       { UNPAIR ; SWAP ; INT ; EQ ; IF {} { PUSH int 1 ; ADD } } ;
                                     ISNAT ;
                                     IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                     PUSH nat 1 ;
                                     DUP 6 ;
                                     INT ;
                                     PAIR ;
                                     PUSH nat 1 ;
                                     DUP 3 ;
                                     INT ;
                                     PAIR ;
                                     PAIR ;
                                     UNPAIR ;
                                     DIP { UNPAIR } ;
                                     UNPAIR ;
                                     DIG 3 ;
                                     DUP ;
                                     DIG 3 ;
                                     DUP ;
                                     DUG 4 ;
                                     MUL ;
                                     PUSH nat 0 ;
                                     COMPARE ;
                                     EQ ;
                                     IF { PUSH string "DIV_BY_ZERO" ; FAILWITH } {} ;
                                     PUSH int 0 ;
                                     DIG 4 ;
                                     DUP ;
                                     DUG 5 ;
                                     COMPARE ;
                                     GE ;
                                     IF { INT } { NEG } ;
                                     MUL ;
                                     DIP { MUL ; ABS } ;
                                     PAIR ;
                                     UNPAIR ;
                                     EDIV ;
                                     IF_NONE
                                       { PUSH string "DIV_BY_ZERO" ; FAILWITH }
                                       { UNPAIR ; SWAP ; INT ; EQ ; IF {} { PUSH int 1 ; ADD } } ;
                                     ISNAT ;
                                     IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                     DUP ;
                                     DIP { DIG 6 ; DROP } ;
                                     DUG 6 ;
                                     DROP 2 }
                                   { DUP 4 ;
                                     DUP 4 ;
                                     DUP 3 ;
                                     DUP 5 ;
                                     MUL ;
                                     EDIV ;
                                     IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                     EDIV ;
                                     IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                     DIP { DIG 4 ; DROP } ;
                                     DUG 4 } ;
                                DROP 4 ;
                                DUG 4 ;
                                DROP 4 } ;
                            LAMBDA
                              (pair nat nat int (lambda (pair nat nat nat bool) nat))
                              int
                              { UNPAIR 4 ;
                                PUSH unit Unit ;
                                PUSH int 0 ;
                                DUP 5 ;
                                COMPARE ;
                                LT ;
                                IF { DUP 5 ;
                                     PUSH bool False ;
                                     DUP 6 ;
                                     ABS ;
                                     PAIR ;
                                     DUP 5 ;
                                     PAIR ;
                                     DUP 4 ;
                                     PAIR ;
                                     EXEC ;
                                     INT ;
                                     NEG ;
                                     SWAP ;
                                     DROP }
                                   { DUP 5 ;
                                     PUSH bool True ;
                                     DUP 6 ;
                                     ABS ;
                                     PAIR ;
                                     DUP 5 ;
                                     PAIR ;
                                     DUP 4 ;
                                     PAIR ;
                                     EXEC ;
                                     INT ;
                                     SWAP ;
                                     DROP } ;
                                DUG 4 ;
                                DROP 4 } ;
                            LAMBDA
                              (pair nat nat nat bool)
                              nat
                              { UNPAIR 4 ;
                                PUSH unit Unit ;
                                DUP 2 ;
                                DUP 4 ;
                                DUP 5 ;
                                DUP 5 ;
                                COMPARE ;
                                GT ;
                                IF { DUP 5 ; DIP { DIG 1 ; DROP } ; DUG 1 ; DUP 4 ; SWAP ; DROP } {} ;
                                DUP 7 ;
                                IF { PUSH nat 1 ;
                                     PUSH nat 96 ;
                                     PUSH nat 1 ;
                                     LSL ;
                                     INT ;
                                     PAIR ;
                                     PUSH nat 1 ;
                                     DUP 4 ;
                                     INT ;
                                     DUP 4 ;
                                     INT ;
                                     SUB ;
                                     DUP 9 ;
                                     INT ;
                                     MUL ;
                                     PAIR ;
                                     PAIR ;
                                     UNPAIR ;
                                     DIP { UNPAIR } ;
                                     UNPAIR ;
                                     DIG 3 ;
                                     DUP ;
                                     DIG 3 ;
                                     DUP ;
                                     DUG 4 ;
                                     MUL ;
                                     PUSH nat 0 ;
                                     COMPARE ;
                                     EQ ;
                                     IF { PUSH string "DIV_BY_ZERO" ; FAILWITH } {} ;
                                     PUSH int 0 ;
                                     DIG 4 ;
                                     DUP ;
                                     DUG 5 ;
                                     COMPARE ;
                                     GE ;
                                     IF { INT } { NEG } ;
                                     MUL ;
                                     DIP { MUL ; ABS } ;
                                     PAIR ;
                                     UNPAIR ;
                                     EDIV ;
                                     IF_NONE
                                       { PUSH string "DIV_BY_ZERO" ; FAILWITH }
                                       { UNPAIR ; SWAP ; INT ; EQ ; IF {} { PUSH int 1 ; ADD } } ;
                                     ISNAT ;
                                     IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                     DUP ;
                                     DIP { DIG 3 ; DROP } ;
                                     DUG 3 ;
                                     DROP }
                                   { DUP 2 ;
                                     INT ;
                                     DUP 2 ;
                                     INT ;
                                     SUB ;
                                     ISNAT ;
                                     IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                     PUSH nat 96 ;
                                     PUSH nat 1 ;
                                     LSL ;
                                     DUP 2 ;
                                     DUP 9 ;
                                     MUL ;
                                     EDIV ;
                                     IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                     SWAP ;
                                     DROP ;
                                     DUP ;
                                     DIP { DIG 3 ; DROP } ;
                                     DUG 3 ;
                                     DROP } ;
                                DROP 2 ;
                                DUG 4 ;
                                DROP 4 } ;
                            LAMBDA
                              (pair nat nat int (lambda (pair nat nat nat bool) nat))
                              int
                              { UNPAIR 4 ;
                                PUSH unit Unit ;
                                PUSH int 0 ;
                                DUP 5 ;
                                COMPARE ;
                                LT ;
                                IF { DUP 5 ;
                                     PUSH bool False ;
                                     DUP 6 ;
                                     ABS ;
                                     PAIR ;
                                     DUP 5 ;
                                     PAIR ;
                                     DUP 4 ;
                                     PAIR ;
                                     EXEC ;
                                     INT ;
                                     NEG ;
                                     SWAP ;
                                     DROP }
                                   { DUP 5 ;
                                     PUSH bool True ;
                                     DUP 6 ;
                                     ABS ;
                                     PAIR ;
                                     DUP 5 ;
                                     PAIR ;
                                     DUP 4 ;
                                     PAIR ;
                                     EXEC ;
                                     INT ;
                                     SWAP ;
                                     DROP } ;
                                DUG 4 ;
                                DROP 4 } ;
                            LAMBDA
                              nat
                              nat
                              { PUSH unit Unit ;
                                PUSH nat 0 ;
                                DUP 3 ;
                                COMPARE ;
                                GT ;
                                NOT ;
                                IF { PUSH string "ERR" ; FAILWITH } {} ;
                                DUP 2 ;
                                PUSH nat 0 ;
                                PUSH nat 128 ;
                                PUSH nat 1 ;
                                LSL ;
                                DUP 3 ;
                                COMPARE ;
                                GE ;
                                IF { PUSH nat 128 ;
                                     DUP 3 ;
                                     LSR ;
                                     DIP { DIG 1 ; DROP } ;
                                     DUG 1 ;
                                     PUSH nat 128 ;
                                     DUP 2 ;
                                     ADD ;
                                     SWAP ;
                                     DROP }
                                   {} ;
                                PUSH nat 64 ;
                                PUSH nat 1 ;
                                LSL ;
                                DUP 3 ;
                                COMPARE ;
                                GE ;
                                IF { PUSH nat 64 ;
                                     DUP 3 ;
                                     LSR ;
                                     DIP { DIG 1 ; DROP } ;
                                     DUG 1 ;
                                     PUSH nat 64 ;
                                     DUP 2 ;
                                     ADD ;
                                     SWAP ;
                                     DROP }
                                   {} ;
                                PUSH nat 32 ;
                                PUSH nat 1 ;
                                LSL ;
                                DUP 3 ;
                                COMPARE ;
                                GE ;
                                IF { PUSH nat 32 ;
                                     DUP 3 ;
                                     LSR ;
                                     DIP { DIG 1 ; DROP } ;
                                     DUG 1 ;
                                     PUSH nat 32 ;
                                     DUP 2 ;
                                     ADD ;
                                     SWAP ;
                                     DROP }
                                   {} ;
                                PUSH nat 16 ;
                                PUSH nat 1 ;
                                LSL ;
                                DUP 3 ;
                                COMPARE ;
                                GE ;
                                IF { PUSH nat 16 ;
                                     DUP 3 ;
                                     LSR ;
                                     DIP { DIG 1 ; DROP } ;
                                     DUG 1 ;
                                     PUSH nat 16 ;
                                     DUP 2 ;
                                     ADD ;
                                     SWAP ;
                                     DROP }
                                   {} ;
                                PUSH nat 8 ;
                                PUSH nat 1 ;
                                LSL ;
                                DUP 3 ;
                                COMPARE ;
                                GE ;
                                IF { PUSH nat 8 ;
                                     DUP 3 ;
                                     LSR ;
                                     DIP { DIG 1 ; DROP } ;
                                     DUG 1 ;
                                     PUSH nat 8 ;
                                     DUP 2 ;
                                     ADD ;
                                     SWAP ;
                                     DROP }
                                   {} ;
                                PUSH nat 4 ;
                                PUSH nat 1 ;
                                LSL ;
                                DUP 3 ;
                                COMPARE ;
                                GE ;
                                IF { PUSH nat 4 ;
                                     DUP 3 ;
                                     LSR ;
                                     DIP { DIG 1 ; DROP } ;
                                     DUG 1 ;
                                     PUSH nat 4 ;
                                     DUP 2 ;
                                     ADD ;
                                     SWAP ;
                                     DROP }
                                   {} ;
                                PUSH nat 2 ;
                                PUSH nat 1 ;
                                LSL ;
                                DUP 3 ;
                                COMPARE ;
                                GE ;
                                IF { PUSH nat 2 ;
                                     DUP 3 ;
                                     LSR ;
                                     DIP { DIG 1 ; DROP } ;
                                     DUG 1 ;
                                     PUSH nat 2 ;
                                     DUP 2 ;
                                     ADD ;
                                     SWAP ;
                                     DROP }
                                   {} ;
                                PUSH nat 1 ;
                                PUSH nat 1 ;
                                LSL ;
                                DUP 3 ;
                                COMPARE ;
                                GE ;
                                IF { PUSH nat 1 ; DUP 2 ; ADD ; SWAP ; DROP } {} ;
                                DUP ;
                                DIP { DIG 2 ; DROP } ;
                                DUG 2 ;
                                DROP 2 ;
                                DUG 1 ;
                                DROP } ;
                            LAMBDA
                              nat
                              nat
                              { PUSH unit Unit ;
                                PUSH nat 0 ;
                                DUP 3 ;
                                COMPARE ;
                                GT ;
                                NOT ;
                                IF { PUSH string "ERR" ; FAILWITH } {} ;
                                DUP 2 ;
                                PUSH nat 255 ;
                                PUSH nat 0 ;
                                PUSH nat 340282366920938463463374607431768211455 ;
                                DUP 4 ;
                                AND ;
                                COMPARE ;
                                GT ;
                                IF { PUSH int 0 ;
                                     PUSH int 128 ;
                                     DUP 3 ;
                                     SUB ;
                                     COMPARE ;
                                     GE ;
                                     IF { PUSH int 128 ; DUP 2 ; SUB ; ABS }
                                        { PUSH string "NAT_NEG_ASSIGN" ; FAILWITH } ;
                                     SWAP ;
                                     DROP }
                                   { PUSH nat 128 ; DUP 3 ; LSR ; DIP { DIG 1 ; DROP } ; DUG 1 } ;
                                PUSH nat 0 ;
                                PUSH nat 18446744073709551615 ;
                                DUP 4 ;
                                AND ;
                                COMPARE ;
                                GT ;
                                IF { PUSH int 0 ;
                                     PUSH int 64 ;
                                     DUP 3 ;
                                     SUB ;
                                     COMPARE ;
                                     GE ;
                                     IF { PUSH int 64 ; DUP 2 ; SUB ; ABS }
                                        { PUSH string "NAT_NEG_ASSIGN" ; FAILWITH } ;
                                     SWAP ;
                                     DROP }
                                   { PUSH nat 64 ; DUP 3 ; LSR ; DIP { DIG 1 ; DROP } ; DUG 1 } ;
                                PUSH nat 0 ;
                                PUSH nat 4294967295 ;
                                DUP 4 ;
                                AND ;
                                COMPARE ;
                                GT ;
                                IF { PUSH int 0 ;
                                     PUSH int 32 ;
                                     DUP 3 ;
                                     SUB ;
                                     COMPARE ;
                                     GE ;
                                     IF { PUSH int 32 ; DUP 2 ; SUB ; ABS }
                                        { PUSH string "NAT_NEG_ASSIGN" ; FAILWITH } ;
                                     SWAP ;
                                     DROP }
                                   { PUSH nat 32 ; DUP 3 ; LSR ; DIP { DIG 1 ; DROP } ; DUG 1 } ;
                                PUSH nat 0 ;
                                PUSH nat 65535 ;
                                DUP 4 ;
                                AND ;
                                COMPARE ;
                                GT ;
                                IF { PUSH int 0 ;
                                     PUSH int 16 ;
                                     DUP 3 ;
                                     SUB ;
                                     COMPARE ;
                                     GE ;
                                     IF { PUSH int 16 ; DUP 2 ; SUB ; ABS }
                                        { PUSH string "NAT_NEG_ASSIGN" ; FAILWITH } ;
                                     SWAP ;
                                     DROP }
                                   { PUSH nat 16 ; DUP 3 ; LSR ; DIP { DIG 1 ; DROP } ; DUG 1 } ;
                                PUSH nat 0 ;
                                PUSH nat 255 ;
                                DUP 4 ;
                                AND ;
                                COMPARE ;
                                GT ;
                                IF { PUSH int 0 ;
                                     PUSH int 8 ;
                                     DUP 3 ;
                                     SUB ;
                                     COMPARE ;
                                     GE ;
                                     IF { PUSH int 8 ; DUP 2 ; SUB ; ABS }
                                        { PUSH string "NAT_NEG_ASSIGN" ; FAILWITH } ;
                                     SWAP ;
                                     DROP }
                                   { PUSH nat 8 ; DUP 3 ; LSR ; DIP { DIG 1 ; DROP } ; DUG 1 } ;
                                PUSH nat 0 ;
                                PUSH nat 15 ;
                                DUP 4 ;
                                AND ;
                                COMPARE ;
                                GT ;
                                IF { PUSH int 0 ;
                                     PUSH int 4 ;
                                     DUP 3 ;
                                     SUB ;
                                     COMPARE ;
                                     GE ;
                                     IF { PUSH int 4 ; DUP 2 ; SUB ; ABS }
                                        { PUSH string "NAT_NEG_ASSIGN" ; FAILWITH } ;
                                     SWAP ;
                                     DROP }
                                   { PUSH nat 4 ; DUP 3 ; LSR ; DIP { DIG 1 ; DROP } ; DUG 1 } ;
                                PUSH nat 0 ;
                                PUSH nat 3 ;
                                DUP 4 ;
                                AND ;
                                COMPARE ;
                                GT ;
                                IF { PUSH int 0 ;
                                     PUSH int 2 ;
                                     DUP 3 ;
                                     SUB ;
                                     COMPARE ;
                                     GE ;
                                     IF { PUSH int 2 ; DUP 2 ; SUB ; ABS }
                                        { PUSH string "NAT_NEG_ASSIGN" ; FAILWITH } ;
                                     SWAP ;
                                     DROP }
                                   { PUSH nat 2 ; DUP 3 ; LSR ; DIP { DIG 1 ; DROP } ; DUG 1 } ;
                                PUSH nat 0 ;
                                PUSH nat 1 ;
                                DUP 4 ;
                                AND ;
                                COMPARE ;
                                GT ;
                                IF { PUSH int 0 ;
                                     PUSH int 1 ;
                                     DUP 3 ;
                                     SUB ;
                                     COMPARE ;
                                     GE ;
                                     IF { PUSH int 1 ; DUP 2 ; SUB ; ABS }
                                        { PUSH string "NAT_NEG_ASSIGN" ; FAILWITH } ;
                                     SWAP ;
                                     DROP }
                                   {} ;
                                DUP ;
                                DIP { DIG 2 ; DROP } ;
                                DUG 2 ;
                                DROP 2 ;
                                DUG 1 ;
                                DROP } ;
                            LAMBDA
                              (pair (big_map int nat) int int bool (lambda nat nat) (lambda nat nat))
                              (pair int bool)
                              { UNPAIR 6 ;
                                PUSH unit Unit ;
                                DUP 4 ;
                                DUP 4 ;
                                EDIV ;
                                IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                PUSH int 0 ;
                                DUP 5 ;
                                COMPARE ;
                                LT ;
                                IF { PUSH nat 0 ;
                                     DUP 6 ;
                                     DUP 6 ;
                                     EDIV ;
                                     IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CDR ; SWAP ; DROP } ;
                                     COMPARE ;
                                     NEQ ;
                                     IF { PUSH bool True } { PUSH bool False } }
                                   { PUSH bool False } ;
                                IF { PUSH int 1 ; DUP 2 ; SUB ; SWAP ; DROP } {} ;
                                PUSH bool False ;
                                PUSH int 0 ;
                                DUP 8 ;
                                IF { PUSH nat 256 ;
                                     DUP 4 ;
                                     EDIV ;
                                     IF_NONE { PUSH string "INVALID_INT_NAT" ; FAILWITH } {} ;
                                     DUP ;
                                     CAR ;
                                     DUP 2 ;
                                     CDR ;
                                     DUP ;
                                     PUSH nat 1 ;
                                     LSL ;
                                     INT ;
                                     PUSH int 1 ;
                                     DUP 3 ;
                                     PUSH nat 1 ;
                                     LSL ;
                                     INT ;
                                     SUB ;
                                     ADD ;
                                     ISNAT ;
                                     IF_NONE { PUSH string "INVALID_INT_NAT" ; FAILWITH } {} ;
                                     DUP ;
                                     DUP 10 ;
                                     DUP 5 ;
                                     GET ;
                                     IF_NONE
                                       { PUSH string "tickBitmap" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                       {} ;
                                     AND ;
                                     PUSH nat 0 ;
                                     DUP 2 ;
                                     COMPARE ;
                                     NEQ ;
                                     DIP { DIG 6 ; DROP } ;
                                     DUG 6 ;
                                     DUP 7 ;
                                     IF { DUP 12 ;
                                          DUP 16 ;
                                          DUP 3 ;
                                          EXEC ;
                                          INT ;
                                          DUP 5 ;
                                          INT ;
                                          SUB ;
                                          DUP 10 ;
                                          SUB ;
                                          MUL }
                                        { DUP 12 ; DUP 4 ; INT ; DUP 10 ; SUB ; MUL } ;
                                     DIP { DIG 5 ; DROP } ;
                                     DUG 5 ;
                                     DROP 5 }
                                   { PUSH nat 256 ;
                                     PUSH int 1 ;
                                     DUP 5 ;
                                     ADD ;
                                     EDIV ;
                                     IF_NONE { PUSH string "INVALID_INT_NAT" ; FAILWITH } {} ;
                                     DUP ;
                                     CAR ;
                                     DUP 2 ;
                                     CDR ;
                                     DUP ;
                                     PUSH nat 1 ;
                                     LSL ;
                                     INT ;
                                     PUSH nat 256 ;
                                     PUSH nat 1 ;
                                     LSL ;
                                     INT ;
                                     SUB ;
                                     ISNAT ;
                                     IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                     DUP ;
                                     DUP 10 ;
                                     DUP 5 ;
                                     GET ;
                                     IF_NONE
                                       { PUSH string "tickBitmap" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                       {} ;
                                     AND ;
                                     PUSH nat 0 ;
                                     DUP 2 ;
                                     COMPARE ;
                                     NEQ ;
                                     DIP { DIG 6 ; DROP } ;
                                     DUG 6 ;
                                     DUP 7 ;
                                     IF { DUP 12 ;
                                          DUP 4 ;
                                          INT ;
                                          DUP 16 ;
                                          DUP 4 ;
                                          EXEC ;
                                          INT ;
                                          SUB ;
                                          PUSH int 1 ;
                                          DUP 11 ;
                                          ADD ;
                                          ADD ;
                                          MUL }
                                        { DUP 12 ;
                                          DUP 4 ;
                                          INT ;
                                          PUSH int 255 ;
                                          SUB ;
                                          PUSH int 1 ;
                                          DUP 11 ;
                                          ADD ;
                                          ADD ;
                                          MUL } ;
                                     DIP { DIG 5 ; DROP } ;
                                     DUG 5 ;
                                     DROP 5 } ;
                                DUP 2 ;
                                DUP 2 ;
                                PAIR ;
                                DIP { DIG 3 ; DROP } ;
                                DUG 3 ;
                                DROP 3 ;
                                DUG 6 ;
                                DROP 6 } ;
                            LAMBDA
                              (pair nat nat nat bool)
                              nat
                              { UNPAIR 4 ;
                                PUSH unit Unit ;
                                PUSH nat 0 ;
                                DUP 5 ;
                                COMPARE ;
                                EQ ;
                                IF { DUP 2 ; SWAP ; DROP }
                                   { PUSH nat 96 ;
                                     DUP 4 ;
                                     LSL ;
                                     DUP 6 ;
                                     IF { PUSH nat 0 ;
                                          DUP 4 ;
                                          DUP 7 ;
                                          MUL ;
                                          SWAP ;
                                          DROP ;
                                          DUP 4 ;
                                          DUP 7 ;
                                          DUP 3 ;
                                          EDIV ;
                                          IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                          COMPARE ;
                                          EQ ;
                                          IF { DUP ;
                                               DUP 3 ;
                                               ADD ;
                                               DUP 3 ;
                                               DUP 2 ;
                                               COMPARE ;
                                               GE ;
                                               IF { PUSH nat 1 ;
                                                    DUP 2 ;
                                                    INT ;
                                                    PAIR ;
                                                    PUSH nat 1 ;
                                                    DUP 7 ;
                                                    DUP 6 ;
                                                    MUL ;
                                                    INT ;
                                                    PAIR ;
                                                    PAIR ;
                                                    UNPAIR ;
                                                    DIP { UNPAIR } ;
                                                    UNPAIR ;
                                                    DIG 3 ;
                                                    DUP ;
                                                    DIG 3 ;
                                                    DUP ;
                                                    DUG 4 ;
                                                    MUL ;
                                                    PUSH nat 0 ;
                                                    COMPARE ;
                                                    EQ ;
                                                    IF { PUSH string "DIV_BY_ZERO" ; FAILWITH } {} ;
                                                    PUSH int 0 ;
                                                    DIG 4 ;
                                                    DUP ;
                                                    DUG 5 ;
                                                    COMPARE ;
                                                    GE ;
                                                    IF { INT } { NEG } ;
                                                    MUL ;
                                                    DIP { MUL ; ABS } ;
                                                    PAIR ;
                                                    UNPAIR ;
                                                    EDIV ;
                                                    IF_NONE
                                                      { PUSH string "DIV_BY_ZERO" ; FAILWITH }
                                                      { UNPAIR ; SWAP ; INT ; EQ ; IF {} { PUSH int 1 ; ADD } } ;
                                                    ABS ;
                                                    DIP { DIG 3 ; DROP } ;
                                                    DUG 3 }
                                                  { UNIT ;
                                                    LEFT unit ;
                                                    PUSH nat 1 ;
                                                    DUP 9 ;
                                                    INT ;
                                                    PAIR ;
                                                    PUSH nat 1 ;
                                                    DUP 8 ;
                                                    DUP 7 ;
                                                    EDIV ;
                                                    IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                                    INT ;
                                                    PAIR ;
                                                    PUSH nat 1 ;
                                                    DUP 7 ;
                                                    INT ;
                                                    PAIR ;
                                                    PAIR ;
                                                    UNPAIR ;
                                                    DIP { UNPAIR } ;
                                                    UNPAIR ;
                                                    DIG 3 ;
                                                    DUP ;
                                                    DIG 3 ;
                                                    DUP ;
                                                    DUG 4 ;
                                                    MUL ;
                                                    PUSH nat 0 ;
                                                    COMPARE ;
                                                    EQ ;
                                                    IF { PUSH string "DIV_BY_ZERO" ; FAILWITH } {} ;
                                                    PUSH int 0 ;
                                                    DIG 4 ;
                                                    DUP ;
                                                    DUG 5 ;
                                                    COMPARE ;
                                                    GE ;
                                                    IF { INT } { NEG } ;
                                                    MUL ;
                                                    DIP { MUL ; ABS } ;
                                                    PAIR ;
                                                    PAIR ;
                                                    PAIR ;
                                                    UNPAIR ;
                                                    UNPAIR ;
                                                    DIP { UNPAIR ; SWAP ; DUP } ;
                                                    UNPAIR ;
                                                    SWAP ;
                                                    DUP ;
                                                    DIG 3 ;
                                                    MUL ;
                                                    DUP ;
                                                    PUSH nat 0 ;
                                                    COMPARE ;
                                                    EQ ;
                                                    IF { PUSH string "DIV_BY_ZERO" ; FAILWITH } {} ;
                                                    DUG 4 ;
                                                    DIG 3 ;
                                                    MUL ;
                                                    DIP { MUL } ;
                                                    DIG 3 ;
                                                    IF_LEFT { DROP ; ADD } { DROP ; SWAP ; SUB } ;
                                                    PAIR ;
                                                    UNPAIR ;
                                                    EDIV ;
                                                    IF_NONE
                                                      { PUSH string "DIV_BY_ZERO" ; FAILWITH }
                                                      { UNPAIR ; SWAP ; INT ; EQ ; IF {} { PUSH int 1 ; ADD } } ;
                                                    ABS ;
                                                    DIP { DIG 3 ; DROP } ;
                                                    DUG 3 } ;
                                               DROP }
                                             { UNIT ;
                                               LEFT unit ;
                                               PUSH nat 1 ;
                                               DUP 8 ;
                                               INT ;
                                               PAIR ;
                                               PUSH nat 1 ;
                                               DUP 7 ;
                                               DUP 6 ;
                                               EDIV ;
                                               IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                               INT ;
                                               PAIR ;
                                               PUSH nat 1 ;
                                               DUP 6 ;
                                               INT ;
                                               PAIR ;
                                               PAIR ;
                                               UNPAIR ;
                                               DIP { UNPAIR } ;
                                               UNPAIR ;
                                               DIG 3 ;
                                               DUP ;
                                               DIG 3 ;
                                               DUP ;
                                               DUG 4 ;
                                               MUL ;
                                               PUSH nat 0 ;
                                               COMPARE ;
                                               EQ ;
                                               IF { PUSH string "DIV_BY_ZERO" ; FAILWITH } {} ;
                                               PUSH int 0 ;
                                               DIG 4 ;
                                               DUP ;
                                               DUG 5 ;
                                               COMPARE ;
                                               GE ;
                                               IF { INT } { NEG } ;
                                               MUL ;
                                               DIP { MUL ; ABS } ;
                                               PAIR ;
                                               PAIR ;
                                               PAIR ;
                                               UNPAIR ;
                                               UNPAIR ;
                                               DIP { UNPAIR ; SWAP ; DUP } ;
                                               UNPAIR ;
                                               SWAP ;
                                               DUP ;
                                               DIG 3 ;
                                               MUL ;
                                               DUP ;
                                               PUSH nat 0 ;
                                               COMPARE ;
                                               EQ ;
                                               IF { PUSH string "DIV_BY_ZERO" ; FAILWITH } {} ;
                                               DUG 4 ;
                                               DIG 3 ;
                                               MUL ;
                                               DIP { MUL } ;
                                               DIG 3 ;
                                               IF_LEFT { DROP ; ADD } { DROP ; SWAP ; SUB } ;
                                               PAIR ;
                                               UNPAIR ;
                                               EDIV ;
                                               IF_NONE
                                                 { PUSH string "DIV_BY_ZERO" ; FAILWITH }
                                                 { UNPAIR ; SWAP ; INT ; EQ ; IF {} { PUSH int 1 ; ADD } } ;
                                               ABS ;
                                               DIP { DIG 2 ; DROP } ;
                                               DUG 2 } ;
                                          DROP }
                                        { PUSH nat 0 ;
                                          DUP 4 ;
                                          DUP 7 ;
                                          MUL ;
                                          SWAP ;
                                          DROP ;
                                          DUP 4 ;
                                          DUP 7 ;
                                          DUP 3 ;
                                          EDIV ;
                                          IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                          COMPARE ;
                                          EQ ;
                                          IF { DUP ;
                                               DUP 3 ;
                                               COMPARE ;
                                               GT ;
                                               IF { PUSH bool True } { PUSH bool False } }
                                             { PUSH bool False } ;
                                          NOT ;
                                          IF { PUSH string "ERR" ; FAILWITH } {} ;
                                          DUP ;
                                          INT ;
                                          DUP 3 ;
                                          INT ;
                                          SUB ;
                                          ISNAT ;
                                          IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                          PUSH nat 1 ;
                                          DUP 2 ;
                                          INT ;
                                          PAIR ;
                                          PUSH nat 1 ;
                                          DUP 7 ;
                                          DUP 6 ;
                                          MUL ;
                                          INT ;
                                          PAIR ;
                                          PAIR ;
                                          UNPAIR ;
                                          DIP { UNPAIR } ;
                                          UNPAIR ;
                                          DIG 3 ;
                                          DUP ;
                                          DIG 3 ;
                                          DUP ;
                                          DUG 4 ;
                                          MUL ;
                                          PUSH nat 0 ;
                                          COMPARE ;
                                          EQ ;
                                          IF { PUSH string "DIV_BY_ZERO" ; FAILWITH } {} ;
                                          PUSH int 0 ;
                                          DIG 4 ;
                                          DUP ;
                                          DUG 5 ;
                                          COMPARE ;
                                          GE ;
                                          IF { INT } { NEG } ;
                                          MUL ;
                                          DIP { MUL ; ABS } ;
                                          PAIR ;
                                          UNPAIR ;
                                          EDIV ;
                                          IF_NONE
                                            { PUSH string "DIV_BY_ZERO" ; FAILWITH }
                                            { UNPAIR ; SWAP ; INT ; EQ ; IF {} { PUSH int 1 ; ADD } } ;
                                          ABS ;
                                          DIP { DIG 3 ; DROP } ;
                                          DUG 3 ;
                                          DROP 2 } ;
                                     DROP } ;
                                DUG 4 ;
                                DROP 4 } ;
                            LAMBDA
                              (pair nat nat nat bool)
                              nat
                              { UNPAIR 4 ;
                                PUSH unit Unit ;
                                DUP 5 ;
                                IF { PUSH nat 160 ;
                                     PUSH nat 1 ;
                                     LSL ;
                                     DUP 5 ;
                                     COMPARE ;
                                     LT ;
                                     IF { DUP 3 ;
                                          PUSH nat 96 ;
                                          DUP 6 ;
                                          LSL ;
                                          EDIV ;
                                          IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } }
                                        { DUP 3 ;
                                          PUSH nat 96 ;
                                          PUSH nat 1 ;
                                          LSL ;
                                          DUP 6 ;
                                          MUL ;
                                          EDIV ;
                                          IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } } ;
                                     DUP ;
                                     DUP 4 ;
                                     ADD ;
                                     DIP { DIG 1 ; DROP } ;
                                     DUG 1 ;
                                     DROP }
                                   { PUSH nat 160 ;
                                     PUSH nat 1 ;
                                     LSL ;
                                     DUP 5 ;
                                     COMPARE ;
                                     LT ;
                                     IF { PUSH nat 1 ;
                                          DUP 4 ;
                                          INT ;
                                          PAIR ;
                                          PUSH nat 1 ;
                                          PUSH nat 96 ;
                                          DUP 7 ;
                                          LSL ;
                                          INT ;
                                          PAIR ;
                                          PAIR ;
                                          UNPAIR ;
                                          DIP { UNPAIR } ;
                                          UNPAIR ;
                                          DIG 3 ;
                                          DUP ;
                                          DIG 3 ;
                                          DUP ;
                                          DUG 4 ;
                                          MUL ;
                                          PUSH nat 0 ;
                                          COMPARE ;
                                          EQ ;
                                          IF { PUSH string "DIV_BY_ZERO" ; FAILWITH } {} ;
                                          PUSH int 0 ;
                                          DIG 4 ;
                                          DUP ;
                                          DUG 5 ;
                                          COMPARE ;
                                          GE ;
                                          IF { INT } { NEG } ;
                                          MUL ;
                                          DIP { MUL ; ABS } ;
                                          PAIR ;
                                          UNPAIR ;
                                          EDIV ;
                                          IF_NONE
                                            { PUSH string "DIV_BY_ZERO" ; FAILWITH }
                                            { UNPAIR ; SWAP ; INT ; EQ ; IF {} { PUSH int 1 ; ADD } } ;
                                          ABS }
                                        { PUSH nat 1 ;
                                          DUP 4 ;
                                          INT ;
                                          PAIR ;
                                          PUSH nat 1 ;
                                          PUSH nat 96 ;
                                          PUSH nat 1 ;
                                          LSL ;
                                          DUP 7 ;
                                          MUL ;
                                          INT ;
                                          PAIR ;
                                          PAIR ;
                                          UNPAIR ;
                                          DIP { UNPAIR } ;
                                          UNPAIR ;
                                          DIG 3 ;
                                          DUP ;
                                          DIG 3 ;
                                          DUP ;
                                          DUG 4 ;
                                          MUL ;
                                          PUSH nat 0 ;
                                          COMPARE ;
                                          EQ ;
                                          IF { PUSH string "DIV_BY_ZERO" ; FAILWITH } {} ;
                                          PUSH int 0 ;
                                          DIG 4 ;
                                          DUP ;
                                          DUG 5 ;
                                          COMPARE ;
                                          GE ;
                                          IF { INT } { NEG } ;
                                          MUL ;
                                          DIP { MUL ; ABS } ;
                                          PAIR ;
                                          UNPAIR ;
                                          EDIV ;
                                          IF_NONE
                                            { PUSH string "DIV_BY_ZERO" ; FAILWITH }
                                            { UNPAIR ; SWAP ; INT ; EQ ; IF {} { PUSH int 1 ; ADD } } ;
                                          ABS } ;
                                     DUP ;
                                     DUP 4 ;
                                     COMPARE ;
                                     GT ;
                                     NOT ;
                                     IF { PUSH string "ERR" ; FAILWITH } {} ;
                                     DUP ;
                                     INT ;
                                     DUP 4 ;
                                     INT ;
                                     SUB ;
                                     ISNAT ;
                                     IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                     DUP ;
                                     DIP { DIG 2 ; DROP } ;
                                     DUG 2 ;
                                     DROP 2 } ;
                                DUG 4 ;
                                DROP 4 } ;
                            LAMBDA
                              (pair nat
                                    nat
                                    nat
                                    bool
                                    (lambda (pair nat nat nat bool) nat)
                                    (lambda (pair nat nat nat bool) nat))
                              nat
                              { UNPAIR 6 ;
                                PUSH unit Unit ;
                                PUSH nat 0 ;
                                DUP 3 ;
                                COMPARE ;
                                GT ;
                                NOT ;
                                IF { PUSH string "ERR" ; FAILWITH } {} ;
                                PUSH nat 0 ;
                                DUP 4 ;
                                COMPARE ;
                                GT ;
                                NOT ;
                                IF { PUSH string "ERR" ; FAILWITH } {} ;
                                DUP 5 ;
                                IF { DUP 7 ;
                                     PUSH bool True ;
                                     DUP 6 ;
                                     PAIR ;
                                     DUP 5 ;
                                     PAIR ;
                                     DUP 4 ;
                                     PAIR ;
                                     EXEC }
                                   { DUP 6 ;
                                     PUSH bool True ;
                                     DUP 6 ;
                                     PAIR ;
                                     DUP 5 ;
                                     PAIR ;
                                     DUP 4 ;
                                     PAIR ;
                                     EXEC } ;
                                DUP ;
                                DIP { DIG 1 ; DROP } ;
                                DUG 1 ;
                                DROP ;
                                DUG 6 ;
                                DROP 6 } ;
                            LAMBDA
                              (pair nat
                                    nat
                                    nat
                                    bool
                                    (lambda (pair nat nat nat bool) nat)
                                    (lambda (pair nat nat nat bool) nat))
                              nat
                              { UNPAIR 6 ;
                                PUSH unit Unit ;
                                PUSH nat 0 ;
                                DUP 3 ;
                                COMPARE ;
                                GT ;
                                NOT ;
                                IF { PUSH string "ERR" ; FAILWITH } {} ;
                                PUSH nat 0 ;
                                DUP 4 ;
                                COMPARE ;
                                GT ;
                                NOT ;
                                IF { PUSH string "ERR" ; FAILWITH } {} ;
                                DUP 5 ;
                                IF { DUP 7 ;
                                     PUSH bool False ;
                                     DUP 6 ;
                                     PAIR ;
                                     DUP 5 ;
                                     PAIR ;
                                     DUP 4 ;
                                     PAIR ;
                                     EXEC }
                                   { DUP 6 ;
                                     PUSH bool False ;
                                     DUP 6 ;
                                     PAIR ;
                                     DUP 5 ;
                                     PAIR ;
                                     DUP 4 ;
                                     PAIR ;
                                     EXEC } ;
                                DUP ;
                                DIP { DIG 1 ; DROP } ;
                                DUG 1 ;
                                DROP ;
                                DUG 6 ;
                                DROP 6 } ;
                            LAMBDA
                              (pair nat
                                    nat
                                    nat
                                    nat
                                    int
                                    nat
                                    (lambda
                                       (pair nat
                                             nat
                                             nat
                                             bool
                                             (lambda (pair nat nat nat bool) nat)
                                             (lambda (pair nat nat nat bool) nat))
                                       nat)
                                    (lambda (pair nat nat nat bool) nat)
                                    (lambda
                                       (pair nat
                                             nat
                                             nat
                                             bool
                                             (lambda (pair nat nat nat bool) nat)
                                             (lambda (pair nat nat nat bool) nat))
                                       nat)
                                    (lambda (pair nat nat nat bool) nat)
                                    (lambda (pair nat nat nat bool) nat)
                                    (lambda (pair nat nat nat bool) nat))
                              (pair nat nat nat nat)
                              { UNPAIR 12 ;
                                PUSH unit Unit ;
                                DUP 4 ;
                                DUP 4 ;
                                COMPARE ;
                                GE ;
                                PUSH int 0 ;
                                DUP 8 ;
                                COMPARE ;
                                GE ;
                                PUSH nat 0 ;
                                PUSH nat 0 ;
                                PUSH nat 0 ;
                                PUSH nat 0 ;
                                DUP 5 ;
                                IF { PUSH int 1000000 ;
                                     DUP 14 ;
                                     INT ;
                                     PUSH int 1000000 ;
                                     SUB ;
                                     DUP 14 ;
                                     ABS ;
                                     INT ;
                                     MUL ;
                                     EDIV ;
                                     IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                     ISNAT ;
                                     IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                     DUP 7 ;
                                     IF { DUP 20 ;
                                          PUSH bool True ;
                                          DUP 14 ;
                                          PAIR ;
                                          DUP 12 ;
                                          PAIR ;
                                          DUP 13 ;
                                          PAIR ;
                                          EXEC }
                                        { DUP 20 ;
                                          PUSH bool True ;
                                          DUP 14 ;
                                          PAIR ;
                                          DUP 13 ;
                                          PAIR ;
                                          DUP 12 ;
                                          PAIR ;
                                          EXEC } ;
                                     DIP { DIG 3 ; DROP } ;
                                     DUG 3 ;
                                     DUP 4 ;
                                     DUP 2 ;
                                     COMPARE ;
                                     GE ;
                                     IF { DUP 11 ; DIP { DIG 4 ; DROP } ; DUG 4 }
                                        { DUP 17 ;
                                          DUP 20 ;
                                          DUP 20 ;
                                          PAIR ;
                                          DUP 9 ;
                                          PAIR ;
                                          DUP 3 ;
                                          PAIR ;
                                          DUP 14 ;
                                          PAIR ;
                                          DUP 12 ;
                                          PAIR ;
                                          EXEC ;
                                          DIP { DIG 4 ; DROP } ;
                                          DUG 4 } ;
                                     DROP }
                                   { DUP 6 ;
                                     IF { DUP 15 ;
                                          PUSH bool False ;
                                          DUP 13 ;
                                          PAIR ;
                                          DUP 11 ;
                                          PAIR ;
                                          DUP 12 ;
                                          PAIR ;
                                          EXEC }
                                        { DUP 19 ;
                                          PUSH bool False ;
                                          DUP 13 ;
                                          PAIR ;
                                          DUP 12 ;
                                          PAIR ;
                                          DUP 11 ;
                                          PAIR ;
                                          EXEC } ;
                                     DIP { DIG 1 ; DROP } ;
                                     DUG 1 ;
                                     DUP 2 ;
                                     DUP 13 ;
                                     ABS ;
                                     COMPARE ;
                                     GE ;
                                     IF { DUP 10 ; DIP { DIG 3 ; DROP } ; DUG 3 }
                                        { DUP 14 ;
                                          DUP 18 ;
                                          DUP 20 ;
                                          PAIR ;
                                          DUP 8 ;
                                          PAIR ;
                                          DUP 14 ;
                                          ABS ;
                                          PAIR ;
                                          DUP 13 ;
                                          PAIR ;
                                          DUP 11 ;
                                          PAIR ;
                                          EXEC ;
                                          DIP { DIG 3 ; DROP } ;
                                          DUG 3 } } ;
                                DUP 4 ;
                                DUP 11 ;
                                COMPARE ;
                                EQ ;
                                DUP 7 ;
                                IF { DUP ;
                                     IF { DUP 6 ; IF { PUSH bool True } { PUSH bool False } }
                                        { PUSH bool False } ;
                                     IF { DUP 4 }
                                        { DUP 20 ;
                                          PUSH bool True ;
                                          DUP 11 ;
                                          PAIR ;
                                          DUP 12 ;
                                          PAIR ;
                                          DUP 7 ;
                                          PAIR ;
                                          EXEC } ;
                                     DIP { DIG 3 ; DROP } ;
                                     DUG 3 ;
                                     DUP ;
                                     IF { DUP 6 ; NOT ; IF { PUSH bool True } { PUSH bool False } }
                                        { PUSH bool False } ;
                                     IF { DUP 3 }
                                        { DUP 16 ;
                                          PUSH bool False ;
                                          DUP 11 ;
                                          PAIR ;
                                          DUP 12 ;
                                          PAIR ;
                                          DUP 7 ;
                                          PAIR ;
                                          EXEC } ;
                                     DIP { DIG 2 ; DROP } ;
                                     DUG 2 }
                                   { DUP ;
                                     IF { DUP 6 ; IF { PUSH bool True } { PUSH bool False } }
                                        { PUSH bool False } ;
                                     IF { DUP 4 }
                                        { DUP 16 ;
                                          PUSH bool True ;
                                          DUP 11 ;
                                          PAIR ;
                                          DUP 7 ;
                                          PAIR ;
                                          DUP 12 ;
                                          PAIR ;
                                          EXEC } ;
                                     DIP { DIG 3 ; DROP } ;
                                     DUG 3 ;
                                     DUP ;
                                     IF { DUP 6 ; NOT ; IF { PUSH bool True } { PUSH bool False } }
                                        { PUSH bool False } ;
                                     IF { DUP 3 }
                                        { DUP 20 ;
                                          PUSH bool False ;
                                          DUP 11 ;
                                          PAIR ;
                                          DUP 7 ;
                                          PAIR ;
                                          DUP 12 ;
                                          PAIR ;
                                          EXEC } ;
                                     DIP { DIG 2 ; DROP } ;
                                     DUG 2 } ;
                                DUP 6 ;
                                NOT ;
                                IF { DUP 13 ;
                                     ABS ;
                                     DUP 4 ;
                                     COMPARE ;
                                     GT ;
                                     IF { PUSH bool True } { PUSH bool False } }
                                   { PUSH bool False } ;
                                IF { DUP 13 ; ABS ; DIP { DIG 2 ; DROP } ; DUG 2 } {} ;
                                DUP 6 ;
                                IF { DUP 11 ;
                                     DUP 6 ;
                                     COMPARE ;
                                     NEQ ;
                                     IF { PUSH bool True } { PUSH bool False } }
                                   { PUSH bool False } ;
                                IF { DUP 4 ;
                                     INT ;
                                     DUP 14 ;
                                     ABS ;
                                     INT ;
                                     SUB ;
                                     ISNAT ;
                                     IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                     DIP { DIG 1 ; DROP } ;
                                     DUG 1 }
                                   { PUSH nat 1 ;
                                     DUP 15 ;
                                     INT ;
                                     PUSH int 1000000 ;
                                     SUB ;
                                     PAIR ;
                                     PUSH nat 1 ;
                                     DUP 16 ;
                                     DUP 7 ;
                                     MUL ;
                                     INT ;
                                     PAIR ;
                                     PAIR ;
                                     UNPAIR ;
                                     DIP { UNPAIR } ;
                                     UNPAIR ;
                                     DIG 3 ;
                                     DUP ;
                                     DIG 3 ;
                                     DUP ;
                                     DUG 4 ;
                                     MUL ;
                                     PUSH nat 0 ;
                                     COMPARE ;
                                     EQ ;
                                     IF { PUSH string "DIV_BY_ZERO" ; FAILWITH } {} ;
                                     PUSH int 0 ;
                                     DIG 4 ;
                                     DUP ;
                                     DUG 5 ;
                                     COMPARE ;
                                     GE ;
                                     IF { INT } { NEG } ;
                                     MUL ;
                                     DIP { MUL ; ABS } ;
                                     PAIR ;
                                     UNPAIR ;
                                     EDIV ;
                                     IF_NONE
                                       { PUSH string "DIV_BY_ZERO" ; FAILWITH }
                                       { UNPAIR ; SWAP ; INT ; EQ ; IF {} { PUSH int 1 ; ADD } } ;
                                     ABS ;
                                     DIP { DIG 1 ; DROP } ;
                                     DUG 1 } ;
                                DUP 2 ;
                                DUP 4 ;
                                PAIR ;
                                DUP 5 ;
                                PAIR ;
                                DUP 6 ;
                                PAIR ;
                                DIP { DIG 7 ; DROP } ;
                                DUG 7 ;
                                DROP 7 ;
                                DUG 12 ;
                                DROP 12 } ;
                            NIL operation ;
                            DIG 26 ;
                            UNPAIR ;
                            DIP { UNPAIR 17 } ;
                            IF_LEFT
                              { IF_LEFT
                                  { IF_LEFT
                                      { DUP 43 ;
                                        UNIT ;
                                        EXEC ;
                                        NOT ;
                                        IF { PUSH string "increaseObservationCardinalityNext_c1" ;
                                             PUSH string "INVALID_CONDITION" ;
                                             PAIR ;
                                             FAILWITH }
                                           {} ;
                                        DUP 10 ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        NOT ;
                                        IF { DUP 10 ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             PUSH string "LOK" ;
                                             PAIR ;
                                             FAILWITH }
                                           {} ;
                                        DUP 10 ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        DROP ;
                                        PUSH bool False ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        DIP { DIG 9 ; DROP } ;
                                        DUG 9 ;
                                        DUP 10 ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        CAR ;
                                        PUSH nat 0 ;
                                        PUSH nat 0 ;
                                        DUP 3 ;
                                        COMPARE ;
                                        GT ;
                                        NOT ;
                                        IF { PUSH string "I" ; FAILWITH } {} ;
                                        DUP 2 ;
                                        DUP 4 ;
                                        COMPARE ;
                                        LE ;
                                        IF { DUP 2 ; SWAP ; DROP }
                                           { DUP 2 ;
                                             DUP 4 ;
                                             DUP 2 ;
                                             COMPARE ;
                                             LT ;
                                             LOOP { DUP 21 ;
                                                    DUP 22 ;
                                                    DUP 3 ;
                                                    GET ;
                                                    IF_NONE
                                                      { PUSH string "observations" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                                      {} ;
                                                    UNPAIR ;
                                                    DROP ;
                                                    PUSH nat 1 ;
                                                    PAIR ;
                                                    SOME ;
                                                    DUP 3 ;
                                                    UPDATE ;
                                                    DIP { DIG 20 ; DROP } ;
                                                    DUG 20 ;
                                                    PUSH nat 1 ;
                                                    DUP 2 ;
                                                    ADD ;
                                                    SWAP ;
                                                    DROP ;
                                                    DUP 4 ;
                                                    DUP 2 ;
                                                    COMPARE ;
                                                    LT } ;
                                             DUP 4 ;
                                             DIP { DIG 1 ; DROP } ;
                                             DUG 1 ;
                                             DROP } ;
                                        DUP 12 ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        DROP ;
                                        DUP 6 ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        DIP { DIG 11 ; DROP } ;
                                        DUG 11 ;
                                        DUP ;
                                        DUP 3 ;
                                        COMPARE ;
                                        NEQ ;
                                        IF { NIL operation ;
                                             NIL operation ;
                                             DUP 23 ;
                                             ITER { CONS } ;
                                             DUP 3 ;
                                             DUP 5 ;
                                             PAIR ;
                                             EMIT %IncObsCardinalityNext
                                               (pair (nat %observationCardinalityNextOld_event)
                                                     (nat %observationCardinalityNextNew_event)) ;
                                             CONS ;
                                             ITER { CONS } ;
                                             DIP { DIG 20 ; DROP } ;
                                             DUG 20 }
                                           {} ;
                                        DUP 12 ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        DROP ;
                                        PUSH bool True ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        DIP { DIG 11 ; DROP } ;
                                        DUG 11 ;
                                        DROP 3 ;
                                        PAIR 17 ;
                                        DIG 1 ;
                                        PAIR }
                                      { PUSH nat 0 ;
                                        DUP 11 ;
                                        CAR ;
                                        COMPARE ;
                                        EQ ;
                                        NOT ;
                                        IF { PUSH string "AI" ; FAILWITH } {} ;
                                        DUP 38 ;
                                        DUP 40 ;
                                        DUP 3 ;
                                        PAIR ;
                                        EXEC ;
                                        DUP 19 ;
                                        PUSH bool True ;
                                        PUSH nat 0 ;
                                        PAIR ;
                                        PUSH int 0 ;
                                        PAIR ;
                                        DUP 43 ;
                                        UNIT ;
                                        EXEC ;
                                        PAIR ;
                                        SOME ;
                                        PUSH nat 0 ;
                                        UPDATE ;
                                        DIP { DIG 18 ; DROP } ;
                                        DUG 18 ;
                                        PUSH nat 1 ;
                                        PUSH nat 1 ;
                                        PUSH bool True ;
                                        PUSH nat 0 ;
                                        PAIR ;
                                        DUP 2 ;
                                        PAIR ;
                                        DUP 3 ;
                                        PAIR ;
                                        PUSH nat 0 ;
                                        PAIR ;
                                        DUP 4 ;
                                        PAIR ;
                                        DUP 5 ;
                                        PAIR ;
                                        DIP { DIG 12 ; DROP } ;
                                        DUG 12 ;
                                        NIL operation ;
                                        NIL operation ;
                                        DUP 24 ;
                                        ITER { CONS } ;
                                        DUP 5 ;
                                        DUP 7 ;
                                        PAIR ;
                                        EMIT %Initialize
                                          (pair (nat %sqrtPriceX96_initialize_event) (int %tick_initialize_event)) ;
                                        CONS ;
                                        ITER { CONS } ;
                                        DIP { DIG 21 ; DROP } ;
                                        DUG 21 ;
                                        DROP 4 ;
                                        PAIR 17 ;
                                        DIG 1 ;
                                        PAIR } }
                                  { IF_LEFT
                                      { UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        DUP 14 ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        NOT ;
                                        IF { DUP 14 ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             PUSH string "LOK" ;
                                             PAIR ;
                                             FAILWITH }
                                           {} ;
                                        DUP 14 ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        DROP ;
                                        PUSH bool False ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        DIP { DIG 13 ; DROP } ;
                                        DUG 13 ;
                                        PUSH nat 0 ;
                                        DUP 3 ;
                                        COMPARE ;
                                        GT ;
                                        NOT ;
                                        IF { PUSH string "ERR" ; FAILWITH } {} ;
                                        DUP 47 ;
                                        UNIT ;
                                        EXEC ;
                                        NOT ;
                                        IF { PUSH string "ERR" ; FAILWITH } {} ;
                                        DUP 45 ;
                                        DUP 4 ;
                                        DUP 6 ;
                                        PAIR ;
                                        EXEC ;
                                        NOT ;
                                        IF { PUSH string "ERR" ; FAILWITH } {} ;
                                        DUP 14 ;
                                        DUP 22 ;
                                        DUP 5 ;
                                        DUP 7 ;
                                        PAIR ;
                                        DUP 8 ;
                                        PAIR ;
                                        GET ;
                                        IF_NONE
                                          { PUSH string "positions" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                          {} ;
                                        DUP 17 ;
                                        DUP 19 ;
                                        PUSH bool False ;
                                        PUSH bool False ;
                                        PUSH nat 0 ;
                                        DUP 9 ;
                                        COMPARE ;
                                        NEQ ;
                                        IF { DUP 50 ;
                                             UNIT ;
                                             EXEC ;
                                             DUP 44 ;
                                             DUP 47 ;
                                             DUP 50 ;
                                             PAIR ;
                                             DUP 49 ;
                                             PAIR ;
                                             DUP 47 ;
                                             PAIR ;
                                             DUP 23 ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             CAR ;
                                             PAIR ;
                                             DUP 27 ;
                                             PAIR ;
                                             DUP 23 ;
                                             CDR ;
                                             CDR ;
                                             CAR ;
                                             PAIR ;
                                             DUP 23 ;
                                             CDR ;
                                             CAR ;
                                             PAIR ;
                                             PUSH nat 0 ;
                                             PAIR ;
                                             DUP 3 ;
                                             PAIR ;
                                             DUP 31 ;
                                             PAIR ;
                                             EXEC ;
                                             DUP ;
                                             CAR ;
                                             DUP 2 ;
                                             CDR ;
                                             DUP 29 ;
                                             DUP 15 ;
                                             GET ;
                                             IF_NONE
                                               { PUSH string "ticks" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                               {} ;
                                             DUP ;
                                             CAR ;
                                             DUP 14 ;
                                             DUP 2 ;
                                             ADD ;
                                             DUP 24 ;
                                             DUP 2 ;
                                             COMPARE ;
                                             LE ;
                                             NOT ;
                                             IF { PUSH string "LO" ; FAILWITH } {} ;
                                             PUSH nat 0 ;
                                             DUP 3 ;
                                             COMPARE ;
                                             EQ ;
                                             PUSH nat 0 ;
                                             DUP 3 ;
                                             COMPARE ;
                                             EQ ;
                                             COMPARE ;
                                             NEQ ;
                                             DIP { DIG 8 ; DROP } ;
                                             DUG 8 ;
                                             PUSH nat 0 ;
                                             DUP 3 ;
                                             COMPARE ;
                                             EQ ;
                                             IF { DUP 13 ;
                                                  CDR ;
                                                  CAR ;
                                                  DUP 18 ;
                                                  COMPARE ;
                                                  LE ;
                                                  IF { DUP 3 ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       DROP ;
                                                       DUP 14 ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       DIP { DIG 2 ; DROP } ;
                                                       DUG 2 ;
                                                       DUP 3 ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       DROP ;
                                                       DUP 14 ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       DIP { DIG 2 ; DROP } ;
                                                       DUG 2 ;
                                                       DUP 3 ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       DROP ;
                                                       DUP 10 ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       DIP { DIG 2 ; DROP } ;
                                                       DUG 2 ;
                                                       DUP 3 ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       DROP ;
                                                       DUP 10 ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       DIP { DIG 2 ; DROP } ;
                                                       DUG 2 ;
                                                       DUP 3 ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       DROP ;
                                                       DUP 14 ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       DIP { DIG 2 ; DROP } ;
                                                       DUG 2 }
                                                     {} ;
                                                  DUP 3 ;
                                                  UNPAIR ;
                                                  SWAP ;
                                                  UNPAIR ;
                                                  SWAP ;
                                                  UNPAIR ;
                                                  SWAP ;
                                                  UNPAIR ;
                                                  SWAP ;
                                                  UNPAIR ;
                                                  SWAP ;
                                                  UNPAIR ;
                                                  SWAP ;
                                                  UNPAIR ;
                                                  SWAP ;
                                                  DROP ;
                                                  PUSH bool True ;
                                                  SWAP ;
                                                  PAIR ;
                                                  SWAP ;
                                                  PAIR ;
                                                  SWAP ;
                                                  PAIR ;
                                                  SWAP ;
                                                  PAIR ;
                                                  SWAP ;
                                                  PAIR ;
                                                  SWAP ;
                                                  PAIR ;
                                                  SWAP ;
                                                  PAIR ;
                                                  DIP { DIG 2 ; DROP } ;
                                                  DUG 2 }
                                                {} ;
                                             DUP 3 ;
                                             UNPAIR ;
                                             DROP ;
                                             DUP 2 ;
                                             PAIR ;
                                             DIP { DIG 2 ; DROP } ;
                                             DUG 2 ;
                                             DUP 3 ;
                                             UNPAIR ;
                                             SWAP ;
                                             UNPAIR ;
                                             DROP ;
                                             DUP 17 ;
                                             INT ;
                                             DUP 6 ;
                                             CDR ;
                                             CAR ;
                                             ADD ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR ;
                                             DIP { DIG 2 ; DROP } ;
                                             DUG 2 ;
                                             DUP 32 ;
                                             DUP 4 ;
                                             SOME ;
                                             DUP 19 ;
                                             UPDATE ;
                                             DIP { DIG 31 ; DROP } ;
                                             DUG 31 ;
                                             DUP 32 ;
                                             DUP 17 ;
                                             GET ;
                                             IF_NONE
                                               { PUSH string "ticks" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                               {} ;
                                             DUP ;
                                             CAR ;
                                             DIP { DIG 2 ; DROP } ;
                                             DUG 2 ;
                                             DUP 16 ;
                                             DUP 4 ;
                                             ADD ;
                                             DIP { DIG 1 ; DROP } ;
                                             DUG 1 ;
                                             DUP 25 ;
                                             DUP 3 ;
                                             COMPARE ;
                                             LE ;
                                             NOT ;
                                             IF { PUSH string "LO" ; FAILWITH } {} ;
                                             PUSH nat 0 ;
                                             DUP 4 ;
                                             COMPARE ;
                                             EQ ;
                                             PUSH nat 0 ;
                                             DUP 4 ;
                                             COMPARE ;
                                             EQ ;
                                             COMPARE ;
                                             NEQ ;
                                             DIP { DIG 8 ; DROP } ;
                                             DUG 8 ;
                                             PUSH nat 0 ;
                                             DUP 4 ;
                                             COMPARE ;
                                             EQ ;
                                             IF { DUP 14 ;
                                                  CDR ;
                                                  CAR ;
                                                  DUP 18 ;
                                                  COMPARE ;
                                                  LE ;
                                                  IF { DUP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       DROP ;
                                                       DUP 32 ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       DROP ;
                                                       DUP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       DROP ;
                                                       DUP 34 ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       DROP ;
                                                       DUP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       DROP ;
                                                       DUP 11 ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       DROP ;
                                                       DUP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       DROP ;
                                                       DUP 11 ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       DROP ;
                                                       DUP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       DROP ;
                                                       DUP 15 ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       DROP }
                                                     {} ;
                                                  DUP ;
                                                  UNPAIR ;
                                                  SWAP ;
                                                  UNPAIR ;
                                                  SWAP ;
                                                  UNPAIR ;
                                                  SWAP ;
                                                  UNPAIR ;
                                                  SWAP ;
                                                  UNPAIR ;
                                                  SWAP ;
                                                  UNPAIR ;
                                                  SWAP ;
                                                  UNPAIR ;
                                                  SWAP ;
                                                  DROP ;
                                                  PUSH bool True ;
                                                  SWAP ;
                                                  PAIR ;
                                                  SWAP ;
                                                  PAIR ;
                                                  SWAP ;
                                                  PAIR ;
                                                  SWAP ;
                                                  PAIR ;
                                                  SWAP ;
                                                  PAIR ;
                                                  SWAP ;
                                                  PAIR ;
                                                  SWAP ;
                                                  PAIR ;
                                                  SWAP ;
                                                  DROP }
                                                {} ;
                                             DUP ;
                                             UNPAIR ;
                                             DROP ;
                                             DUP 3 ;
                                             PAIR ;
                                             SWAP ;
                                             DROP ;
                                             DUP 4 ;
                                             UNPAIR ;
                                             SWAP ;
                                             UNPAIR ;
                                             DROP ;
                                             DUP 18 ;
                                             INT ;
                                             DUP 7 ;
                                             CDR ;
                                             CAR ;
                                             SUB ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR ;
                                             DIP { DIG 3 ; DROP } ;
                                             DUG 3 ;
                                             DUP 33 ;
                                             DUP 2 ;
                                             SOME ;
                                             DUP 19 ;
                                             UPDATE ;
                                             DIP { DIG 32 ; DROP } ;
                                             DUG 32 ;
                                             DUP 10 ;
                                             IF { PUSH nat 0 ;
                                                  DUP 25 ;
                                                  DUP 20 ;
                                                  EDIV ;
                                                  IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CDR ; SWAP ; DROP } ;
                                                  COMPARE ;
                                                  EQ ;
                                                  NOT ;
                                                  IF { PUSH string "ERR" ; FAILWITH } {} ;
                                                  PUSH nat 256 ;
                                                  DUP 25 ;
                                                  DUP 20 ;
                                                  EDIV ;
                                                  IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                                  EDIV ;
                                                  IF_NONE { PUSH string "INVALID_INT_NAT" ; FAILWITH } {} ;
                                                  DUP ;
                                                  CAR ;
                                                  DUP 2 ;
                                                  CDR ;
                                                  DUP ;
                                                  PUSH nat 1 ;
                                                  LSL ;
                                                  DUP 38 ;
                                                  DUP 2 ;
                                                  DUP 40 ;
                                                  DUP 6 ;
                                                  GET ;
                                                  IF_NONE
                                                    { PUSH string "tickBitmap" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                                    {} ;
                                                  XOR ;
                                                  SOME ;
                                                  DUP 5 ;
                                                  UPDATE ;
                                                  DIP { DIG 37 ; DROP } ;
                                                  DUG 37 ;
                                                  DROP 4 }
                                                {} ;
                                             DUP 9 ;
                                             IF { PUSH nat 0 ;
                                                  DUP 25 ;
                                                  DUP 19 ;
                                                  EDIV ;
                                                  IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CDR ; SWAP ; DROP } ;
                                                  COMPARE ;
                                                  EQ ;
                                                  NOT ;
                                                  IF { PUSH string "ERR" ; FAILWITH } {} ;
                                                  PUSH nat 256 ;
                                                  DUP 25 ;
                                                  DUP 19 ;
                                                  EDIV ;
                                                  IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                                  EDIV ;
                                                  IF_NONE { PUSH string "INVALID_INT_NAT" ; FAILWITH } {} ;
                                                  DUP ;
                                                  CAR ;
                                                  DUP 2 ;
                                                  CDR ;
                                                  DUP ;
                                                  PUSH nat 1 ;
                                                  LSL ;
                                                  DUP 38 ;
                                                  DUP 2 ;
                                                  DUP 40 ;
                                                  DUP 6 ;
                                                  GET ;
                                                  IF_NONE
                                                    { PUSH string "tickBitmap" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                                    {} ;
                                                  XOR ;
                                                  SOME ;
                                                  DUP 5 ;
                                                  UPDATE ;
                                                  DIP { DIG 37 ; DROP } ;
                                                  DUG 37 ;
                                                  DROP 4 }
                                                {} ;
                                             DROP 8 }
                                           {} ;
                                        DUP 42 ;
                                        DUP 4 ;
                                        DUP 6 ;
                                        PAIR ;
                                        DUP 8 ;
                                        CDR ;
                                        CAR ;
                                        PAIR ;
                                        DUP 11 ;
                                        PAIR ;
                                        DUP 12 ;
                                        PAIR ;
                                        DUP 27 ;
                                        PAIR ;
                                        EXEC ;
                                        DUP ;
                                        CAR ;
                                        DUP 2 ;
                                        CDR ;
                                        PUSH nat 0 ;
                                        PUSH nat 0 ;
                                        DUP 13 ;
                                        COMPARE ;
                                        EQ ;
                                        IF { PUSH nat 0 ;
                                             DUP 10 ;
                                             CAR ;
                                             COMPARE ;
                                             GT ;
                                             NOT ;
                                             IF { PUSH string "NP" ; FAILWITH } {} ;
                                             DUP 9 ;
                                             CAR ;
                                             SWAP ;
                                             DROP }
                                           { DUP 12 ; DUP 10 ; CAR ; ADD ; SWAP ; DROP } ;
                                        PUSH nat 128 ;
                                        PUSH nat 1 ;
                                        LSL ;
                                        INT ;
                                        DUP 10 ;
                                        CAR ;
                                        INT ;
                                        DUP 11 ;
                                        CDR ;
                                        CAR ;
                                        CAR ;
                                        INT ;
                                        DUP 6 ;
                                        INT ;
                                        SUB ;
                                        MUL ;
                                        EDIV ;
                                        IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                        ISNAT ;
                                        IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                        PUSH nat 128 ;
                                        PUSH nat 1 ;
                                        LSL ;
                                        INT ;
                                        DUP 11 ;
                                        CAR ;
                                        INT ;
                                        DUP 12 ;
                                        CDR ;
                                        CAR ;
                                        CDR ;
                                        INT ;
                                        DUP 6 ;
                                        INT ;
                                        SUB ;
                                        MUL ;
                                        EDIV ;
                                        IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                        ISNAT ;
                                        IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                        PUSH nat 0 ;
                                        DUP 15 ;
                                        COMPARE ;
                                        NEQ ;
                                        IF { DUP 11 ;
                                             UNPAIR ;
                                             DROP ;
                                             DUP 4 ;
                                             PAIR ;
                                             DIP { DIG 10 ; DROP } ;
                                             DUG 10 }
                                           {} ;
                                        DUP 11 ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        UNPAIR ;
                                        DROP ;
                                        DUP 8 ;
                                        PAIR ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        DIP { DIG 10 ; DROP } ;
                                        DUG 10 ;
                                        DUP 11 ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        UNPAIR ;
                                        SWAP ;
                                        DROP ;
                                        DUP 7 ;
                                        SWAP ;
                                        PAIR ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        DIP { DIG 10 ; DROP } ;
                                        DUG 10 ;
                                        PUSH nat 0 ;
                                        DUP 3 ;
                                        COMPARE ;
                                        GT ;
                                        IF { PUSH bool True }
                                           { PUSH nat 0 ;
                                             DUP 2 ;
                                             COMPARE ;
                                             GT ;
                                             IF { PUSH bool True } { PUSH bool False } } ;
                                        IF { DUP 11 ;
                                             UNPAIR ;
                                             SWAP ;
                                             UNPAIR ;
                                             SWAP ;
                                             UNPAIR ;
                                             DROP ;
                                             DUP 5 ;
                                             DUP 15 ;
                                             CDR ;
                                             CDR ;
                                             CAR ;
                                             ADD ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR ;
                                             DIP { DIG 10 ; DROP } ;
                                             DUG 10 ;
                                             DUP 11 ;
                                             UNPAIR ;
                                             SWAP ;
                                             UNPAIR ;
                                             SWAP ;
                                             UNPAIR ;
                                             SWAP ;
                                             DROP ;
                                             DUP 4 ;
                                             DUP 15 ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             ADD ;
                                             SWAP ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR ;
                                             DIP { DIG 10 ; DROP } ;
                                             DUG 10 }
                                           {} ;
                                        DUP 33 ;
                                        DUP 12 ;
                                        SOME ;
                                        DUP 17 ;
                                        DUP 19 ;
                                        PAIR ;
                                        DUP 20 ;
                                        PAIR ;
                                        UPDATE ;
                                        DIP { DIG 32 ; DROP } ;
                                        DUG 32 ;
                                        PUSH int 0 ;
                                        PUSH int 0 ;
                                        PUSH nat 0 ;
                                        DUP 17 ;
                                        COMPARE ;
                                        NEQ ;
                                        IF { DUP 18 ;
                                             DUP 15 ;
                                             CDR ;
                                             CAR ;
                                             COMPARE ;
                                             LT ;
                                             IF { DUP 48 ;
                                                  DUP 50 ;
                                                  DUP 18 ;
                                                  INT ;
                                                  PAIR ;
                                                  DUP 59 ;
                                                  DUP 20 ;
                                                  EXEC ;
                                                  PAIR ;
                                                  DUP 59 ;
                                                  DUP 21 ;
                                                  EXEC ;
                                                  PAIR ;
                                                  EXEC ;
                                                  DIP { DIG 1 ; DROP } ;
                                                  DUG 1 }
                                                { DUP 17 ;
                                                  DUP 15 ;
                                                  CDR ;
                                                  CAR ;
                                                  COMPARE ;
                                                  LT ;
                                                  IF { DUP 32 ;
                                                       DUP 37 ;
                                                       DUP 16 ;
                                                       CDR ;
                                                       CDR ;
                                                       CAR ;
                                                       GET ;
                                                       IF_NONE
                                                         { PUSH string "observations" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                                         {} ;
                                                       DUP 60 ;
                                                       UNIT ;
                                                       EXEC ;
                                                       DUP 2 ;
                                                       CAR ;
                                                       COMPARE ;
                                                       EQ ;
                                                       IF { DUP 30 ;
                                                            UNPAIR ;
                                                            SWAP ;
                                                            UNPAIR ;
                                                            SWAP ;
                                                            UNPAIR ;
                                                            DROP ;
                                                            DUP 19 ;
                                                            CDR ;
                                                            CDR ;
                                                            CAR ;
                                                            PAIR ;
                                                            SWAP ;
                                                            PAIR ;
                                                            SWAP ;
                                                            PAIR ;
                                                            DIP { DIG 29 ; DROP } ;
                                                            DUG 29 ;
                                                            DUP 30 ;
                                                            UNPAIR ;
                                                            SWAP ;
                                                            UNPAIR ;
                                                            SWAP ;
                                                            UNPAIR ;
                                                            SWAP ;
                                                            UNPAIR ;
                                                            DROP ;
                                                            DUP 20 ;
                                                            CDR ;
                                                            CDR ;
                                                            CDR ;
                                                            CAR ;
                                                            PAIR ;
                                                            SWAP ;
                                                            PAIR ;
                                                            SWAP ;
                                                            PAIR ;
                                                            SWAP ;
                                                            PAIR ;
                                                            DIP { DIG 29 ; DROP } ;
                                                            DUG 29 }
                                                          { PUSH nat 0 ;
                                                            PUSH nat 0 ;
                                                            DUP 18 ;
                                                            CDR ;
                                                            CDR ;
                                                            CDR ;
                                                            CAR ;
                                                            DUP 19 ;
                                                            CDR ;
                                                            CDR ;
                                                            CDR ;
                                                            CDR ;
                                                            CAR ;
                                                            COMPARE ;
                                                            GT ;
                                                            IF { PUSH int 1 ;
                                                                 DUP 19 ;
                                                                 CDR ;
                                                                 CDR ;
                                                                 CDR ;
                                                                 CAR ;
                                                                 INT ;
                                                                 SUB ;
                                                                 DUP 19 ;
                                                                 CDR ;
                                                                 CDR ;
                                                                 CAR ;
                                                                 INT ;
                                                                 COMPARE ;
                                                                 EQ ;
                                                                 IF { PUSH bool True } { PUSH bool False } }
                                                               { PUSH bool False } ;
                                                            IF { DUP 18 ; CDR ; CDR ; CDR ; CDR ; CAR ; SWAP ; DROP }
                                                               { DUP 18 ; CDR ; CDR ; CDR ; CAR ; SWAP ; DROP } ;
                                                            DUP ;
                                                            INT ;
                                                            PUSH nat 1 ;
                                                            DUP 20 ;
                                                            CDR ;
                                                            CDR ;
                                                            CAR ;
                                                            ADD ;
                                                            INT ;
                                                            EDIV ;
                                                            IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CDR ; SWAP ; DROP } ;
                                                            DIP { DIG 1 ; DROP } ;
                                                            DUG 1 ;
                                                            DUP 40 ;
                                                            DUP 58 ;
                                                            DUP 6 ;
                                                            DUP 21 ;
                                                            CDR ;
                                                            CAR ;
                                                            PAIR ;
                                                            DUP 65 ;
                                                            UNIT ;
                                                            EXEC ;
                                                            PAIR ;
                                                            DUP 6 ;
                                                            PAIR ;
                                                            EXEC ;
                                                            SOME ;
                                                            DUP 4 ;
                                                            UPDATE ;
                                                            DIP { DIG 39 ; DROP } ;
                                                            DUG 39 ;
                                                            DUP 32 ;
                                                            UNPAIR ;
                                                            SWAP ;
                                                            UNPAIR ;
                                                            SWAP ;
                                                            UNPAIR ;
                                                            DROP ;
                                                            DUP 5 ;
                                                            PAIR ;
                                                            SWAP ;
                                                            PAIR ;
                                                            SWAP ;
                                                            PAIR ;
                                                            DIP { DIG 31 ; DROP } ;
                                                            DUG 31 ;
                                                            DUP 32 ;
                                                            UNPAIR ;
                                                            SWAP ;
                                                            UNPAIR ;
                                                            SWAP ;
                                                            UNPAIR ;
                                                            SWAP ;
                                                            UNPAIR ;
                                                            DROP ;
                                                            DUP 5 ;
                                                            PAIR ;
                                                            SWAP ;
                                                            PAIR ;
                                                            SWAP ;
                                                            PAIR ;
                                                            SWAP ;
                                                            PAIR ;
                                                            DIP { DIG 31 ; DROP } ;
                                                            DUG 31 ;
                                                            DROP 2 } ;
                                                       DUP 50 ;
                                                       DUP 52 ;
                                                       DUP 20 ;
                                                       INT ;
                                                       PAIR ;
                                                       DUP 61 ;
                                                       DUP 22 ;
                                                       EXEC ;
                                                       PAIR ;
                                                       DUP 18 ;
                                                       CAR ;
                                                       PAIR ;
                                                       EXEC ;
                                                       DIP { DIG 3 ; DROP } ;
                                                       DUG 3 ;
                                                       DUP 48 ;
                                                       DUP 50 ;
                                                       DUP 20 ;
                                                       INT ;
                                                       PAIR ;
                                                       DUP 18 ;
                                                       CAR ;
                                                       PAIR ;
                                                       DUP 61 ;
                                                       DUP 23 ;
                                                       EXEC ;
                                                       PAIR ;
                                                       EXEC ;
                                                       DIP { DIG 2 ; DROP } ;
                                                       DUG 2 ;
                                                       DUP 18 ;
                                                       DUP 3 ;
                                                       ADD ;
                                                       DIP { DIG 33 ; DROP } ;
                                                       DUG 33 ;
                                                       DROP 2 }
                                                     { DUP 46 ;
                                                       DUP 48 ;
                                                       DUP 18 ;
                                                       INT ;
                                                       PAIR ;
                                                       DUP 59 ;
                                                       DUP 20 ;
                                                       EXEC ;
                                                       PAIR ;
                                                       DUP 59 ;
                                                       DUP 21 ;
                                                       EXEC ;
                                                       PAIR ;
                                                       EXEC ;
                                                       SWAP ;
                                                       DROP } } }
                                           {} ;
                                        DUP 2 ;
                                        ISNAT ;
                                        IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                        DUP 2 ;
                                        ISNAT ;
                                        IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                        DUP 17 ;
                                        UNPACK (pair (pair (pair address address) nat) address) ;
                                        IF_NONE { PUSH string "INVALID_UNPACK" ; FAILWITH } {} ;
                                        DUP 24 ;
                                        DUP 2 ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        COMPARE ;
                                        EQ ;
                                        NOT ;
                                        IF { PUSH string "ERR" ; FAILWITH } {} ;
                                        DUP 25 ;
                                        DUP 2 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        COMPARE ;
                                        EQ ;
                                        NOT ;
                                        IF { PUSH string "ERR" ; FAILWITH } {} ;
                                        DUP 26 ;
                                        DUP 2 ;
                                        CAR ;
                                        CDR ;
                                        COMPARE ;
                                        EQ ;
                                        NOT ;
                                        IF { PUSH string "ERR" ; FAILWITH } {} ;
                                        DUP 3 ;
                                        DUP 30 ;
                                        ADD ;
                                        DIP { DIG 28 ; DROP } ;
                                        DUG 28 ;
                                        DUP 2 ;
                                        DUP 31 ;
                                        ADD ;
                                        DIP { DIG 29 ; DROP } ;
                                        DUG 29 ;
                                        NIL operation ;
                                        NIL operation ;
                                        DUP 42 ;
                                        ITER { CONS } ;
                                        DUP 26 ;
                                        CONTRACT %transfer (pair address address nat) ;
                                        IF_NONE
                                          { PUSH string "transfer" ; PUSH string "ENTRY_NOT_FOUND" ; PAIR ; FAILWITH }
                                          {} ;
                                        PUSH mutez 0 ;
                                        DUP 7 ;
                                        SELF_ADDRESS ;
                                        PAIR ;
                                        DUP 6 ;
                                        CDR ;
                                        PAIR ;
                                        TRANSFER_TOKENS ;
                                        CONS ;
                                        ITER { CONS } ;
                                        DIP { DIG 39 ; DROP } ;
                                        DUG 39 ;
                                        NIL operation ;
                                        NIL operation ;
                                        DUP 42 ;
                                        ITER { CONS } ;
                                        DUP 27 ;
                                        CONTRACT %transfer (pair address address nat) ;
                                        IF_NONE
                                          { PUSH string "transfer" ; PUSH string "ENTRY_NOT_FOUND" ; PAIR ; FAILWITH }
                                          {} ;
                                        PUSH mutez 0 ;
                                        DUP 6 ;
                                        SELF_ADDRESS ;
                                        PAIR ;
                                        DUP 6 ;
                                        CDR ;
                                        PAIR ;
                                        TRANSFER_TOKENS ;
                                        CONS ;
                                        ITER { CONS } ;
                                        DIP { DIG 39 ; DROP } ;
                                        DUG 39 ;
                                        NIL operation ;
                                        NIL operation ;
                                        DUP 42 ;
                                        ITER { CONS } ;
                                        DUP 4 ;
                                        DUP 6 ;
                                        PAIR ;
                                        DUP 22 ;
                                        PAIR ;
                                        DUP 23 ;
                                        PAIR ;
                                        DUP 24 ;
                                        PAIR ;
                                        DUP 25 ;
                                        PAIR ;
                                        SENDER ;
                                        PAIR ;
                                        EMIT %Mint
                                          (pair (address %sender_mint_event)
                                                (address %owner_mint_event)
                                                (int %tickLower_mint_event)
                                                (int %tickUpper_mint_event)
                                                (nat %amount_mint_event)
                                                (nat %amount0_mint_event)
                                                (nat %amount1_mint_event)) ;
                                        CONS ;
                                        ITER { CONS } ;
                                        DIP { DIG 39 ; DROP } ;
                                        DUG 39 ;
                                        DUP 31 ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        DROP ;
                                        PUSH bool True ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        DIP { DIG 30 ; DROP } ;
                                        DUG 30 ;
                                        DROP 22 ;
                                        PAIR 17 ;
                                        DIG 1 ;
                                        PAIR }
                                      { UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        DUP 14 ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        NOT ;
                                        IF { DUP 14 ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             PUSH string "LOK" ;
                                             PAIR ;
                                             FAILWITH }
                                           {} ;
                                        DUP 14 ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        DROP ;
                                        PUSH bool False ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        DIP { DIG 13 ; DROP } ;
                                        DUG 13 ;
                                        DUP 21 ;
                                        DUP 4 ;
                                        DUP 6 ;
                                        PAIR ;
                                        SENDER ;
                                        PAIR ;
                                        GET ;
                                        IF_NONE
                                          { PUSH string "positions" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                          {} ;
                                        DUP ;
                                        CDR ;
                                        CDR ;
                                        CAR ;
                                        DUP 4 ;
                                        COMPARE ;
                                        GT ;
                                        IF { DUP ; CDR ; CDR ; CAR } { DUP 3 } ;
                                        DUP 2 ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        DUP 4 ;
                                        COMPARE ;
                                        GT ;
                                        IF { DUP 2 ; CDR ; CDR ; CDR } { DUP 3 } ;
                                        PUSH nat 0 ;
                                        DUP 3 ;
                                        COMPARE ;
                                        GT ;
                                        IF { DUP 3 ;
                                             UNPAIR ;
                                             SWAP ;
                                             UNPAIR ;
                                             SWAP ;
                                             UNPAIR ;
                                             DROP ;
                                             PUSH int 0 ;
                                             DUP 6 ;
                                             INT ;
                                             DUP 8 ;
                                             CDR ;
                                             CDR ;
                                             CAR ;
                                             SUB ;
                                             COMPARE ;
                                             GE ;
                                             IF { DUP 5 ; INT ; DUP 7 ; CDR ; CDR ; CAR ; SUB ; ABS }
                                                { PUSH string "NAT_NEG_ASSIGN" ; FAILWITH } ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR ;
                                             DIP { DIG 2 ; DROP } ;
                                             DUG 2 ;
                                             PUSH int 0 ;
                                             DUP 3 ;
                                             INT ;
                                             DUP 17 ;
                                             SUB ;
                                             COMPARE ;
                                             GE ;
                                             IF { DUP 2 ; INT ; DUP 16 ; SUB ; ABS }
                                                { PUSH string "NAT_NEG_ASSIGN" ; FAILWITH } ;
                                             DIP { DIG 14 ; DROP } ;
                                             DUG 14 ;
                                             NIL operation ;
                                             NIL operation ;
                                             DUP 28 ;
                                             ITER { CONS } ;
                                             DUP 12 ;
                                             CONTRACT %transfer (pair address address nat) ;
                                             IF_NONE
                                               { PUSH string "transfer" ; PUSH string "ENTRY_NOT_FOUND" ; PAIR ; FAILWITH }
                                               {} ;
                                             PUSH mutez 0 ;
                                             DUP 6 ;
                                             DUP 13 ;
                                             PAIR ;
                                             SELF_ADDRESS ;
                                             PAIR ;
                                             TRANSFER_TOKENS ;
                                             CONS ;
                                             ITER { CONS } ;
                                             DIP { DIG 25 ; DROP } ;
                                             DUG 25 }
                                           {} ;
                                        PUSH nat 0 ;
                                        DUP 2 ;
                                        COMPARE ;
                                        GT ;
                                        IF { DUP 3 ;
                                             UNPAIR ;
                                             SWAP ;
                                             UNPAIR ;
                                             SWAP ;
                                             UNPAIR ;
                                             SWAP ;
                                             DROP ;
                                             PUSH int 0 ;
                                             DUP 5 ;
                                             INT ;
                                             DUP 8 ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             SUB ;
                                             COMPARE ;
                                             GE ;
                                             IF { DUP 4 ; INT ; DUP 7 ; CDR ; CDR ; CDR ; SUB ; ABS }
                                                { PUSH string "NAT_NEG_ASSIGN" ; FAILWITH } ;
                                             SWAP ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR ;
                                             DIP { DIG 2 ; DROP } ;
                                             DUG 2 ;
                                             PUSH int 0 ;
                                             DUP 2 ;
                                             INT ;
                                             DUP 18 ;
                                             SUB ;
                                             COMPARE ;
                                             GE ;
                                             IF { DUP ; INT ; DUP 17 ; SUB ; ABS }
                                                { PUSH string "NAT_NEG_ASSIGN" ; FAILWITH } ;
                                             DIP { DIG 15 ; DROP } ;
                                             DUG 15 ;
                                             NIL operation ;
                                             NIL operation ;
                                             DUP 28 ;
                                             ITER { CONS } ;
                                             DUP 13 ;
                                             CONTRACT %transfer (pair address address nat) ;
                                             IF_NONE
                                               { PUSH string "transfer" ; PUSH string "ENTRY_NOT_FOUND" ; PAIR ; FAILWITH }
                                               {} ;
                                             PUSH mutez 0 ;
                                             DUP 5 ;
                                             DUP 13 ;
                                             PAIR ;
                                             SELF_ADDRESS ;
                                             PAIR ;
                                             TRANSFER_TOKENS ;
                                             CONS ;
                                             ITER { CONS } ;
                                             DIP { DIG 25 ; DROP } ;
                                             DUG 25 }
                                           {} ;
                                        DUP 24 ;
                                        DUP 4 ;
                                        SOME ;
                                        DUP 8 ;
                                        DUP 10 ;
                                        PAIR ;
                                        SENDER ;
                                        PAIR ;
                                        UPDATE ;
                                        DIP { DIG 23 ; DROP } ;
                                        DUG 23 ;
                                        NIL operation ;
                                        NIL operation ;
                                        DUP 28 ;
                                        ITER { CONS } ;
                                        DUP 3 ;
                                        DUP 5 ;
                                        PAIR ;
                                        DUP 9 ;
                                        PAIR ;
                                        DUP 10 ;
                                        PAIR ;
                                        DUP 11 ;
                                        PAIR ;
                                        SENDER ;
                                        PAIR ;
                                        EMIT %Collect
                                          (pair (address %owner_collect_event)
                                                (address %recipient_collect_event)
                                                (int %tickLower_collect_event)
                                                (int %tickUpper_collect_event)
                                                (nat %amount0_collect_event)
                                                (nat %amount1_collect_event)) ;
                                        CONS ;
                                        ITER { CONS } ;
                                        DIP { DIG 25 ; DROP } ;
                                        DUG 25 ;
                                        DUP 17 ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        DROP ;
                                        PUSH bool True ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        DIP { DIG 16 ; DROP } ;
                                        DUG 16 ;
                                        DROP 8 ;
                                        PAIR 17 ;
                                        DIG 1 ;
                                        PAIR } } }
                              { IF_LEFT
                                  { IF_LEFT
                                      { UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        DUP 12 ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        NOT ;
                                        IF { DUP 12 ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             PUSH string "LOK" ;
                                             PAIR ;
                                             FAILWITH }
                                           {} ;
                                        DUP 12 ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        DROP ;
                                        PUSH bool False ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        DIP { DIG 11 ; DROP } ;
                                        DUG 11 ;
                                        DUP 45 ;
                                        UNIT ;
                                        EXEC ;
                                        NOT ;
                                        IF { PUSH string "ERR" ; FAILWITH } {} ;
                                        DUP 43 ;
                                        DUP 3 ;
                                        DUP 5 ;
                                        PAIR ;
                                        EXEC ;
                                        NOT ;
                                        IF { PUSH string "ERR" ; FAILWITH } {} ;
                                        DUP 12 ;
                                        DUP 20 ;
                                        DUP 4 ;
                                        DUP 6 ;
                                        PAIR ;
                                        SENDER ;
                                        PAIR ;
                                        GET ;
                                        IF_NONE
                                          { PUSH string "positions" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                          {} ;
                                        DUP 15 ;
                                        DUP 17 ;
                                        PUSH bool False ;
                                        PUSH bool False ;
                                        PUSH nat 0 ;
                                        DUP 8 ;
                                        COMPARE ;
                                        NEQ ;
                                        IF { DUP 48 ;
                                             UNIT ;
                                             EXEC ;
                                             DUP 42 ;
                                             DUP 45 ;
                                             DUP 48 ;
                                             PAIR ;
                                             DUP 47 ;
                                             PAIR ;
                                             DUP 45 ;
                                             PAIR ;
                                             DUP 21 ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             CAR ;
                                             PAIR ;
                                             DUP 25 ;
                                             PAIR ;
                                             DUP 21 ;
                                             CDR ;
                                             CDR ;
                                             CAR ;
                                             PAIR ;
                                             DUP 21 ;
                                             CDR ;
                                             CAR ;
                                             PAIR ;
                                             PUSH nat 0 ;
                                             PAIR ;
                                             DUP 3 ;
                                             PAIR ;
                                             DUP 29 ;
                                             PAIR ;
                                             EXEC ;
                                             DUP ;
                                             CAR ;
                                             DUP 2 ;
                                             CDR ;
                                             DUP 27 ;
                                             DUP 14 ;
                                             GET ;
                                             IF_NONE
                                               { PUSH string "ticks" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                               {} ;
                                             DUP ;
                                             CAR ;
                                             DUP 13 ;
                                             DUP 2 ;
                                             ADD ;
                                             DUP 22 ;
                                             DUP 2 ;
                                             COMPARE ;
                                             LE ;
                                             NOT ;
                                             IF { PUSH string "LO" ; FAILWITH } {} ;
                                             PUSH nat 0 ;
                                             DUP 3 ;
                                             COMPARE ;
                                             EQ ;
                                             PUSH nat 0 ;
                                             DUP 3 ;
                                             COMPARE ;
                                             EQ ;
                                             COMPARE ;
                                             NEQ ;
                                             DIP { DIG 8 ; DROP } ;
                                             DUG 8 ;
                                             PUSH nat 0 ;
                                             DUP 3 ;
                                             COMPARE ;
                                             EQ ;
                                             IF { DUP 13 ;
                                                  CDR ;
                                                  CAR ;
                                                  DUP 17 ;
                                                  COMPARE ;
                                                  LE ;
                                                  IF { DUP 3 ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       DROP ;
                                                       DUP 14 ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       DIP { DIG 2 ; DROP } ;
                                                       DUG 2 ;
                                                       DUP 3 ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       DROP ;
                                                       DUP 14 ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       DIP { DIG 2 ; DROP } ;
                                                       DUG 2 ;
                                                       DUP 3 ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       DROP ;
                                                       DUP 10 ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       DIP { DIG 2 ; DROP } ;
                                                       DUG 2 ;
                                                       DUP 3 ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       DROP ;
                                                       DUP 10 ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       DIP { DIG 2 ; DROP } ;
                                                       DUG 2 ;
                                                       DUP 3 ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       DROP ;
                                                       DUP 14 ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       DIP { DIG 2 ; DROP } ;
                                                       DUG 2 }
                                                     {} ;
                                                  DUP 3 ;
                                                  UNPAIR ;
                                                  SWAP ;
                                                  UNPAIR ;
                                                  SWAP ;
                                                  UNPAIR ;
                                                  SWAP ;
                                                  UNPAIR ;
                                                  SWAP ;
                                                  UNPAIR ;
                                                  SWAP ;
                                                  UNPAIR ;
                                                  SWAP ;
                                                  UNPAIR ;
                                                  SWAP ;
                                                  DROP ;
                                                  PUSH bool True ;
                                                  SWAP ;
                                                  PAIR ;
                                                  SWAP ;
                                                  PAIR ;
                                                  SWAP ;
                                                  PAIR ;
                                                  SWAP ;
                                                  PAIR ;
                                                  SWAP ;
                                                  PAIR ;
                                                  SWAP ;
                                                  PAIR ;
                                                  SWAP ;
                                                  PAIR ;
                                                  DIP { DIG 2 ; DROP } ;
                                                  DUG 2 }
                                                {} ;
                                             DUP 3 ;
                                             UNPAIR ;
                                             DROP ;
                                             DUP 2 ;
                                             PAIR ;
                                             DIP { DIG 2 ; DROP } ;
                                             DUG 2 ;
                                             DUP 3 ;
                                             UNPAIR ;
                                             SWAP ;
                                             UNPAIR ;
                                             DROP ;
                                             DUP 16 ;
                                             INT ;
                                             DUP 6 ;
                                             CDR ;
                                             CAR ;
                                             ADD ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR ;
                                             DIP { DIG 2 ; DROP } ;
                                             DUG 2 ;
                                             DUP 30 ;
                                             DUP 4 ;
                                             SOME ;
                                             DUP 18 ;
                                             UPDATE ;
                                             DIP { DIG 29 ; DROP } ;
                                             DUG 29 ;
                                             DUP 30 ;
                                             DUP 16 ;
                                             GET ;
                                             IF_NONE
                                               { PUSH string "ticks" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                               {} ;
                                             DUP ;
                                             CAR ;
                                             DIP { DIG 2 ; DROP } ;
                                             DUG 2 ;
                                             DUP 15 ;
                                             DUP 4 ;
                                             ADD ;
                                             DIP { DIG 1 ; DROP } ;
                                             DUG 1 ;
                                             DUP 23 ;
                                             DUP 3 ;
                                             COMPARE ;
                                             LE ;
                                             NOT ;
                                             IF { PUSH string "LO" ; FAILWITH } {} ;
                                             PUSH nat 0 ;
                                             DUP 4 ;
                                             COMPARE ;
                                             EQ ;
                                             PUSH nat 0 ;
                                             DUP 4 ;
                                             COMPARE ;
                                             EQ ;
                                             COMPARE ;
                                             NEQ ;
                                             DIP { DIG 8 ; DROP } ;
                                             DUG 8 ;
                                             PUSH nat 0 ;
                                             DUP 4 ;
                                             COMPARE ;
                                             EQ ;
                                             IF { DUP 14 ;
                                                  CDR ;
                                                  CAR ;
                                                  DUP 17 ;
                                                  COMPARE ;
                                                  LE ;
                                                  IF { DUP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       DROP ;
                                                       DUP 30 ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       DROP ;
                                                       DUP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       DROP ;
                                                       DUP 32 ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       DROP ;
                                                       DUP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       DROP ;
                                                       DUP 11 ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       DROP ;
                                                       DUP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       DROP ;
                                                       DUP 11 ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       DROP ;
                                                       DUP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       SWAP ;
                                                       UNPAIR ;
                                                       DROP ;
                                                       DUP 15 ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR ;
                                                       SWAP ;
                                                       DROP }
                                                     {} ;
                                                  DUP ;
                                                  UNPAIR ;
                                                  SWAP ;
                                                  UNPAIR ;
                                                  SWAP ;
                                                  UNPAIR ;
                                                  SWAP ;
                                                  UNPAIR ;
                                                  SWAP ;
                                                  UNPAIR ;
                                                  SWAP ;
                                                  UNPAIR ;
                                                  SWAP ;
                                                  UNPAIR ;
                                                  SWAP ;
                                                  DROP ;
                                                  PUSH bool True ;
                                                  SWAP ;
                                                  PAIR ;
                                                  SWAP ;
                                                  PAIR ;
                                                  SWAP ;
                                                  PAIR ;
                                                  SWAP ;
                                                  PAIR ;
                                                  SWAP ;
                                                  PAIR ;
                                                  SWAP ;
                                                  PAIR ;
                                                  SWAP ;
                                                  PAIR ;
                                                  SWAP ;
                                                  DROP }
                                                {} ;
                                             DUP ;
                                             UNPAIR ;
                                             DROP ;
                                             DUP 3 ;
                                             PAIR ;
                                             SWAP ;
                                             DROP ;
                                             DUP 4 ;
                                             UNPAIR ;
                                             SWAP ;
                                             UNPAIR ;
                                             DROP ;
                                             DUP 17 ;
                                             INT ;
                                             DUP 7 ;
                                             CDR ;
                                             CAR ;
                                             SUB ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR ;
                                             DIP { DIG 3 ; DROP } ;
                                             DUG 3 ;
                                             DUP 31 ;
                                             DUP 2 ;
                                             SOME ;
                                             DUP 18 ;
                                             UPDATE ;
                                             DIP { DIG 30 ; DROP } ;
                                             DUG 30 ;
                                             DUP 10 ;
                                             IF { PUSH nat 0 ;
                                                  DUP 23 ;
                                                  DUP 19 ;
                                                  EDIV ;
                                                  IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CDR ; SWAP ; DROP } ;
                                                  COMPARE ;
                                                  EQ ;
                                                  NOT ;
                                                  IF { PUSH string "ERR" ; FAILWITH } {} ;
                                                  PUSH nat 256 ;
                                                  DUP 23 ;
                                                  DUP 19 ;
                                                  EDIV ;
                                                  IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                                  EDIV ;
                                                  IF_NONE { PUSH string "INVALID_INT_NAT" ; FAILWITH } {} ;
                                                  DUP ;
                                                  CAR ;
                                                  DUP 2 ;
                                                  CDR ;
                                                  DUP ;
                                                  PUSH nat 1 ;
                                                  LSL ;
                                                  PUSH int 2 ;
                                                  DUP 2 ;
                                                  DUP 38 ;
                                                  DUP 6 ;
                                                  GET ;
                                                  IF_NONE
                                                    { PUSH string "tickBitmap" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                                    {} ;
                                                  EDIV ;
                                                  IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                                  INT ;
                                                  EDIV ;
                                                  IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CDR ; SWAP ; DROP } ;
                                                  PUSH nat 1 ;
                                                  DUP 2 ;
                                                  COMPARE ;
                                                  EQ ;
                                                  IF { DUP 37 ;
                                                       DUP 3 ;
                                                       INT ;
                                                       DUP 39 ;
                                                       DUP 7 ;
                                                       GET ;
                                                       IF_NONE
                                                         { PUSH string "tickBitmap" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                                         {} ;
                                                       INT ;
                                                       SUB ;
                                                       ISNAT ;
                                                       IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                                       SOME ;
                                                       DUP 6 ;
                                                       UPDATE ;
                                                       DIP { DIG 36 ; DROP } ;
                                                       DUG 36 }
                                                     { DUP 37 ;
                                                       DUP 3 ;
                                                       DUP 39 ;
                                                       DUP 7 ;
                                                       GET ;
                                                       IF_NONE
                                                         { PUSH string "tickBitmap" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                                         {} ;
                                                       ADD ;
                                                       SOME ;
                                                       DUP 6 ;
                                                       UPDATE ;
                                                       DIP { DIG 36 ; DROP } ;
                                                       DUG 36 } ;
                                                  DROP 5 }
                                                {} ;
                                             DUP 9 ;
                                             IF { PUSH nat 0 ;
                                                  DUP 23 ;
                                                  DUP 18 ;
                                                  EDIV ;
                                                  IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CDR ; SWAP ; DROP } ;
                                                  COMPARE ;
                                                  EQ ;
                                                  NOT ;
                                                  IF { PUSH string "ERR" ; FAILWITH } {} ;
                                                  PUSH nat 256 ;
                                                  DUP 23 ;
                                                  DUP 18 ;
                                                  EDIV ;
                                                  IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                                  EDIV ;
                                                  IF_NONE { PUSH string "INVALID_INT_NAT" ; FAILWITH } {} ;
                                                  DUP ;
                                                  CAR ;
                                                  DUP 2 ;
                                                  CDR ;
                                                  DUP ;
                                                  PUSH nat 1 ;
                                                  LSL ;
                                                  PUSH int 2 ;
                                                  DUP 2 ;
                                                  DUP 38 ;
                                                  DUP 6 ;
                                                  GET ;
                                                  IF_NONE
                                                    { PUSH string "tickBitmap" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                                    {} ;
                                                  EDIV ;
                                                  IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                                  INT ;
                                                  EDIV ;
                                                  IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CDR ; SWAP ; DROP } ;
                                                  PUSH nat 1 ;
                                                  DUP 2 ;
                                                  COMPARE ;
                                                  EQ ;
                                                  IF { DUP 37 ;
                                                       DUP 3 ;
                                                       INT ;
                                                       DUP 39 ;
                                                       DUP 7 ;
                                                       GET ;
                                                       IF_NONE
                                                         { PUSH string "tickBitmap" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                                         {} ;
                                                       INT ;
                                                       SUB ;
                                                       ISNAT ;
                                                       IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                                       SOME ;
                                                       DUP 6 ;
                                                       UPDATE ;
                                                       DIP { DIG 36 ; DROP } ;
                                                       DUG 36 }
                                                     { DUP 37 ;
                                                       DUP 3 ;
                                                       DUP 39 ;
                                                       DUP 7 ;
                                                       GET ;
                                                       IF_NONE
                                                         { PUSH string "tickBitmap" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                                         {} ;
                                                       ADD ;
                                                       SOME ;
                                                       DUP 6 ;
                                                       UPDATE ;
                                                       DIP { DIG 36 ; DROP } ;
                                                       DUG 36 } ;
                                                  DROP 5 }
                                                {} ;
                                             DROP 8 }
                                           {} ;
                                        DUP 40 ;
                                        DUP 4 ;
                                        DUP 6 ;
                                        PAIR ;
                                        DUP 8 ;
                                        CDR ;
                                        CAR ;
                                        PAIR ;
                                        DUP 10 ;
                                        PAIR ;
                                        DUP 11 ;
                                        PAIR ;
                                        DUP 25 ;
                                        PAIR ;
                                        EXEC ;
                                        DUP ;
                                        CAR ;
                                        DUP 2 ;
                                        CDR ;
                                        PUSH nat 0 ;
                                        PUSH nat 0 ;
                                        DUP 12 ;
                                        COMPARE ;
                                        EQ ;
                                        IF { PUSH nat 0 ;
                                             DUP 10 ;
                                             CAR ;
                                             COMPARE ;
                                             GT ;
                                             NOT ;
                                             IF { PUSH string "NP" ; FAILWITH } {} ;
                                             DUP 9 ;
                                             CAR ;
                                             SWAP ;
                                             DROP }
                                           { DUP 11 ; DUP 10 ; CAR ; ADD ; SWAP ; DROP } ;
                                        PUSH nat 128 ;
                                        PUSH nat 1 ;
                                        LSL ;
                                        INT ;
                                        DUP 10 ;
                                        CAR ;
                                        INT ;
                                        DUP 11 ;
                                        CDR ;
                                        CAR ;
                                        CAR ;
                                        INT ;
                                        DUP 6 ;
                                        INT ;
                                        SUB ;
                                        MUL ;
                                        EDIV ;
                                        IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                        ISNAT ;
                                        IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                        PUSH nat 128 ;
                                        PUSH nat 1 ;
                                        LSL ;
                                        INT ;
                                        DUP 11 ;
                                        CAR ;
                                        INT ;
                                        DUP 12 ;
                                        CDR ;
                                        CAR ;
                                        CDR ;
                                        INT ;
                                        DUP 6 ;
                                        INT ;
                                        SUB ;
                                        MUL ;
                                        EDIV ;
                                        IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                        ISNAT ;
                                        IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                        PUSH nat 0 ;
                                        DUP 14 ;
                                        COMPARE ;
                                        NEQ ;
                                        IF { DUP 11 ;
                                             UNPAIR ;
                                             DROP ;
                                             DUP 4 ;
                                             PAIR ;
                                             DIP { DIG 10 ; DROP } ;
                                             DUG 10 }
                                           {} ;
                                        DUP 11 ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        UNPAIR ;
                                        DROP ;
                                        DUP 8 ;
                                        PAIR ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        DIP { DIG 10 ; DROP } ;
                                        DUG 10 ;
                                        DUP 11 ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        UNPAIR ;
                                        SWAP ;
                                        DROP ;
                                        DUP 7 ;
                                        SWAP ;
                                        PAIR ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        DIP { DIG 10 ; DROP } ;
                                        DUG 10 ;
                                        PUSH nat 0 ;
                                        DUP 3 ;
                                        COMPARE ;
                                        GT ;
                                        IF { PUSH bool True }
                                           { PUSH nat 0 ;
                                             DUP 2 ;
                                             COMPARE ;
                                             GT ;
                                             IF { PUSH bool True } { PUSH bool False } } ;
                                        IF { DUP 11 ;
                                             UNPAIR ;
                                             SWAP ;
                                             UNPAIR ;
                                             SWAP ;
                                             UNPAIR ;
                                             DROP ;
                                             DUP 5 ;
                                             DUP 15 ;
                                             CDR ;
                                             CDR ;
                                             CAR ;
                                             ADD ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR ;
                                             DIP { DIG 10 ; DROP } ;
                                             DUG 10 ;
                                             DUP 11 ;
                                             UNPAIR ;
                                             SWAP ;
                                             UNPAIR ;
                                             SWAP ;
                                             UNPAIR ;
                                             SWAP ;
                                             DROP ;
                                             DUP 4 ;
                                             DUP 15 ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             ADD ;
                                             SWAP ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR ;
                                             DIP { DIG 10 ; DROP } ;
                                             DUG 10 }
                                           {} ;
                                        PUSH int 0 ;
                                        PUSH int 0 ;
                                        PUSH nat 0 ;
                                        DUP 16 ;
                                        COMPARE ;
                                        NEQ ;
                                        IF { DUP 17 ;
                                             DUP 15 ;
                                             CDR ;
                                             CAR ;
                                             COMPARE ;
                                             LT ;
                                             IF { DUP 46 ;
                                                  DUP 48 ;
                                                  DUP 17 ;
                                                  INT ;
                                                  PAIR ;
                                                  DUP 57 ;
                                                  DUP 19 ;
                                                  EXEC ;
                                                  PAIR ;
                                                  DUP 57 ;
                                                  DUP 20 ;
                                                  EXEC ;
                                                  PAIR ;
                                                  EXEC ;
                                                  DIP { DIG 1 ; DROP } ;
                                                  DUG 1 }
                                                { DUP 16 ;
                                                  DUP 15 ;
                                                  CDR ;
                                                  CAR ;
                                                  COMPARE ;
                                                  LT ;
                                                  IF { DUP 30 ;
                                                       DUP 35 ;
                                                       DUP 16 ;
                                                       CDR ;
                                                       CDR ;
                                                       CAR ;
                                                       GET ;
                                                       IF_NONE
                                                         { PUSH string "observations" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                                         {} ;
                                                       DUP 58 ;
                                                       UNIT ;
                                                       EXEC ;
                                                       DUP 2 ;
                                                       CAR ;
                                                       COMPARE ;
                                                       EQ ;
                                                       IF { DUP 28 ;
                                                            UNPAIR ;
                                                            SWAP ;
                                                            UNPAIR ;
                                                            SWAP ;
                                                            UNPAIR ;
                                                            DROP ;
                                                            DUP 19 ;
                                                            CDR ;
                                                            CDR ;
                                                            CAR ;
                                                            PAIR ;
                                                            SWAP ;
                                                            PAIR ;
                                                            SWAP ;
                                                            PAIR ;
                                                            DIP { DIG 27 ; DROP } ;
                                                            DUG 27 ;
                                                            DUP 28 ;
                                                            UNPAIR ;
                                                            SWAP ;
                                                            UNPAIR ;
                                                            SWAP ;
                                                            UNPAIR ;
                                                            SWAP ;
                                                            UNPAIR ;
                                                            DROP ;
                                                            DUP 20 ;
                                                            CDR ;
                                                            CDR ;
                                                            CDR ;
                                                            CAR ;
                                                            PAIR ;
                                                            SWAP ;
                                                            PAIR ;
                                                            SWAP ;
                                                            PAIR ;
                                                            SWAP ;
                                                            PAIR ;
                                                            DIP { DIG 27 ; DROP } ;
                                                            DUG 27 }
                                                          { PUSH nat 0 ;
                                                            PUSH nat 0 ;
                                                            DUP 18 ;
                                                            CDR ;
                                                            CDR ;
                                                            CDR ;
                                                            CAR ;
                                                            DUP 19 ;
                                                            CDR ;
                                                            CDR ;
                                                            CDR ;
                                                            CDR ;
                                                            CAR ;
                                                            COMPARE ;
                                                            GT ;
                                                            IF { PUSH int 1 ;
                                                                 DUP 19 ;
                                                                 CDR ;
                                                                 CDR ;
                                                                 CDR ;
                                                                 CAR ;
                                                                 INT ;
                                                                 SUB ;
                                                                 DUP 19 ;
                                                                 CDR ;
                                                                 CDR ;
                                                                 CAR ;
                                                                 INT ;
                                                                 COMPARE ;
                                                                 EQ ;
                                                                 IF { PUSH bool True } { PUSH bool False } }
                                                               { PUSH bool False } ;
                                                            IF { DUP 18 ; CDR ; CDR ; CDR ; CDR ; CAR ; SWAP ; DROP }
                                                               { DUP 18 ; CDR ; CDR ; CDR ; CAR ; SWAP ; DROP } ;
                                                            DUP ;
                                                            INT ;
                                                            PUSH nat 1 ;
                                                            DUP 20 ;
                                                            CDR ;
                                                            CDR ;
                                                            CAR ;
                                                            ADD ;
                                                            INT ;
                                                            EDIV ;
                                                            IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CDR ; SWAP ; DROP } ;
                                                            DIP { DIG 1 ; DROP } ;
                                                            DUG 1 ;
                                                            DUP 38 ;
                                                            DUP 56 ;
                                                            DUP 6 ;
                                                            DUP 21 ;
                                                            CDR ;
                                                            CAR ;
                                                            PAIR ;
                                                            DUP 63 ;
                                                            UNIT ;
                                                            EXEC ;
                                                            PAIR ;
                                                            DUP 6 ;
                                                            PAIR ;
                                                            EXEC ;
                                                            SOME ;
                                                            DUP 4 ;
                                                            UPDATE ;
                                                            DIP { DIG 37 ; DROP } ;
                                                            DUG 37 ;
                                                            DUP 30 ;
                                                            UNPAIR ;
                                                            SWAP ;
                                                            UNPAIR ;
                                                            SWAP ;
                                                            UNPAIR ;
                                                            DROP ;
                                                            DUP 5 ;
                                                            PAIR ;
                                                            SWAP ;
                                                            PAIR ;
                                                            SWAP ;
                                                            PAIR ;
                                                            DIP { DIG 29 ; DROP } ;
                                                            DUG 29 ;
                                                            DUP 30 ;
                                                            UNPAIR ;
                                                            SWAP ;
                                                            UNPAIR ;
                                                            SWAP ;
                                                            UNPAIR ;
                                                            SWAP ;
                                                            UNPAIR ;
                                                            DROP ;
                                                            DUP 5 ;
                                                            PAIR ;
                                                            SWAP ;
                                                            PAIR ;
                                                            SWAP ;
                                                            PAIR ;
                                                            SWAP ;
                                                            PAIR ;
                                                            DIP { DIG 29 ; DROP } ;
                                                            DUG 29 ;
                                                            DROP 2 } ;
                                                       DUP 48 ;
                                                       DUP 50 ;
                                                       DUP 19 ;
                                                       INT ;
                                                       PAIR ;
                                                       DUP 59 ;
                                                       DUP 21 ;
                                                       EXEC ;
                                                       PAIR ;
                                                       DUP 18 ;
                                                       CAR ;
                                                       PAIR ;
                                                       EXEC ;
                                                       DIP { DIG 3 ; DROP } ;
                                                       DUG 3 ;
                                                       DUP 46 ;
                                                       DUP 48 ;
                                                       DUP 19 ;
                                                       INT ;
                                                       PAIR ;
                                                       DUP 18 ;
                                                       CAR ;
                                                       PAIR ;
                                                       DUP 59 ;
                                                       DUP 22 ;
                                                       EXEC ;
                                                       PAIR ;
                                                       EXEC ;
                                                       DIP { DIG 2 ; DROP } ;
                                                       DUG 2 ;
                                                       DUP 17 ;
                                                       DUP 3 ;
                                                       ADD ;
                                                       DIP { DIG 31 ; DROP } ;
                                                       DUG 31 ;
                                                       DROP 2 }
                                                     { DUP 44 ;
                                                       DUP 46 ;
                                                       DUP 17 ;
                                                       INT ;
                                                       PAIR ;
                                                       DUP 57 ;
                                                       DUP 19 ;
                                                       EXEC ;
                                                       PAIR ;
                                                       DUP 57 ;
                                                       DUP 20 ;
                                                       EXEC ;
                                                       PAIR ;
                                                       EXEC ;
                                                       SWAP ;
                                                       DROP } } }
                                           {} ;
                                        DUP 2 ;
                                        NEG ;
                                        ISNAT ;
                                        IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                        DUP 2 ;
                                        NEG ;
                                        ISNAT ;
                                        IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                        PUSH nat 0 ;
                                        DUP 3 ;
                                        COMPARE ;
                                        GT ;
                                        IF { PUSH bool True }
                                           { PUSH nat 0 ;
                                             DUP 2 ;
                                             COMPARE ;
                                             GT ;
                                             IF { PUSH bool True } { PUSH bool False } } ;
                                        IF { DUP 15 ;
                                             UNPAIR ;
                                             SWAP ;
                                             UNPAIR ;
                                             SWAP ;
                                             UNPAIR ;
                                             DROP ;
                                             DUP 5 ;
                                             DUP 19 ;
                                             CDR ;
                                             CDR ;
                                             CAR ;
                                             ADD ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR ;
                                             DIP { DIG 14 ; DROP } ;
                                             DUG 14 ;
                                             DUP 15 ;
                                             UNPAIR ;
                                             SWAP ;
                                             UNPAIR ;
                                             SWAP ;
                                             UNPAIR ;
                                             SWAP ;
                                             DROP ;
                                             DUP 4 ;
                                             DUP 19 ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             ADD ;
                                             SWAP ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR ;
                                             DIP { DIG 14 ; DROP } ;
                                             DUG 14 }
                                           {} ;
                                        DUP 35 ;
                                        DUP 16 ;
                                        SOME ;
                                        DUP 20 ;
                                        DUP 22 ;
                                        PAIR ;
                                        SENDER ;
                                        PAIR ;
                                        UPDATE ;
                                        DIP { DIG 34 ; DROP } ;
                                        DUG 34 ;
                                        NIL operation ;
                                        NIL operation ;
                                        DUP 39 ;
                                        ITER { CONS } ;
                                        DUP 3 ;
                                        DUP 5 ;
                                        PAIR ;
                                        DUP 20 ;
                                        PAIR ;
                                        DUP 21 ;
                                        PAIR ;
                                        DUP 22 ;
                                        PAIR ;
                                        SENDER ;
                                        PAIR ;
                                        EMIT %Burn
                                          (pair (address %owner_burn_event)
                                                (int %tickLower_burn_event)
                                                (int %tickUpper_burn_event)
                                                (nat %amount_burn_event)
                                                (nat %amount0_burn_event)
                                                (nat %amount1_burn_event)) ;
                                        CONS ;
                                        ITER { CONS } ;
                                        DIP { DIG 36 ; DROP } ;
                                        DUG 36 ;
                                        DUP 28 ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        DROP ;
                                        PUSH bool True ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        DIP { DIG 27 ; DROP } ;
                                        DUG 27 ;
                                        DROP 19 ;
                                        PAIR 17 ;
                                        DIG 1 ;
                                        PAIR }
                                      { UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        DUP 47 ;
                                        UNIT ;
                                        EXEC ;
                                        NOT ;
                                        IF { PUSH string "swap_c1" ; PUSH string "INVALID_CONDITION" ; PAIR ; FAILWITH }
                                           {} ;
                                        PUSH int 0 ;
                                        DUP 4 ;
                                        COMPARE ;
                                        NEQ ;
                                        NOT ;
                                        IF { PUSH string "AS" ; FAILWITH } {} ;
                                        DUP 14 ;
                                        DUP ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        NOT ;
                                        IF { PUSH string "LOK" ; FAILWITH } {} ;
                                        DUP 5 ;
                                        IF { DUP ;
                                             CAR ;
                                             DUP 4 ;
                                             COMPARE ;
                                             LT ;
                                             IF { PUSH nat 4295128739 ;
                                                  DUP 4 ;
                                                  COMPARE ;
                                                  GT ;
                                                  IF { PUSH bool True } { PUSH bool False } }
                                                { PUSH bool False } }
                                           { DUP ;
                                             CAR ;
                                             DUP 4 ;
                                             COMPARE ;
                                             GT ;
                                             IF { PUSH nat 1461446703485210103287273052203988822378723970342 ;
                                                  DUP 4 ;
                                                  COMPARE ;
                                                  LT ;
                                                  IF { PUSH bool True } { PUSH bool False } }
                                                { PUSH bool False } } ;
                                        NOT ;
                                        IF { PUSH string "SPL" ; FAILWITH } {} ;
                                        DUP 15 ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        DROP ;
                                        PUSH bool False ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        DIP { DIG 14 ; DROP } ;
                                        DUG 14 ;
                                        PUSH bool False ;
                                        PUSH nat 0 ;
                                        PAIR ;
                                        PUSH int 0 ;
                                        PAIR ;
                                        DUP 6 ;
                                        IF { PUSH int 16 ;
                                             DUP 3 ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             CAR ;
                                             INT ;
                                             EDIV ;
                                             IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CDR ; SWAP ; DROP } }
                                           { PUSH nat 4 ; DUP 3 ; CDR ; CDR ; CDR ; CDR ; CDR ; CAR ; LSR } ;
                                        PAIR ;
                                        DUP 46 ;
                                        UNIT ;
                                        EXEC ;
                                        PAIR ;
                                        DUP 20 ;
                                        PAIR ;
                                        PUSH int 0 ;
                                        DUP 6 ;
                                        COMPARE ;
                                        GT ;
                                        DUP 2 ;
                                        CDR ;
                                        CAR ;
                                        PUSH nat 0 ;
                                        PAIR ;
                                        DUP 8 ;
                                        IF { DUP 19 } { DUP 20 } ;
                                        PAIR ;
                                        DUP 4 ;
                                        CDR ;
                                        CAR ;
                                        PAIR ;
                                        DUP 4 ;
                                        CAR ;
                                        PAIR ;
                                        PUSH int 0 ;
                                        PAIR ;
                                        DUP 7 ;
                                        PAIR ;
                                        PUSH int 0 ;
                                        DUP 2 ;
                                        CAR ;
                                        COMPARE ;
                                        NEQ ;
                                        IF { DUP 6 ;
                                             DUP 2 ;
                                             CDR ;
                                             CDR ;
                                             CAR ;
                                             COMPARE ;
                                             NEQ ;
                                             IF { PUSH bool True } { PUSH bool False } }
                                           { PUSH bool False } ;
                                        LOOP { PUSH nat 0 ;
                                               PUSH nat 0 ;
                                               PAIR ;
                                               PUSH nat 0 ;
                                               PAIR ;
                                               PUSH nat 0 ;
                                               PAIR ;
                                               PUSH bool False ;
                                               PAIR ;
                                               PUSH int 0 ;
                                               PAIR ;
                                               PUSH nat 0 ;
                                               PAIR ;
                                               DUP ;
                                               UNPAIR ;
                                               DROP ;
                                               DUP 3 ;
                                               CDR ;
                                               CDR ;
                                               CAR ;
                                               PAIR ;
                                               SWAP ;
                                               DROP ;
                                               DUP 34 ;
                                               DUP 37 ;
                                               DUP 37 ;
                                               PAIR ;
                                               DUP 11 ;
                                               PAIR ;
                                               DUP 17 ;
                                               PAIR ;
                                               DUP 4 ;
                                               CDR ;
                                               CDR ;
                                               CDR ;
                                               CAR ;
                                               PAIR ;
                                               DUP 27 ;
                                               PAIR ;
                                               EXEC ;
                                               DUP 2 ;
                                               UNPAIR ;
                                               SWAP ;
                                               UNPAIR ;
                                               DROP ;
                                               DUP 3 ;
                                               CAR ;
                                               PAIR ;
                                               SWAP ;
                                               PAIR ;
                                               DIP { DIG 1 ; DROP } ;
                                               DUG 1 ;
                                               DUP 2 ;
                                               UNPAIR ;
                                               SWAP ;
                                               UNPAIR ;
                                               SWAP ;
                                               UNPAIR ;
                                               DROP ;
                                               DUP 4 ;
                                               CDR ;
                                               PAIR ;
                                               SWAP ;
                                               PAIR ;
                                               SWAP ;
                                               PAIR ;
                                               DIP { DIG 1 ; DROP } ;
                                               DUG 1 ;
                                               PUSH int -887272 ;
                                               DUP 3 ;
                                               CDR ;
                                               CAR ;
                                               COMPARE ;
                                               LT ;
                                               IF { DUP 2 ;
                                                    UNPAIR ;
                                                    SWAP ;
                                                    UNPAIR ;
                                                    DROP ;
                                                    PUSH int -887272 ;
                                                    PAIR ;
                                                    SWAP ;
                                                    PAIR ;
                                                    DIP { DIG 1 ; DROP } ;
                                                    DUG 1 }
                                                  { PUSH int 887272 ;
                                                    DUP 3 ;
                                                    CDR ;
                                                    CAR ;
                                                    COMPARE ;
                                                    GT ;
                                                    IF { DUP 2 ;
                                                         UNPAIR ;
                                                         SWAP ;
                                                         UNPAIR ;
                                                         DROP ;
                                                         PUSH int 887272 ;
                                                         PAIR ;
                                                         SWAP ;
                                                         PAIR ;
                                                         DIP { DIG 1 ; DROP } ;
                                                         DUG 1 }
                                                       {} } ;
                                               DUP 2 ;
                                               UNPAIR ;
                                               SWAP ;
                                               UNPAIR ;
                                               SWAP ;
                                               UNPAIR ;
                                               SWAP ;
                                               UNPAIR ;
                                               DROP ;
                                               DUP 53 ;
                                               DUP 7 ;
                                               CDR ;
                                               CAR ;
                                               EXEC ;
                                               PAIR ;
                                               SWAP ;
                                               PAIR ;
                                               SWAP ;
                                               PAIR ;
                                               SWAP ;
                                               PAIR ;
                                               DIP { DIG 1 ; DROP } ;
                                               DUG 1 ;
                                               DUP 30 ;
                                               DUP 42 ;
                                               DUP 36 ;
                                               PAIR ;
                                               DUP 35 ;
                                               PAIR ;
                                               DUP 34 ;
                                               PAIR ;
                                               DUP 41 ;
                                               PAIR ;
                                               DUP 33 ;
                                               PAIR ;
                                               DUP 17 ;
                                               PAIR ;
                                               DUP 5 ;
                                               CAR ;
                                               PAIR ;
                                               DUP 5 ;
                                               CDR ;
                                               CDR ;
                                               CDR ;
                                               CDR ;
                                               CDR ;
                                               CDR ;
                                               PAIR ;
                                               DUP 12 ;
                                               IF { DUP 10 ; DUP 5 ; CDR ; CDR ; CDR ; CAR ; COMPARE ; LT }
                                                  { DUP 10 ; DUP 5 ; CDR ; CDR ; CDR ; CAR ; COMPARE ; GT } ;
                                               IF { DUP 10 } { DUP 4 ; CDR ; CDR ; CDR ; CAR } ;
                                               PAIR ;
                                               DUP 5 ;
                                               CDR ;
                                               CDR ;
                                               CAR ;
                                               PAIR ;
                                               DUP 26 ;
                                               PAIR ;
                                               EXEC ;
                                               DUP 4 ;
                                               UNPAIR ;
                                               SWAP ;
                                               UNPAIR ;
                                               SWAP ;
                                               UNPAIR ;
                                               DROP ;
                                               DUP 4 ;
                                               CAR ;
                                               PAIR ;
                                               SWAP ;
                                               PAIR ;
                                               SWAP ;
                                               PAIR ;
                                               DIP { DIG 3 ; DROP } ;
                                               DUG 3 ;
                                               DUP 3 ;
                                               UNPAIR ;
                                               SWAP ;
                                               UNPAIR ;
                                               SWAP ;
                                               UNPAIR ;
                                               SWAP ;
                                               UNPAIR ;
                                               SWAP ;
                                               UNPAIR ;
                                               DROP ;
                                               DUP 6 ;
                                               CDR ;
                                               CAR ;
                                               PAIR ;
                                               SWAP ;
                                               PAIR ;
                                               SWAP ;
                                               PAIR ;
                                               SWAP ;
                                               PAIR ;
                                               SWAP ;
                                               PAIR ;
                                               DIP { DIG 2 ; DROP } ;
                                               DUG 2 ;
                                               DUP 3 ;
                                               UNPAIR ;
                                               SWAP ;
                                               UNPAIR ;
                                               SWAP ;
                                               UNPAIR ;
                                               SWAP ;
                                               UNPAIR ;
                                               SWAP ;
                                               UNPAIR ;
                                               SWAP ;
                                               UNPAIR ;
                                               DROP ;
                                               DUP 7 ;
                                               CDR ;
                                               CDR ;
                                               CAR ;
                                               PAIR ;
                                               SWAP ;
                                               PAIR ;
                                               SWAP ;
                                               PAIR ;
                                               SWAP ;
                                               PAIR ;
                                               SWAP ;
                                               PAIR ;
                                               SWAP ;
                                               PAIR ;
                                               DIP { DIG 2 ; DROP } ;
                                               DUG 2 ;
                                               DUP 3 ;
                                               UNPAIR ;
                                               SWAP ;
                                               UNPAIR ;
                                               SWAP ;
                                               UNPAIR ;
                                               SWAP ;
                                               UNPAIR ;
                                               SWAP ;
                                               UNPAIR ;
                                               SWAP ;
                                               UNPAIR ;
                                               SWAP ;
                                               DROP ;
                                               DUP 7 ;
                                               CDR ;
                                               CDR ;
                                               CDR ;
                                               SWAP ;
                                               PAIR ;
                                               SWAP ;
                                               PAIR ;
                                               SWAP ;
                                               PAIR ;
                                               SWAP ;
                                               PAIR ;
                                               SWAP ;
                                               PAIR ;
                                               SWAP ;
                                               PAIR ;
                                               DIP { DIG 2 ; DROP } ;
                                               DUG 2 ;
                                               DUP 5 ;
                                               IF { DUP 4 ;
                                                    UNPAIR ;
                                                    DROP ;
                                                    DUP 4 ;
                                                    CDR ;
                                                    CDR ;
                                                    CDR ;
                                                    CDR ;
                                                    CDR ;
                                                    CDR ;
                                                    DUP 5 ;
                                                    CDR ;
                                                    CDR ;
                                                    CDR ;
                                                    CDR ;
                                                    CAR ;
                                                    ADD ;
                                                    INT ;
                                                    DUP 6 ;
                                                    CAR ;
                                                    SUB ;
                                                    PAIR ;
                                                    DIP { DIG 3 ; DROP } ;
                                                    DUG 3 ;
                                                    DUP 4 ;
                                                    UNPAIR ;
                                                    SWAP ;
                                                    UNPAIR ;
                                                    DROP ;
                                                    DUP 5 ;
                                                    CDR ;
                                                    CDR ;
                                                    CDR ;
                                                    CDR ;
                                                    CDR ;
                                                    CAR ;
                                                    INT ;
                                                    DUP 7 ;
                                                    CDR ;
                                                    CAR ;
                                                    SUB ;
                                                    PAIR ;
                                                    SWAP ;
                                                    PAIR ;
                                                    DIP { DIG 3 ; DROP } ;
                                                    DUG 3 }
                                                  { DUP 4 ;
                                                    UNPAIR ;
                                                    DROP ;
                                                    DUP 4 ;
                                                    CDR ;
                                                    CDR ;
                                                    CDR ;
                                                    CDR ;
                                                    CDR ;
                                                    CAR ;
                                                    INT ;
                                                    DUP 6 ;
                                                    CAR ;
                                                    ADD ;
                                                    PAIR ;
                                                    DIP { DIG 3 ; DROP } ;
                                                    DUG 3 ;
                                                    DUP 4 ;
                                                    UNPAIR ;
                                                    SWAP ;
                                                    UNPAIR ;
                                                    DROP ;
                                                    DUP 5 ;
                                                    CDR ;
                                                    CDR ;
                                                    CDR ;
                                                    CDR ;
                                                    CDR ;
                                                    CDR ;
                                                    INT ;
                                                    DUP 6 ;
                                                    CDR ;
                                                    CDR ;
                                                    CDR ;
                                                    CDR ;
                                                    CAR ;
                                                    INT ;
                                                    DUP 8 ;
                                                    CDR ;
                                                    CAR ;
                                                    ADD ;
                                                    ADD ;
                                                    PAIR ;
                                                    SWAP ;
                                                    PAIR ;
                                                    DIP { DIG 3 ; DROP } ;
                                                    DUG 3 } ;
                                               PUSH nat 0 ;
                                               DUP 7 ;
                                               CAR ;
                                               COMPARE ;
                                               GT ;
                                               IF { DUP 6 ;
                                                    CAR ;
                                                    DUP 4 ;
                                                    CDR ;
                                                    CDR ;
                                                    CDR ;
                                                    CDR ;
                                                    CDR ;
                                                    CDR ;
                                                    EDIV ;
                                                    IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                                    DUP 4 ;
                                                    UNPAIR ;
                                                    SWAP ;
                                                    UNPAIR ;
                                                    SWAP ;
                                                    UNPAIR ;
                                                    SWAP ;
                                                    UNPAIR ;
                                                    SWAP ;
                                                    UNPAIR ;
                                                    SWAP ;
                                                    UNPAIR ;
                                                    SWAP ;
                                                    DROP ;
                                                    PUSH int 0 ;
                                                    DUP 8 ;
                                                    INT ;
                                                    DUP 12 ;
                                                    CDR ;
                                                    CDR ;
                                                    CDR ;
                                                    CDR ;
                                                    CDR ;
                                                    CDR ;
                                                    SUB ;
                                                    COMPARE ;
                                                    GE ;
                                                    IF { DUP 7 ; INT ; DUP 11 ; CDR ; CDR ; CDR ; CDR ; CDR ; CDR ; SUB ; ABS }
                                                       { PUSH string "NAT_NEG_ASSIGN" ; FAILWITH } ;
                                                    SWAP ;
                                                    PAIR ;
                                                    SWAP ;
                                                    PAIR ;
                                                    SWAP ;
                                                    PAIR ;
                                                    SWAP ;
                                                    PAIR ;
                                                    SWAP ;
                                                    PAIR ;
                                                    SWAP ;
                                                    PAIR ;
                                                    DIP { DIG 3 ; DROP } ;
                                                    DUG 3 ;
                                                    DUP 5 ;
                                                    UNPAIR ;
                                                    SWAP ;
                                                    UNPAIR ;
                                                    SWAP ;
                                                    UNPAIR ;
                                                    SWAP ;
                                                    UNPAIR ;
                                                    SWAP ;
                                                    UNPAIR ;
                                                    SWAP ;
                                                    UNPAIR ;
                                                    DROP ;
                                                    DUP 7 ;
                                                    DUP 12 ;
                                                    CDR ;
                                                    CDR ;
                                                    CDR ;
                                                    CDR ;
                                                    CDR ;
                                                    CAR ;
                                                    ADD ;
                                                    PAIR ;
                                                    SWAP ;
                                                    PAIR ;
                                                    SWAP ;
                                                    PAIR ;
                                                    SWAP ;
                                                    PAIR ;
                                                    SWAP ;
                                                    PAIR ;
                                                    SWAP ;
                                                    PAIR ;
                                                    DIP { DIG 4 ; DROP } ;
                                                    DUG 4 ;
                                                    DROP }
                                                  {} ;
                                               PUSH nat 0 ;
                                               DUP 5 ;
                                               CDR ;
                                               CDR ;
                                               CDR ;
                                               CDR ;
                                               CDR ;
                                               CDR ;
                                               COMPARE ;
                                               GT ;
                                               IF { DUP 4 ;
                                                    UNPAIR ;
                                                    SWAP ;
                                                    UNPAIR ;
                                                    SWAP ;
                                                    UNPAIR ;
                                                    SWAP ;
                                                    UNPAIR ;
                                                    SWAP ;
                                                    UNPAIR ;
                                                    DROP ;
                                                    DUP 9 ;
                                                    CDR ;
                                                    CDR ;
                                                    CDR ;
                                                    CDR ;
                                                    CDR ;
                                                    CDR ;
                                                    PUSH nat 128 ;
                                                    PUSH nat 1 ;
                                                    LSL ;
                                                    DUP 10 ;
                                                    CDR ;
                                                    CDR ;
                                                    CDR ;
                                                    CDR ;
                                                    CDR ;
                                                    CDR ;
                                                    MUL ;
                                                    EDIV ;
                                                    IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                                    DUP 10 ;
                                                    CDR ;
                                                    CDR ;
                                                    CDR ;
                                                    CDR ;
                                                    CAR ;
                                                    ADD ;
                                                    PAIR ;
                                                    SWAP ;
                                                    PAIR ;
                                                    SWAP ;
                                                    PAIR ;
                                                    SWAP ;
                                                    PAIR ;
                                                    SWAP ;
                                                    PAIR ;
                                                    DIP { DIG 3 ; DROP } ;
                                                    DUG 3 }
                                                  {} ;
                                               DUP 3 ;
                                               CDR ;
                                               CDR ;
                                               CDR ;
                                               CAR ;
                                               DUP 5 ;
                                               CDR ;
                                               CDR ;
                                               CAR ;
                                               COMPARE ;
                                               EQ ;
                                               IF { DUP 3 ;
                                                    CDR ;
                                                    CDR ;
                                                    CAR ;
                                                    IF { DUP 6 ;
                                                         CDR ;
                                                         CDR ;
                                                         CDR ;
                                                         CDR ;
                                                         CDR ;
                                                         NOT ;
                                                         IF { DUP 44 ;
                                                              DUP 47 ;
                                                              DUP 50 ;
                                                              PAIR ;
                                                              DUP 49 ;
                                                              PAIR ;
                                                              DUP 47 ;
                                                              PAIR ;
                                                              DUP 9 ;
                                                              CDR ;
                                                              CDR ;
                                                              CDR ;
                                                              CAR ;
                                                              PAIR ;
                                                              DUP 8 ;
                                                              CDR ;
                                                              CAR ;
                                                              PAIR ;
                                                              DUP 9 ;
                                                              CDR ;
                                                              CDR ;
                                                              CAR ;
                                                              PAIR ;
                                                              DUP 9 ;
                                                              CDR ;
                                                              CAR ;
                                                              PAIR ;
                                                              PUSH nat 0 ;
                                                              PAIR ;
                                                              DUP 8 ;
                                                              CDR ;
                                                              CDR ;
                                                              CAR ;
                                                              PAIR ;
                                                              DUP 31 ;
                                                              PAIR ;
                                                              EXEC ;
                                                              DUP 7 ;
                                                              UNPAIR ;
                                                              SWAP ;
                                                              UNPAIR ;
                                                              SWAP ;
                                                              UNPAIR ;
                                                              SWAP ;
                                                              UNPAIR ;
                                                              DROP ;
                                                              DUP 5 ;
                                                              CAR ;
                                                              PAIR ;
                                                              SWAP ;
                                                              PAIR ;
                                                              SWAP ;
                                                              PAIR ;
                                                              SWAP ;
                                                              PAIR ;
                                                              DIP { DIG 6 ; DROP } ;
                                                              DUG 6 ;
                                                              DUP 7 ;
                                                              UNPAIR ;
                                                              SWAP ;
                                                              UNPAIR ;
                                                              SWAP ;
                                                              UNPAIR ;
                                                              SWAP ;
                                                              UNPAIR ;
                                                              SWAP ;
                                                              UNPAIR ;
                                                              DROP ;
                                                              DUP 6 ;
                                                              CDR ;
                                                              PAIR ;
                                                              SWAP ;
                                                              PAIR ;
                                                              SWAP ;
                                                              PAIR ;
                                                              SWAP ;
                                                              PAIR ;
                                                              SWAP ;
                                                              PAIR ;
                                                              DIP { DIG 6 ; DROP } ;
                                                              DUG 6 ;
                                                              DUP 7 ;
                                                              UNPAIR ;
                                                              SWAP ;
                                                              UNPAIR ;
                                                              SWAP ;
                                                              UNPAIR ;
                                                              SWAP ;
                                                              UNPAIR ;
                                                              SWAP ;
                                                              UNPAIR ;
                                                              SWAP ;
                                                              DROP ;
                                                              PUSH bool True ;
                                                              SWAP ;
                                                              PAIR ;
                                                              SWAP ;
                                                              PAIR ;
                                                              SWAP ;
                                                              PAIR ;
                                                              SWAP ;
                                                              PAIR ;
                                                              SWAP ;
                                                              PAIR ;
                                                              DIP { DIG 6 ; DROP } ;
                                                              DUG 6 ;
                                                              DROP }
                                                            {} ;
                                                         DUP 3 ;
                                                         CDR ;
                                                         CAR ;
                                                         DUP 12 ;
                                                         IF { DUP 5 ; CDR ; CDR ; CDR ; CDR ; CAR } { DUP 23 } ;
                                                         DUP 13 ;
                                                         IF { DUP 25 } { DUP 6 ; CDR ; CDR ; CDR ; CDR ; CAR } ;
                                                         DUP 9 ;
                                                         CDR ;
                                                         CDR ;
                                                         CDR ;
                                                         CDR ;
                                                         CAR ;
                                                         DUP 10 ;
                                                         CDR ;
                                                         CDR ;
                                                         CDR ;
                                                         CAR ;
                                                         DUP 11 ;
                                                         CDR ;
                                                         CDR ;
                                                         CAR ;
                                                         DUP 32 ;
                                                         DUP 7 ;
                                                         GET ;
                                                         IF_NONE
                                                           { PUSH string "ticks" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                                           {} ;
                                                         CDR ;
                                                         CDR ;
                                                         CAR ;
                                                         INT ;
                                                         DUP 6 ;
                                                         INT ;
                                                         SUB ;
                                                         ISNAT ;
                                                         IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                                         DUP 33 ;
                                                         DUP 8 ;
                                                         GET ;
                                                         IF_NONE
                                                           { PUSH string "ticks" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                                           {} ;
                                                         CDR ;
                                                         CDR ;
                                                         CDR ;
                                                         CAR ;
                                                         INT ;
                                                         DUP 6 ;
                                                         INT ;
                                                         SUB ;
                                                         ISNAT ;
                                                         IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                                         DUP 34 ;
                                                         DUP 9 ;
                                                         GET ;
                                                         IF_NONE
                                                           { PUSH string "ticks" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                                           {} ;
                                                         CDR ;
                                                         CDR ;
                                                         CDR ;
                                                         CDR ;
                                                         CDR ;
                                                         CAR ;
                                                         INT ;
                                                         DUP 6 ;
                                                         INT ;
                                                         SUB ;
                                                         ISNAT ;
                                                         IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                                         DUP 35 ;
                                                         DUP 10 ;
                                                         GET ;
                                                         IF_NONE
                                                           { PUSH string "ticks" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                                           {} ;
                                                         CDR ;
                                                         CDR ;
                                                         CDR ;
                                                         CDR ;
                                                         CAR ;
                                                         DUP 6 ;
                                                         SUB ;
                                                         DUP 36 ;
                                                         DUP 11 ;
                                                         GET ;
                                                         IF_NONE
                                                           { PUSH string "ticks" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                                           {} ;
                                                         CDR ;
                                                         CDR ;
                                                         CDR ;
                                                         CDR ;
                                                         CDR ;
                                                         CDR ;
                                                         CAR ;
                                                         INT ;
                                                         DUP 6 ;
                                                         INT ;
                                                         SUB ;
                                                         ISNAT ;
                                                         IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                                         DUP 37 ;
                                                         DUP 38 ;
                                                         DUP 13 ;
                                                         GET ;
                                                         IF_NONE
                                                           { PUSH string "ticks" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                                           {} ;
                                                         UNPAIR ;
                                                         SWAP ;
                                                         UNPAIR ;
                                                         SWAP ;
                                                         UNPAIR ;
                                                         DROP ;
                                                         DUP 9 ;
                                                         SWAP ;
                                                         UNPAIR ;
                                                         DROP ;
                                                         DUP 9 ;
                                                         SWAP ;
                                                         UNPAIR ;
                                                         DROP ;
                                                         DUP 8 ;
                                                         SWAP ;
                                                         UNPAIR ;
                                                         DROP ;
                                                         DUP 10 ;
                                                         SWAP ;
                                                         UNPAIR ;
                                                         DROP ;
                                                         DUP 9 ;
                                                         PAIR ;
                                                         SWAP ;
                                                         PAIR ;
                                                         SWAP ;
                                                         PAIR ;
                                                         SWAP ;
                                                         PAIR ;
                                                         SWAP ;
                                                         PAIR ;
                                                         SWAP ;
                                                         PAIR ;
                                                         SWAP ;
                                                         PAIR ;
                                                         SOME ;
                                                         DUP 13 ;
                                                         UPDATE ;
                                                         DIP { DIG 36 ; DROP } ;
                                                         DUG 36 ;
                                                         DUP 37 ;
                                                         DUP 12 ;
                                                         GET ;
                                                         IF_NONE
                                                           { PUSH string "ticks" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                                           {} ;
                                                         CDR ;
                                                         CAR ;
                                                         DUP 23 ;
                                                         IF { DUP ; NEG ; SWAP ; DROP } {} ;
                                                         DUP 16 ;
                                                         UNPAIR ;
                                                         SWAP ;
                                                         UNPAIR ;
                                                         SWAP ;
                                                         UNPAIR ;
                                                         SWAP ;
                                                         UNPAIR ;
                                                         SWAP ;
                                                         UNPAIR ;
                                                         SWAP ;
                                                         UNPAIR ;
                                                         SWAP ;
                                                         DROP ;
                                                         DUP 7 ;
                                                         DUP 23 ;
                                                         CDR ;
                                                         CDR ;
                                                         CDR ;
                                                         CDR ;
                                                         CDR ;
                                                         CDR ;
                                                         INT ;
                                                         ADD ;
                                                         ISNAT ;
                                                         IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                                         SWAP ;
                                                         PAIR ;
                                                         SWAP ;
                                                         PAIR ;
                                                         SWAP ;
                                                         PAIR ;
                                                         SWAP ;
                                                         PAIR ;
                                                         SWAP ;
                                                         PAIR ;
                                                         SWAP ;
                                                         PAIR ;
                                                         DIP { DIG 15 ; DROP } ;
                                                         DUG 15 ;
                                                         DROP 12 }
                                                       {} ;
                                                    DUP 4 ;
                                                    UNPAIR ;
                                                    SWAP ;
                                                    UNPAIR ;
                                                    SWAP ;
                                                    UNPAIR ;
                                                    SWAP ;
                                                    UNPAIR ;
                                                    DROP ;
                                                    DUP 15 ;
                                                    IF { PUSH int 1 ; DUP 8 ; CDR ; CAR ; SUB } { DUP 7 ; CDR ; CAR } ;
                                                    PAIR ;
                                                    SWAP ;
                                                    PAIR ;
                                                    SWAP ;
                                                    PAIR ;
                                                    SWAP ;
                                                    PAIR ;
                                                    DIP { DIG 3 ; DROP } ;
                                                    DUG 3 }
                                                  { DUP 3 ;
                                                    CAR ;
                                                    DUP 5 ;
                                                    CDR ;
                                                    CDR ;
                                                    CAR ;
                                                    COMPARE ;
                                                    NEQ ;
                                                    IF { DUP 4 ;
                                                         UNPAIR ;
                                                         SWAP ;
                                                         UNPAIR ;
                                                         SWAP ;
                                                         UNPAIR ;
                                                         SWAP ;
                                                         UNPAIR ;
                                                         DROP ;
                                                         DUP 53 ;
                                                         DUP 55 ;
                                                         DUP 10 ;
                                                         CDR ;
                                                         CDR ;
                                                         CAR ;
                                                         PAIR ;
                                                         EXEC ;
                                                         PAIR ;
                                                         SWAP ;
                                                         PAIR ;
                                                         SWAP ;
                                                         PAIR ;
                                                         SWAP ;
                                                         PAIR ;
                                                         DIP { DIG 3 ; DROP } ;
                                                         DUG 3 }
                                                       {} } ;
                                               DROP 3 ;
                                               PUSH int 0 ;
                                               DUP 2 ;
                                               CAR ;
                                               COMPARE ;
                                               NEQ ;
                                               IF { DUP 6 ;
                                                    DUP 2 ;
                                                    CDR ;
                                                    CDR ;
                                                    CAR ;
                                                    COMPARE ;
                                                    NEQ ;
                                                    IF { PUSH bool True } { PUSH bool False } }
                                                  { PUSH bool False } } ;
                                        DUP 4 ;
                                        CDR ;
                                        CAR ;
                                        DUP 2 ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        CAR ;
                                        COMPARE ;
                                        NEQ ;
                                        IF { PUSH nat 0 ;
                                             PUSH nat 0 ;
                                             DUP 28 ;
                                             DUP 7 ;
                                             CDR ;
                                             CDR ;
                                             CAR ;
                                             GET ;
                                             IF_NONE
                                               { PUSH string "observations" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                               {} ;
                                             DUP 6 ;
                                             CDR ;
                                             CDR ;
                                             CAR ;
                                             DUP 2 ;
                                             CAR ;
                                             COMPARE ;
                                             EQ ;
                                             IF { DUP 7 ;
                                                  CDR ;
                                                  CDR ;
                                                  CAR ;
                                                  DIP { DIG 2 ; DROP } ;
                                                  DUG 2 ;
                                                  DUP 7 ;
                                                  CDR ;
                                                  CDR ;
                                                  CDR ;
                                                  CAR ;
                                                  DIP { DIG 1 ; DROP } ;
                                                  DUG 1 }
                                                { PUSH nat 0 ;
                                                  PUSH nat 0 ;
                                                  DUP 9 ;
                                                  CDR ;
                                                  CDR ;
                                                  CDR ;
                                                  CAR ;
                                                  DUP 10 ;
                                                  CDR ;
                                                  CDR ;
                                                  CDR ;
                                                  CDR ;
                                                  CAR ;
                                                  COMPARE ;
                                                  GT ;
                                                  IF { PUSH int 1 ;
                                                       DUP 10 ;
                                                       CDR ;
                                                       CDR ;
                                                       CDR ;
                                                       CAR ;
                                                       INT ;
                                                       SUB ;
                                                       DUP 10 ;
                                                       CDR ;
                                                       CDR ;
                                                       CAR ;
                                                       INT ;
                                                       COMPARE ;
                                                       EQ ;
                                                       IF { PUSH bool True } { PUSH bool False } }
                                                     { PUSH bool False } ;
                                                  IF { DUP 9 ; CDR ; CDR ; CDR ; CDR ; CAR ; SWAP ; DROP }
                                                     { DUP 9 ; CDR ; CDR ; CDR ; CAR ; SWAP ; DROP } ;
                                                  DUP ;
                                                  INT ;
                                                  PUSH nat 1 ;
                                                  DUP 11 ;
                                                  CDR ;
                                                  CDR ;
                                                  CAR ;
                                                  ADD ;
                                                  INT ;
                                                  EDIV ;
                                                  IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CDR ; SWAP ; DROP } ;
                                                  DIP { DIG 1 ; DROP } ;
                                                  DUG 1 ;
                                                  DUP 31 ;
                                                  DUP 49 ;
                                                  DUP 10 ;
                                                  CDR ;
                                                  CAR ;
                                                  DUP 12 ;
                                                  CDR ;
                                                  CAR ;
                                                  PAIR ;
                                                  DUP 11 ;
                                                  CDR ;
                                                  CDR ;
                                                  CAR ;
                                                  PAIR ;
                                                  DUP 6 ;
                                                  PAIR ;
                                                  EXEC ;
                                                  SOME ;
                                                  DUP 4 ;
                                                  UPDATE ;
                                                  DIP { DIG 30 ; DROP } ;
                                                  DUG 30 ;
                                                  DUP 2 ;
                                                  DIP { DIG 4 ; DROP } ;
                                                  DUG 4 ;
                                                  DUP ;
                                                  DIP { DIG 3 ; DROP } ;
                                                  DUG 3 ;
                                                  DROP 2 } ;
                                             DUP 21 ;
                                             UNPAIR ;
                                             DROP ;
                                             DUP 5 ;
                                             CDR ;
                                             CDR ;
                                             CAR ;
                                             PAIR ;
                                             DIP { DIG 20 ; DROP } ;
                                             DUG 20 ;
                                             DUP 21 ;
                                             UNPAIR ;
                                             SWAP ;
                                             UNPAIR ;
                                             DROP ;
                                             DUP 6 ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             CAR ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR ;
                                             DIP { DIG 20 ; DROP } ;
                                             DUG 20 ;
                                             DUP 21 ;
                                             UNPAIR ;
                                             SWAP ;
                                             UNPAIR ;
                                             SWAP ;
                                             UNPAIR ;
                                             DROP ;
                                             DUP 6 ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR ;
                                             DIP { DIG 20 ; DROP } ;
                                             DUG 20 ;
                                             DUP 21 ;
                                             UNPAIR ;
                                             SWAP ;
                                             UNPAIR ;
                                             SWAP ;
                                             UNPAIR ;
                                             SWAP ;
                                             UNPAIR ;
                                             DROP ;
                                             DUP 6 ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR ;
                                             DIP { DIG 20 ; DROP } ;
                                             DUG 20 ;
                                             DROP 3 }
                                           { DUP 18 ;
                                             UNPAIR ;
                                             DROP ;
                                             DUP 2 ;
                                             CDR ;
                                             CDR ;
                                             CAR ;
                                             PAIR ;
                                             DIP { DIG 17 ; DROP } ;
                                             DUG 17 } ;
                                        DUP ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        DUP 4 ;
                                        CDR ;
                                        CAR ;
                                        COMPARE ;
                                        NEQ ;
                                        IF { DUP ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             DIP { DIG 21 ; DROP } ;
                                             DUG 21 }
                                           {} ;
                                        DUP 8 ;
                                        IF { DUP ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             CAR ;
                                             DIP { DIG 18 ; DROP } ;
                                             DUG 18 ;
                                             PUSH nat 0 ;
                                             DUP 2 ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             CAR ;
                                             COMPARE ;
                                             GT ;
                                             IF { DUP 21 ;
                                                  UNPAIR ;
                                                  DROP ;
                                                  DUP 2 ;
                                                  CDR ;
                                                  CDR ;
                                                  CDR ;
                                                  CDR ;
                                                  CDR ;
                                                  CAR ;
                                                  DUP 23 ;
                                                  CAR ;
                                                  ADD ;
                                                  PAIR ;
                                                  DIP { DIG 20 ; DROP } ;
                                                  DUG 20 }
                                                {} }
                                           { DUP ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             CAR ;
                                             DIP { DIG 19 ; DROP } ;
                                             DUG 19 ;
                                             PUSH nat 0 ;
                                             DUP 2 ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             CAR ;
                                             COMPARE ;
                                             GT ;
                                             IF { DUP 21 ;
                                                  UNPAIR ;
                                                  SWAP ;
                                                  DROP ;
                                                  DUP 2 ;
                                                  CDR ;
                                                  CDR ;
                                                  CDR ;
                                                  CDR ;
                                                  CDR ;
                                                  CAR ;
                                                  DUP 23 ;
                                                  CDR ;
                                                  ADD ;
                                                  SWAP ;
                                                  PAIR ;
                                                  DIP { DIG 20 ; DROP } ;
                                                  DUG 20 }
                                                {} } ;
                                        DUP 2 ;
                                        DUP 9 ;
                                        COMPARE ;
                                        EQ ;
                                        IF { DUP ; CAR ; DUP 8 ; SUB } { DUP ; CDR ; CAR } ;
                                        DUP 3 ;
                                        DUP 10 ;
                                        COMPARE ;
                                        EQ ;
                                        IF { DUP 2 ; CDR ; CAR } { DUP 2 ; CAR ; DUP 9 ; SUB } ;
                                        DUP 10 ;
                                        IF { PUSH int 0 ;
                                             DUP 2 ;
                                             COMPARE ;
                                             LT ;
                                             IF { DUP ;
                                                  ABS ;
                                                  INT ;
                                                  DUP 20 ;
                                                  INT ;
                                                  SUB ;
                                                  ISNAT ;
                                                  IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                                  DIP { DIG 18 ; DROP } ;
                                                  DUG 18 ;
                                                  NIL operation ;
                                                  NIL operation ;
                                                  DUP 31 ;
                                                  ITER { CONS } ;
                                                  DUP 16 ;
                                                  CONTRACT %transfer (pair address address nat) ;
                                                  IF_NONE
                                                    { PUSH string "transfer" ; PUSH string "ENTRY_NOT_FOUND" ; PAIR ; FAILWITH }
                                                    {} ;
                                                  PUSH mutez 0 ;
                                                  DUP 5 ;
                                                  ABS ;
                                                  DUP 16 ;
                                                  PAIR ;
                                                  SELF_ADDRESS ;
                                                  PAIR ;
                                                  TRANSFER_TOKENS ;
                                                  CONS ;
                                                  ITER { CONS } ;
                                                  DIP { DIG 28 ; DROP } ;
                                                  DUG 28 }
                                                {} ;
                                             DUP 7 ;
                                             UNPACK (pair bytes address) ;
                                             IF_NONE { PUSH string "INVALID_UNPACK" ; FAILWITH } {} ;
                                             DUP 3 ;
                                             ISNAT ;
                                             IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                             DUP 4 ;
                                             DUP 21 ;
                                             INT ;
                                             ADD ;
                                             ISNAT ;
                                             IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                             DIP { DIG 19 ; DROP } ;
                                             DUG 19 ;
                                             NIL operation ;
                                             NIL operation ;
                                             DUP 33 ;
                                             ITER { CONS } ;
                                             DUP 17 ;
                                             CONTRACT %transfer (pair address address nat) ;
                                             IF_NONE
                                               { PUSH string "transfer" ; PUSH string "ENTRY_NOT_FOUND" ; PAIR ; FAILWITH }
                                               {} ;
                                             PUSH mutez 0 ;
                                             DUP 5 ;
                                             SELF_ADDRESS ;
                                             PAIR ;
                                             DUP 7 ;
                                             CDR ;
                                             PAIR ;
                                             TRANSFER_TOKENS ;
                                             CONS ;
                                             ITER { CONS } ;
                                             DIP { DIG 30 ; DROP } ;
                                             DUG 30 ;
                                             NIL operation ;
                                             NIL operation ;
                                             DUP 33 ;
                                             ITER { CONS } ;
                                             SENDER ;
                                             CONTRACT %uniswapV3SwapCallback (pair int int bytes) ;
                                             IF_NONE
                                               { PUSH string "uniswapV3SwapCallback" ;
                                                 PUSH string "ENTRY_NOT_FOUND" ;
                                                 PAIR ;
                                                 FAILWITH }
                                               {} ;
                                             PUSH mutez 0 ;
                                             DUP 13 ;
                                             DUP 8 ;
                                             PAIR ;
                                             DUP 9 ;
                                             PAIR ;
                                             TRANSFER_TOKENS ;
                                             CONS ;
                                             ITER { CONS } ;
                                             DIP { DIG 30 ; DROP } ;
                                             DUG 30 ;
                                             DROP 2 }
                                           { PUSH int 0 ;
                                             DUP 3 ;
                                             COMPARE ;
                                             LT ;
                                             IF { DUP 2 ;
                                                  ABS ;
                                                  INT ;
                                                  DUP 19 ;
                                                  INT ;
                                                  SUB ;
                                                  ISNAT ;
                                                  IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                                  DIP { DIG 17 ; DROP } ;
                                                  DUG 17 ;
                                                  NIL operation ;
                                                  NIL operation ;
                                                  DUP 31 ;
                                                  ITER { CONS } ;
                                                  DUP 15 ;
                                                  CONTRACT %transfer (pair address address nat) ;
                                                  IF_NONE
                                                    { PUSH string "transfer" ; PUSH string "ENTRY_NOT_FOUND" ; PAIR ; FAILWITH }
                                                    {} ;
                                                  PUSH mutez 0 ;
                                                  DUP 6 ;
                                                  ABS ;
                                                  DUP 16 ;
                                                  PAIR ;
                                                  SELF_ADDRESS ;
                                                  PAIR ;
                                                  TRANSFER_TOKENS ;
                                                  CONS ;
                                                  ITER { CONS } ;
                                                  DIP { DIG 28 ; DROP } ;
                                                  DUG 28 }
                                                {} ;
                                             DUP 7 ;
                                             UNPACK (pair bytes address) ;
                                             IF_NONE { PUSH string "INVALID_UNPACK" ; FAILWITH } {} ;
                                             DUP 2 ;
                                             ISNAT ;
                                             IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                             DUP 3 ;
                                             DUP 21 ;
                                             INT ;
                                             ADD ;
                                             ISNAT ;
                                             IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                             DIP { DIG 19 ; DROP } ;
                                             DUG 19 ;
                                             NIL operation ;
                                             NIL operation ;
                                             DUP 33 ;
                                             ITER { CONS } ;
                                             DUP 18 ;
                                             CONTRACT %transfer (pair address address nat) ;
                                             IF_NONE
                                               { PUSH string "transfer" ; PUSH string "ENTRY_NOT_FOUND" ; PAIR ; FAILWITH }
                                               {} ;
                                             PUSH mutez 0 ;
                                             DUP 5 ;
                                             SELF_ADDRESS ;
                                             PAIR ;
                                             DUP 7 ;
                                             CDR ;
                                             PAIR ;
                                             TRANSFER_TOKENS ;
                                             CONS ;
                                             ITER { CONS } ;
                                             DIP { DIG 30 ; DROP } ;
                                             DUG 30 ;
                                             NIL operation ;
                                             NIL operation ;
                                             DUP 33 ;
                                             ITER { CONS } ;
                                             SENDER ;
                                             CONTRACT %uniswapV3SwapCallback (pair int int bytes) ;
                                             IF_NONE
                                               { PUSH string "uniswapV3SwapCallback" ;
                                                 PUSH string "ENTRY_NOT_FOUND" ;
                                                 PAIR ;
                                                 FAILWITH }
                                               {} ;
                                             PUSH mutez 0 ;
                                             DUP 13 ;
                                             DUP 8 ;
                                             PAIR ;
                                             DUP 9 ;
                                             PAIR ;
                                             TRANSFER_TOKENS ;
                                             CONS ;
                                             ITER { CONS } ;
                                             DIP { DIG 30 ; DROP } ;
                                             DUG 30 ;
                                             DROP 2 } ;
                                        NIL operation ;
                                        NIL operation ;
                                        DUP 31 ;
                                        ITER { CONS } ;
                                        DUP 5 ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        CAR ;
                                        DUP 6 ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        PAIR ;
                                        DUP 6 ;
                                        CDR ;
                                        CDR ;
                                        CAR ;
                                        PAIR ;
                                        DUP 4 ;
                                        PAIR ;
                                        DUP 5 ;
                                        PAIR ;
                                        DUP 14 ;
                                        PAIR ;
                                        SENDER ;
                                        PAIR ;
                                        EMIT %Swap
                                          (pair (address %sender_swap_event)
                                                (address %recipient_swap_event)
                                                (int %amount0_swap_event)
                                                (int %amount1_swap_event)
                                                (nat %sqrtPriceX96_swap_event)
                                                (nat %liquidity_swap_event)
                                                (int %tick_swap_event)) ;
                                        CONS ;
                                        ITER { CONS } ;
                                        DIP { DIG 28 ; DROP } ;
                                        DUG 28 ;
                                        DUP 20 ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        DROP ;
                                        PUSH bool True ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        DIP { DIG 19 ; DROP } ;
                                        DUG 19 ;
                                        DROP 11 ;
                                        PAIR 17 ;
                                        DIG 1 ;
                                        PAIR } }
                                  { IF_LEFT
                                      { UNPAIR ;
                                        SWAP ;
                                        DUP 11 ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        NOT ;
                                        IF { DUP 11 ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             PUSH string "LOK" ;
                                             PAIR ;
                                             FAILWITH }
                                           {} ;
                                        DUP 11 ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        DROP ;
                                        PUSH bool False ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        DIP { DIG 10 ; DROP } ;
                                        DUG 10 ;
                                        DUP 43 ;
                                        DUP 4 ;
                                        EXEC ;
                                        NOT ;
                                        IF { PUSH string "ERR" ; FAILWITH } {} ;
                                        PUSH nat 0 ;
                                        DUP 3 ;
                                        COMPARE ;
                                        EQ ;
                                        IF { PUSH bool True }
                                           { PUSH nat 4 ;
                                             DUP 3 ;
                                             COMPARE ;
                                             GE ;
                                             IF { PUSH nat 10 ;
                                                  DUP 3 ;
                                                  COMPARE ;
                                                  LE ;
                                                  IF { PUSH bool True } { PUSH bool False } }
                                                { PUSH bool False } ;
                                             IF { PUSH bool True } { PUSH bool False } } ;
                                        IF { PUSH nat 0 ;
                                             DUP 2 ;
                                             COMPARE ;
                                             EQ ;
                                             IF { PUSH bool True }
                                                { PUSH nat 4 ;
                                                  DUP 2 ;
                                                  COMPARE ;
                                                  GE ;
                                                  IF { PUSH nat 10 ;
                                                       DUP 2 ;
                                                       COMPARE ;
                                                       LE ;
                                                       IF { PUSH bool True } { PUSH bool False } }
                                                     { PUSH bool False } ;
                                                  IF { PUSH bool True } { PUSH bool False } } ;
                                             IF { PUSH bool True } { PUSH bool False } }
                                           { PUSH bool False } ;
                                        NOT ;
                                        IF { PUSH string "ERR" ; FAILWITH } {} ;
                                        DUP 11 ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        CAR ;
                                        DUP 12 ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        DROP ;
                                        PUSH nat 4 ;
                                        DUP 9 ;
                                        LSL ;
                                        DUP 10 ;
                                        ADD ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        DIP { DIG 11 ; DROP } ;
                                        DUG 11 ;
                                        NIL operation ;
                                        NIL operation ;
                                        DUP 23 ;
                                        ITER { CONS } ;
                                        DUP 4 ;
                                        DUP 6 ;
                                        PAIR ;
                                        PUSH nat 4 ;
                                        DUP 5 ;
                                        LSR ;
                                        PAIR ;
                                        PUSH int 16 ;
                                        DUP 5 ;
                                        INT ;
                                        EDIV ;
                                        IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CDR ; SWAP ; DROP } ;
                                        PAIR ;
                                        EMIT %SetFeeProtocol
                                          (pair (nat %feeProtocol0Old_setFeeProtocol_event)
                                                (nat %feeProtocol1Old_setFeeProtocol_event)
                                                (nat %feeProtocol0New_setFeeProtocol_event)
                                                (nat %feeProtocol1New_setFeeProtocol_event)) ;
                                        CONS ;
                                        ITER { CONS } ;
                                        DIP { DIG 20 ; DROP } ;
                                        DUG 20 ;
                                        DUP 12 ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        DROP ;
                                        PUSH bool True ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        DIP { DIG 11 ; DROP } ;
                                        DUG 11 ;
                                        DROP 3 ;
                                        PAIR 17 ;
                                        DIG 1 ;
                                        PAIR }
                                      { UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        DUP 12 ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        NOT ;
                                        IF { DUP 12 ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             PUSH string "LOK" ;
                                             PAIR ;
                                             FAILWITH }
                                           {} ;
                                        DUP 12 ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        DROP ;
                                        PUSH bool False ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        DIP { DIG 11 ; DROP } ;
                                        DUG 11 ;
                                        DUP 44 ;
                                        DUP 5 ;
                                        EXEC ;
                                        NOT ;
                                        IF { PUSH string "ERR" ; FAILWITH } {} ;
                                        DUP 15 ;
                                        CAR ;
                                        DUP 3 ;
                                        COMPARE ;
                                        GT ;
                                        IF { DUP 15 ; CAR } { DUP 2 } ;
                                        DUP 16 ;
                                        CDR ;
                                        DUP 3 ;
                                        COMPARE ;
                                        GT ;
                                        IF { DUP 16 ; CDR } { DUP 2 } ;
                                        PUSH nat 0 ;
                                        DUP 3 ;
                                        COMPARE ;
                                        GT ;
                                        IF { DUP 17 ;
                                             CAR ;
                                             DUP 3 ;
                                             COMPARE ;
                                             EQ ;
                                             IF { PUSH int 0 ;
                                                  PUSH int 1 ;
                                                  DUP 4 ;
                                                  SUB ;
                                                  COMPARE ;
                                                  GE ;
                                                  IF { PUSH int 1 ; DUP 3 ; SUB ; ABS }
                                                     { PUSH string "NAT_NEG_ASSIGN" ; FAILWITH } ;
                                                  DIP { DIG 1 ; DROP } ;
                                                  DUG 1 }
                                                {} ;
                                             DUP 17 ;
                                             UNPAIR ;
                                             DROP ;
                                             PUSH int 0 ;
                                             DUP 4 ;
                                             INT ;
                                             DUP 20 ;
                                             CAR ;
                                             SUB ;
                                             COMPARE ;
                                             GE ;
                                             IF { DUP 3 ; INT ; DUP 19 ; CAR ; SUB ; ABS }
                                                { PUSH string "NAT_NEG_ASSIGN" ; FAILWITH } ;
                                             PAIR ;
                                             DIP { DIG 16 ; DROP } ;
                                             DUG 16 ;
                                             PUSH int 0 ;
                                             DUP 3 ;
                                             INT ;
                                             DUP 14 ;
                                             SUB ;
                                             COMPARE ;
                                             GE ;
                                             IF { DUP 2 ; INT ; DUP 13 ; SUB ; ABS }
                                                { PUSH string "NAT_NEG_ASSIGN" ; FAILWITH } ;
                                             DIP { DIG 11 ; DROP } ;
                                             DUG 11 ;
                                             NIL operation ;
                                             NIL operation ;
                                             DUP 25 ;
                                             ITER { CONS } ;
                                             DUP 9 ;
                                             CONTRACT %transfer (pair address address nat) ;
                                             IF_NONE
                                               { PUSH string "transfer" ; PUSH string "ENTRY_NOT_FOUND" ; PAIR ; FAILWITH }
                                               {} ;
                                             PUSH mutez 0 ;
                                             DUP 6 ;
                                             DUP 10 ;
                                             PAIR ;
                                             SELF_ADDRESS ;
                                             PAIR ;
                                             TRANSFER_TOKENS ;
                                             CONS ;
                                             ITER { CONS } ;
                                             DIP { DIG 22 ; DROP } ;
                                             DUG 22 }
                                           {} ;
                                        PUSH nat 0 ;
                                        DUP 2 ;
                                        COMPARE ;
                                        GT ;
                                        IF { DUP 17 ;
                                             CDR ;
                                             DUP 2 ;
                                             COMPARE ;
                                             EQ ;
                                             IF { PUSH int 0 ;
                                                  PUSH int 1 ;
                                                  DUP 3 ;
                                                  SUB ;
                                                  COMPARE ;
                                                  GE ;
                                                  IF { PUSH int 1 ; DUP 2 ; SUB ; ABS }
                                                     { PUSH string "NAT_NEG_ASSIGN" ; FAILWITH } ;
                                                  SWAP ;
                                                  DROP }
                                                {} ;
                                             DUP 17 ;
                                             UNPAIR ;
                                             SWAP ;
                                             DROP ;
                                             PUSH int 0 ;
                                             DUP 3 ;
                                             INT ;
                                             DUP 20 ;
                                             CDR ;
                                             SUB ;
                                             COMPARE ;
                                             GE ;
                                             IF { DUP 2 ; INT ; DUP 19 ; CDR ; SUB ; ABS }
                                                { PUSH string "NAT_NEG_ASSIGN" ; FAILWITH } ;
                                             SWAP ;
                                             PAIR ;
                                             DIP { DIG 16 ; DROP } ;
                                             DUG 16 ;
                                             PUSH int 0 ;
                                             DUP 2 ;
                                             INT ;
                                             DUP 15 ;
                                             SUB ;
                                             COMPARE ;
                                             GE ;
                                             IF { DUP ; INT ; DUP 14 ; SUB ; ABS }
                                                { PUSH string "NAT_NEG_ASSIGN" ; FAILWITH } ;
                                             DIP { DIG 12 ; DROP } ;
                                             DUG 12 ;
                                             NIL operation ;
                                             NIL operation ;
                                             DUP 25 ;
                                             ITER { CONS } ;
                                             DUP 10 ;
                                             CONTRACT %transfer (pair address address nat) ;
                                             IF_NONE
                                               { PUSH string "transfer" ; PUSH string "ENTRY_NOT_FOUND" ; PAIR ; FAILWITH }
                                               {} ;
                                             PUSH mutez 0 ;
                                             DUP 5 ;
                                             DUP 10 ;
                                             PAIR ;
                                             SELF_ADDRESS ;
                                             PAIR ;
                                             TRANSFER_TOKENS ;
                                             CONS ;
                                             ITER { CONS } ;
                                             DIP { DIG 22 ; DROP } ;
                                             DUG 22 }
                                           {} ;
                                        NIL operation ;
                                        NIL operation ;
                                        DUP 25 ;
                                        ITER { CONS } ;
                                        DUP 3 ;
                                        DUP 5 ;
                                        PAIR ;
                                        DUP 8 ;
                                        PAIR ;
                                        SENDER ;
                                        PAIR ;
                                        EMIT %CollectProtocol
                                          (pair (address %sender_collectProtocol_event)
                                                (address %recipient_collectProtocol_event)
                                                (nat %amount0_collectProtocol_event)
                                                (nat %amount1_collectProtocol_event)) ;
                                        CONS ;
                                        ITER { CONS } ;
                                        DIP { DIG 22 ; DROP } ;
                                        DUG 22 ;
                                        DUP 14 ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        DROP ;
                                        PUSH bool True ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        DIP { DIG 13 ; DROP } ;
                                        DUG 13 ;
                                        DROP 5 ;
                                        PAIR 17 ;
                                        DIG 1 ;
                                        PAIR } } } ;
                            DIP { DROP 25 } } ;
                     view "blockTimestamp_view"
                          unit
                          nat
                          { DROP ;
                            UNIT ;
                            PUSH int 1 ;
                            PUSH timestamp 0 ;
                            NOW ;
                            SUB ;
                            EDIV ;
                            IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                            ISNAT ;
                            IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                            DUP ;
                            DIP { DIG 1 ; DROP } ;
                            DUG 1 ;
                            DROP } ;
                     view "snapshotCumulativesInside"
                          (pair int int)
                          (pair int nat nat)
                          { UNPAIR ;
                            DIP { CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  UNPAIR ;
                                  SWAP ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  UNPAIR ;
                                  SWAP ;
                                  UNPAIR ;
                                  SWAP ;
                                  DROP } ;
                            UNPAIR ;
                            UNIT ;
                            SELF_ADDRESS ;
                            SELF_ADDRESS ;
                            COMPARE ;
                            NEQ ;
                            IF { SELF_ADDRESS ; PUSH string "DelegateCall" ; PAIR ; FAILWITH } {} ;
                            DUP 3 ;
                            DUP 3 ;
                            COMPARE ;
                            LT ;
                            NOT ;
                            IF { PUSH string "TLU" ; FAILWITH } {} ;
                            PUSH int -887272 ;
                            DUP 3 ;
                            COMPARE ;
                            GE ;
                            NOT ;
                            IF { PUSH string "TLM" ; FAILWITH } {} ;
                            PUSH int 887272 ;
                            DUP 4 ;
                            COMPARE ;
                            LE ;
                            NOT ;
                            IF { PUSH string "TUM" ; FAILWITH } {} ;
                            PUSH int 0 ;
                            PUSH nat 0 ;
                            PUSH nat 0 ;
                            PUSH int 0 ;
                            PUSH int 0 ;
                            PUSH nat 0 ;
                            PUSH nat 0 ;
                            PUSH nat 0 ;
                            PUSH nat 0 ;
                            DUP 13 ;
                            DUP 12 ;
                            GET ;
                            IF_NONE
                              { PUSH string "ticks" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                              {} ;
                            DUP 14 ;
                            DUP 14 ;
                            GET ;
                            IF_NONE
                              { PUSH string "ticks" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                              {} ;
                            DUP 2 ;
                            CDR ;
                            CDR ;
                            CDR ;
                            CDR ;
                            CAR ;
                            DIP { DIG 7 ; DROP } ;
                            DUG 7 ;
                            DUP 2 ;
                            CDR ;
                            CDR ;
                            CDR ;
                            CDR ;
                            CDR ;
                            CAR ;
                            DIP { DIG 5 ; DROP } ;
                            DUG 5 ;
                            DUP 2 ;
                            CDR ;
                            CDR ;
                            CDR ;
                            CDR ;
                            CDR ;
                            CDR ;
                            CAR ;
                            DIP { DIG 3 ; DROP } ;
                            DUG 3 ;
                            DUP 2 ;
                            CDR ;
                            CDR ;
                            CDR ;
                            CDR ;
                            CDR ;
                            CDR ;
                            CDR ;
                            NOT ;
                            IF { PUSH string "ERR" ; FAILWITH } {} ;
                            DUP ;
                            CDR ;
                            CDR ;
                            CDR ;
                            CDR ;
                            CAR ;
                            DIP { DIG 6 ; DROP } ;
                            DUG 6 ;
                            DUP ;
                            CDR ;
                            CDR ;
                            CDR ;
                            CDR ;
                            CDR ;
                            CAR ;
                            DIP { DIG 4 ; DROP } ;
                            DUG 4 ;
                            DUP ;
                            CDR ;
                            CDR ;
                            CDR ;
                            CDR ;
                            CDR ;
                            CDR ;
                            CAR ;
                            DIP { DIG 2 ; DROP } ;
                            DUG 2 ;
                            DUP ;
                            CDR ;
                            CDR ;
                            CDR ;
                            CDR ;
                            CDR ;
                            CDR ;
                            CDR ;
                            NOT ;
                            IF { PUSH string "ERR" ; FAILWITH } {} ;
                            DUP 17 ;
                            DUP 14 ;
                            DUP 2 ;
                            CDR ;
                            CAR ;
                            COMPARE ;
                            LT ;
                            IF { DUP 8 ;
                                 DUP 10 ;
                                 SUB ;
                                 DIP { DIG 11 ; DROP } ;
                                 DUG 11 ;
                                 DUP 6 ;
                                 INT ;
                                 DUP 8 ;
                                 INT ;
                                 SUB ;
                                 ISNAT ;
                                 IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                 DIP { DIG 10 ; DROP } ;
                                 DUG 10 ;
                                 DUP 4 ;
                                 INT ;
                                 DUP 6 ;
                                 INT ;
                                 SUB ;
                                 ISNAT ;
                                 IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                 DIP { DIG 9 ; DROP } ;
                                 DUG 9 ;
                                 DUP 10 ;
                                 DUP 12 ;
                                 PAIR ;
                                 DUP 13 ;
                                 PAIR ;
                                 DIP { DIG 12 ; DROP } ;
                                 DUG 12 }
                               { DUP 15 ;
                                 DUP 2 ;
                                 CDR ;
                                 CAR ;
                                 COMPARE ;
                                 LT ;
                                 IF { SELF_ADDRESS ;
                                      PUSH unit Unit ;
                                      VIEW "blockTimestamp_" nat ;
                                      IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                      SELF_ADDRESS ;
                                      DUP 3 ;
                                      CDR ;
                                      CDR ;
                                      CDR ;
                                      CAR ;
                                      DUP 20 ;
                                      PAIR ;
                                      DUP 4 ;
                                      CDR ;
                                      CDR ;
                                      CAR ;
                                      PAIR ;
                                      DUP 4 ;
                                      CDR ;
                                      CAR ;
                                      PAIR ;
                                      PUSH nat 0 ;
                                      PAIR ;
                                      DUP 3 ;
                                      PAIR ;
                                      VIEW "observationsObserveSingle_view" (pair int nat) ;
                                      IF_NONE { PUSH string "INVALID_RECORD" ; FAILWITH } {} ;
                                      DUP ;
                                      CAR ;
                                      DUP 2 ;
                                      CDR ;
                                      DUP 12 ;
                                      DUP 14 ;
                                      DUP 4 ;
                                      SUB ;
                                      SUB ;
                                      DIP { DIG 15 ; DROP } ;
                                      DUG 15 ;
                                      DUP 10 ;
                                      INT ;
                                      DUP 12 ;
                                      INT ;
                                      DUP 3 ;
                                      INT ;
                                      SUB ;
                                      SUB ;
                                      ISNAT ;
                                      IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                      DIP { DIG 14 ; DROP } ;
                                      DUG 14 ;
                                      DUP 8 ;
                                      INT ;
                                      DUP 10 ;
                                      INT ;
                                      DUP 6 ;
                                      INT ;
                                      SUB ;
                                      SUB ;
                                      ISNAT ;
                                      IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                      DIP { DIG 13 ; DROP } ;
                                      DUG 13 ;
                                      DUP 14 ;
                                      DUP 16 ;
                                      PAIR ;
                                      DUP 17 ;
                                      PAIR ;
                                      DIP { DIG 16 ; DROP } ;
                                      DUG 16 ;
                                      DROP 4 }
                                    { DUP 9 ;
                                      DUP 9 ;
                                      SUB ;
                                      DIP { DIG 11 ; DROP } ;
                                      DUG 11 ;
                                      DUP 7 ;
                                      INT ;
                                      DUP 7 ;
                                      INT ;
                                      SUB ;
                                      ISNAT ;
                                      IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                      DIP { DIG 10 ; DROP } ;
                                      DUG 10 ;
                                      DUP 5 ;
                                      INT ;
                                      DUP 5 ;
                                      INT ;
                                      SUB ;
                                      ISNAT ;
                                      IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                      DIP { DIG 9 ; DROP } ;
                                      DUG 9 ;
                                      DUP 10 ;
                                      DUP 12 ;
                                      PAIR ;
                                      DUP 13 ;
                                      PAIR ;
                                      DIP { DIG 12 ; DROP } ;
                                      DUG 12 } } ;
                            DROP 12 ;
                            DIP { DROP 5 } } ;
                     view "observe"
                          (pair (list nat) (lambda (pair (list nat) nat) (option nat)))
                          (pair (list int) (list nat))
                          { UNPAIR ;
                            DIP { CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  UNPAIR ;
                                  SWAP ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  UNPAIR ;
                                  SWAP ;
                                  DROP } ;
                            UNPAIR ;
                            UNIT ;
                            SELF_ADDRESS ;
                            SELF_ADDRESS ;
                            COMPARE ;
                            NEQ ;
                            IF { SELF_ADDRESS ; PUSH string "DelegateCall" ; PAIR ; FAILWITH } {} ;
                            PUSH nat 0 ;
                            DUP 6 ;
                            CDR ;
                            CDR ;
                            CDR ;
                            CAR ;
                            COMPARE ;
                            GT ;
                            NOT ;
                            IF { PUSH string "I" ; FAILWITH } {} ;
                            SELF_ADDRESS ;
                            PUSH unit Unit ;
                            VIEW "blockTimestamp_" nat ;
                            IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                            NIL int ;
                            NIL nat ;
                            PUSH nat 0 ;
                            DUP 6 ;
                            SIZE ;
                            DUP 2 ;
                            COMPARE ;
                            LT ;
                            LOOP { SELF_ADDRESS ;
                                   DUP 10 ;
                                   CDR ;
                                   CDR ;
                                   CDR ;
                                   CAR ;
                                   DUP 10 ;
                                   PAIR ;
                                   DUP 11 ;
                                   CDR ;
                                   CDR ;
                                   CAR ;
                                   PAIR ;
                                   DUP 11 ;
                                   CDR ;
                                   CAR ;
                                   PAIR ;
                                   DUP 9 ;
                                   DUP 4 ;
                                   DUP 10 ;
                                   PAIR ;
                                   EXEC ;
                                   IF_NONE { PUSH nat 0 } {} ;
                                   PAIR ;
                                   DUP 6 ;
                                   PAIR ;
                                   VIEW "observationsObserveSingle_view" (pair int nat) ;
                                   IF_NONE { PUSH string "INVALID_RECORD" ; FAILWITH } {} ;
                                   NIL int ;
                                   DUP 2 ;
                                   CAR ;
                                   CONS ;
                                   NIL int ;
                                   DUP 6 ;
                                   ITER { CONS } ;
                                   ITER { DUP 2 ; DUP 2 ; CONS ; DIP { DIG 1 ; DROP } ; DUG 1 ; DROP } ;
                                   DIP { DIG 3 ; DROP } ;
                                   DUG 3 ;
                                   NIL nat ;
                                   DUP 2 ;
                                   CDR ;
                                   CONS ;
                                   NIL nat ;
                                   DUP 5 ;
                                   ITER { CONS } ;
                                   ITER { DUP 2 ; DUP 2 ; CONS ; DIP { DIG 1 ; DROP } ; DUG 1 ; DROP } ;
                                   DIP { DIG 2 ; DROP } ;
                                   DUG 2 ;
                                   PUSH nat 1 ;
                                   DUP 3 ;
                                   ADD ;
                                   DIP { DIG 1 ; DROP } ;
                                   DUG 1 ;
                                   DROP ;
                                   DUP 6 ;
                                   SIZE ;
                                   DUP 2 ;
                                   COMPARE ;
                                   LT } ;
                            DUP 2 ;
                            DUP 4 ;
                            PAIR ;
                            DIP { DIG 4 ; DROP } ;
                            DUG 4 ;
                            DROP 4 ;
                            DIP { DROP 4 } } ;
                     view "lte_tickBmpNITWOW_view"
                          (pair nat nat nat)
                          bool
                          { CAR ;
                            UNPAIR 3 ;
                            UNIT ;
                            PUSH bool False ;
                            DUP 3 ;
                            DUP 5 ;
                            COMPARE ;
                            LE ;
                            IF { DUP 3 ;
                                 DUP 6 ;
                                 COMPARE ;
                                 LE ;
                                 IF { PUSH bool True } { PUSH bool False } }
                               { PUSH bool False } ;
                            IF { DUP 5 ;
                                 DUP 5 ;
                                 COMPARE ;
                                 LE ;
                                 SWAP ;
                                 DROP ;
                                 DUP ;
                                 DIP { DIG 1 ; DROP } ;
                                 DUG 1 }
                               { DUP 3 ;
                                 DUP 5 ;
                                 COMPARE ;
                                 GT ;
                                 IF { DUP 4 } { PUSH nat 32 ; PUSH nat 1 ; DUP 6 ; ADD ; LSL } ;
                                 DUP 4 ;
                                 DUP 7 ;
                                 COMPARE ;
                                 GT ;
                                 IF { DUP 6 } { PUSH nat 32 ; PUSH nat 1 ; DUP 8 ; ADD ; LSL } ;
                                 DUP ;
                                 DUP 3 ;
                                 COMPARE ;
                                 LE ;
                                 DIP { DIG 2 ; DROP } ;
                                 DUG 2 ;
                                 DUP 3 ;
                                 DIP { DIG 3 ; DROP } ;
                                 DUG 3 ;
                                 DROP 2 } ;
                            DROP ;
                            DIP { DROP 3 } } ;
                     view "binarySearch_view"
                          (pair nat nat nat nat)
                          (pair (pair (nat %blockTimestamp)
                                      (pair (int %tickCumulative)
                                            (nat %secondsPerLiquidityCumulativeX128)
                                            (bool %initialized)))
                                (pair (nat %blockTimestamp)
                                      (pair (int %tickCumulative)
                                            (nat %secondsPerLiquidityCumulativeX128)
                                            (bool %initialized))))
                          { UNPAIR ;
                            DIP { CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR } ;
                            UNPAIR 4 ;
                            UNIT ;
                            DUP 5 ;
                            INT ;
                            PUSH nat 1 ;
                            DUP 6 ;
                            ADD ;
                            INT ;
                            EDIV ;
                            IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CDR ; SWAP ; DROP } ;
                            PUSH int 1 ;
                            DUP 7 ;
                            DUP 3 ;
                            ADD ;
                            INT ;
                            SUB ;
                            PUSH bool False ;
                            PUSH nat 0 ;
                            PAIR ;
                            PUSH int 0 ;
                            PAIR ;
                            PUSH nat 0 ;
                            PAIR ;
                            PUSH bool False ;
                            PUSH nat 0 ;
                            PAIR ;
                            PUSH int 0 ;
                            PAIR ;
                            PUSH nat 0 ;
                            PAIR ;
                            PUSH nat 0 ;
                            PUSH bool True ;
                            DUP ;
                            LOOP { PUSH int 2 ;
                                   DUP 6 ;
                                   DUP 8 ;
                                   INT ;
                                   ADD ;
                                   EDIV ;
                                   IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                   ISNAT ;
                                   IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                   DIP { DIG 1 ; DROP } ;
                                   DUG 1 ;
                                   DUP 12 ;
                                   DUP 12 ;
                                   INT ;
                                   DUP 4 ;
                                   INT ;
                                   EDIV ;
                                   IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CDR ; SWAP ; DROP } ;
                                   GET ;
                                   IF_NONE
                                     { PUSH string "observations" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                     {} ;
                                   DIP { DIG 3 ; DROP } ;
                                   DUG 3 ;
                                   DUP 4 ;
                                   CDR ;
                                   CDR ;
                                   CDR ;
                                   NOT ;
                                   IF { PUSH nat 1 ; DUP 3 ; ADD ; DIP { DIG 5 ; DROP } ; DUG 5 }
                                      { DUP 12 ;
                                        DUP 12 ;
                                        INT ;
                                        PUSH nat 1 ;
                                        DUP 5 ;
                                        ADD ;
                                        INT ;
                                        EDIV ;
                                        IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CDR ; SWAP ; DROP } ;
                                        GET ;
                                        IF_NONE
                                          { PUSH string "observations" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                          {} ;
                                        DIP { DIG 2 ; DROP } ;
                                        DUG 2 ;
                                        SELF_ADDRESS ;
                                        DUP 10 ;
                                        DUP 6 ;
                                        CAR ;
                                        PAIR ;
                                        DUP 10 ;
                                        PAIR ;
                                        VIEW "lte_tickBmpNITWOW_view" bool ;
                                        IF_NONE { PUSH string "INVALID_RECORD" ; FAILWITH } {} ;
                                        SELF_ADDRESS ;
                                        DUP 5 ;
                                        CAR ;
                                        DUP 12 ;
                                        PAIR ;
                                        DUP 11 ;
                                        PAIR ;
                                        VIEW "lte_tickBmpNITWOW_view" bool ;
                                        IF_NONE { PUSH string "INVALID_RECORD" ; FAILWITH } {} ;
                                        DUP 2 ;
                                        IF { DUP ; IF { PUSH bool True } { PUSH bool False } }
                                           { PUSH bool False } ;
                                        IF { PUSH bool False ; DIP { DIG 2 ; DROP } ; DUG 2 } {} ;
                                        DUP 2 ;
                                        NOT ;
                                        IF { PUSH int 1 ; DUP 5 ; INT ; SUB ; DIP { DIG 6 ; DROP } ; DUG 6 }
                                           { PUSH nat 1 ; DUP 5 ; ADD ; DIP { DIG 7 ; DROP } ; DUG 7 } ;
                                        DROP 2 } ;
                                   DUP } ;
                            DUP 3 ;
                            DUP 5 ;
                            PAIR ;
                            DIP { DIG 6 ; DROP } ;
                            DUG 6 ;
                            DROP 6 ;
                            DIP { DROP 5 } } ;
                     view "transform_view"
                          (pair (pair (nat %blockTimestamp)
                                      (pair (int %tickCumulative)
                                            (nat %secondsPerLiquidityCumulativeX128)
                                            (bool %initialized)))
                                nat
                                int
                                nat)
                          (pair (nat %blockTimestamp)
                                (pair (int %tickCumulative)
                                      (nat %secondsPerLiquidityCumulativeX128)
                                      (bool %initialized)))
                          { CAR ;
                            UNPAIR 4 ;
                            UNIT ;
                            DUP 2 ;
                            CAR ;
                            INT ;
                            DUP 4 ;
                            INT ;
                            SUB ;
                            ISNAT ;
                            IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                            DUP ;
                            INT ;
                            DUP 6 ;
                            MUL ;
                            DUP 4 ;
                            CDR ;
                            CAR ;
                            ADD ;
                            PUSH nat 0 ;
                            DUP 8 ;
                            COMPARE ;
                            GT ;
                            IF { DUP 7 } { PUSH nat 1 } ;
                            PUSH nat 128 ;
                            DUP 4 ;
                            LSL ;
                            EDIV ;
                            IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                            DUP 5 ;
                            CDR ;
                            CDR ;
                            CAR ;
                            ADD ;
                            PUSH bool True ;
                            DUP 2 ;
                            PAIR ;
                            DUP 3 ;
                            PAIR ;
                            DUP 7 ;
                            PAIR ;
                            DUP ;
                            DIP { DIG 4 ; DROP } ;
                            DUG 4 ;
                            DROP 4 ;
                            DIP { DROP 4 } } ;
                     view "getSurroundingObservations_view"
                          (pair nat nat int nat nat nat)
                          (pair (pair (nat %blockTimestamp)
                                      (pair (int %tickCumulative)
                                            (nat %secondsPerLiquidityCumulativeX128)
                                            (bool %initialized)))
                                (pair (nat %blockTimestamp)
                                      (pair (int %tickCumulative)
                                            (nat %secondsPerLiquidityCumulativeX128)
                                            (bool %initialized))))
                          { UNPAIR ;
                            DIP { CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR } ;
                            UNPAIR 6 ;
                            UNIT ;
                            DUP 8 ;
                            DUP 6 ;
                            GET ;
                            IF_NONE
                              { PUSH string "observations" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                              {} ;
                            PUSH bool False ;
                            PUSH nat 0 ;
                            PAIR ;
                            PUSH int 0 ;
                            PAIR ;
                            PUSH nat 0 ;
                            PAIR ;
                            SELF_ADDRESS ;
                            DUP 6 ;
                            DUP 4 ;
                            CAR ;
                            PAIR ;
                            DUP 6 ;
                            PAIR ;
                            VIEW "lte_tickBmpNITWOW_view" bool ;
                            IF_NONE { PUSH bool False } {} ;
                            IF { DUP 5 ;
                                 DUP 3 ;
                                 CAR ;
                                 COMPARE ;
                                 EQ ;
                                 IF { DUP ; DUP 3 ; PAIR ; DIP { DIG 2 ; DROP } ; DUG 2 }
                                    { SELF_ADDRESS ;
                                      DUP 9 ;
                                      DUP 8 ;
                                      PAIR ;
                                      DUP 7 ;
                                      PAIR ;
                                      DUP 4 ;
                                      PAIR ;
                                      VIEW "transform_view"
                                           (pair (nat %blockTimestamp)
                                                 (pair (int %tickCumulative)
                                                       (nat %secondsPerLiquidityCumulativeX128)
                                                       (bool %initialized))) ;
                                      IF_NONE { PUSH string "INVALID_RECORD" ; FAILWITH } {} ;
                                      DUP ;
                                      DUP 4 ;
                                      PAIR ;
                                      DIP { DIG 3 ; DROP } ;
                                      DUG 3 ;
                                      DROP } }
                               { DUP 10 ;
                                 DUP 10 ;
                                 INT ;
                                 PUSH nat 1 ;
                                 DUP 10 ;
                                 ADD ;
                                 INT ;
                                 EDIV ;
                                 IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CDR ; SWAP ; DROP } ;
                                 GET ;
                                 IF_NONE
                                   { PUSH string "observations" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                   {} ;
                                 DIP { DIG 1 ; DROP } ;
                                 DUG 1 ;
                                 DUP 2 ;
                                 CDR ;
                                 CDR ;
                                 CDR ;
                                 NOT ;
                                 IF { DUP 10 ;
                                      PUSH nat 0 ;
                                      GET ;
                                      IF_NONE
                                        { PUSH string "observations" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                        {} ;
                                      DIP { DIG 1 ; DROP } ;
                                      DUG 1 }
                                    {} ;
                                 SELF_ADDRESS ;
                                 DUP 6 ;
                                 DUP 4 ;
                                 CAR ;
                                 PAIR ;
                                 DUP 6 ;
                                 PAIR ;
                                 VIEW "lte_tickBmpNITWOW_view" bool ;
                                 IF_NONE { PUSH bool False } {} ;
                                 NOT ;
                                 IF { PUSH string "OLD" ; FAILWITH } {} ;
                                 SELF_ADDRESS ;
                                 DUP 10 ;
                                 DUP 9 ;
                                 PAIR ;
                                 DUP 7 ;
                                 PAIR ;
                                 DUP 6 ;
                                 PAIR ;
                                 VIEW "binarySearch_view"
                                      (pair (pair (nat %blockTimestamp)
                                                  (pair (int %tickCumulative)
                                                        (nat %secondsPerLiquidityCumulativeX128)
                                                        (bool %initialized)))
                                            (pair (nat %blockTimestamp)
                                                  (pair (int %tickCumulative)
                                                        (nat %secondsPerLiquidityCumulativeX128)
                                                        (bool %initialized)))) ;
                                 IF_NONE { PUSH string "INVALID_RECORD" ; FAILWITH } {} ;
                                 DUP ;
                                 DIP { DIG 3 ; DROP } ;
                                 DUG 3 ;
                                 DROP } ;
                            DROP 2 ;
                            DIP { DROP 7 } } ;
                     view "observationsObserveSingle_view"
                          (pair nat nat int nat nat nat)
                          (pair int nat)
                          { UNPAIR ;
                            DIP { CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR } ;
                            UNPAIR 6 ;
                            UNIT ;
                            PUSH nat 0 ;
                            DUP 4 ;
                            COMPARE ;
                            EQ ;
                            IF { DUP 8 ;
                                 DUP 6 ;
                                 GET ;
                                 IF_NONE
                                   { PUSH string "observations" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                   {} ;
                                 DUP 3 ;
                                 DUP 2 ;
                                 CAR ;
                                 COMPARE ;
                                 NEQ ;
                                 IF { SELF_ADDRESS ;
                                      DUP 8 ;
                                      DUP 7 ;
                                      PAIR ;
                                      DUP 5 ;
                                      PAIR ;
                                      DUP 3 ;
                                      PAIR ;
                                      VIEW "transform_view"
                                           (pair (nat %blockTimestamp)
                                                 (pair (int %tickCumulative)
                                                       (nat %secondsPerLiquidityCumulativeX128)
                                                       (bool %initialized))) ;
                                      IF_NONE { PUSH string "INVALID_RECORD" ; FAILWITH } {} ;
                                      SWAP ;
                                      DROP }
                                    {} ;
                                 DUP ;
                                 CDR ;
                                 CAR ;
                                 DUP 2 ;
                                 CDR ;
                                 CDR ;
                                 CAR ;
                                 DUP ;
                                 DUP 3 ;
                                 PAIR ;
                                 DIP { DIG 3 ; DROP } ;
                                 DUG 3 ;
                                 DROP 3 }
                               { DUP 3 ;
                                 INT ;
                                 DUP 3 ;
                                 INT ;
                                 SUB ;
                                 ISNAT ;
                                 IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                 SELF_ADDRESS ;
                                 DUP 9 ;
                                 DUP 9 ;
                                 PAIR ;
                                 DUP 8 ;
                                 PAIR ;
                                 DUP 7 ;
                                 PAIR ;
                                 DUP 3 ;
                                 PAIR ;
                                 DUP 5 ;
                                 PAIR ;
                                 VIEW "getSurroundingObservations_view"
                                      (pair (pair (nat %blockTimestamp)
                                                  (pair (int %tickCumulative)
                                                        (nat %secondsPerLiquidityCumulativeX128)
                                                        (bool %initialized)))
                                            (pair (nat %blockTimestamp)
                                                  (pair (int %tickCumulative)
                                                        (nat %secondsPerLiquidityCumulativeX128)
                                                        (bool %initialized)))) ;
                                 IF_NONE { PUSH string "INVALID_RECORD" ; FAILWITH } {} ;
                                 DUP ;
                                 CAR ;
                                 DUP 2 ;
                                 CDR ;
                                 DUP 2 ;
                                 CAR ;
                                 DUP 5 ;
                                 COMPARE ;
                                 EQ ;
                                 IF { DUP 2 ;
                                      CDR ;
                                      CDR ;
                                      CAR ;
                                      DUP 3 ;
                                      CDR ;
                                      CAR ;
                                      PAIR ;
                                      DIP { DIG 4 ; DROP } ;
                                      DUG 4 }
                                    { DUP ;
                                      CAR ;
                                      DUP 5 ;
                                      COMPARE ;
                                      EQ ;
                                      IF { DUP ;
                                           CDR ;
                                           CDR ;
                                           CAR ;
                                           DUP 2 ;
                                           CDR ;
                                           CAR ;
                                           PAIR ;
                                           DIP { DIG 4 ; DROP } ;
                                           DUG 4 }
                                         { DUP 2 ;
                                           CAR ;
                                           INT ;
                                           DUP 2 ;
                                           CAR ;
                                           INT ;
                                           SUB ;
                                           DUP 3 ;
                                           CAR ;
                                           INT ;
                                           DUP 6 ;
                                           INT ;
                                           SUB ;
                                           DUP ;
                                           DUP 3 ;
                                           DUP 6 ;
                                           CDR ;
                                           CAR ;
                                           DUP 6 ;
                                           CDR ;
                                           CAR ;
                                           SUB ;
                                           EDIV ;
                                           IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                           MUL ;
                                           DUP 5 ;
                                           CDR ;
                                           CAR ;
                                           ADD ;
                                           DUP 3 ;
                                           DUP 3 ;
                                           DUP 7 ;
                                           CDR ;
                                           CDR ;
                                           CAR ;
                                           INT ;
                                           DUP 7 ;
                                           CDR ;
                                           CDR ;
                                           CAR ;
                                           INT ;
                                           SUB ;
                                           MUL ;
                                           EDIV ;
                                           IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                           DUP 6 ;
                                           CDR ;
                                           CDR ;
                                           CAR ;
                                           INT ;
                                           ADD ;
                                           DUP ;
                                           ISNAT ;
                                           IF_NONE { PUSH string "INVALID_NAT" ; FAILWITH } {} ;
                                           DUP ;
                                           DUP 4 ;
                                           PAIR ;
                                           DIP { DIG 9 ; DROP } ;
                                           DUG 9 ;
                                           DROP 5 } } ;
                                 DROP 4 } ;
                            DIP { DROP 7 } } };
                 PAIR;
                 NIL operation;
                 DUP 2;
                 CAR;
                 CONS;
                 DIP { DIG 14; DROP };
                 DUG 14;
                 DUP 14;
                 DUP 2;
                 CDR;
                 SOME;
                 DUP 11;
                 DUP 10;
                 PAIR;
                 DUP 11;
                 PAIR;
                 UPDATE;
                 DIP { DIG 13; DROP };
                 DUG 13;
                 DUP 14;
                 DUP 2;
                 CDR;
                 SOME;
                 DUP 11;
                 DUP 11;
                 PAIR;
                 DUP 10;
                 PAIR;
                 UPDATE;
                 DIP { DIG 13; DROP };
                 DUG 13;
                 NIL operation;
                 NIL operation;
                 DUP 17;
                 ITER { CONS };
                 DUP 3;
                 CDR;
                 DUP 9;
                 PAIR;
                 DUP 12;
                 PAIR;
                 DUP 10;
                 PAIR;
                 DUP 11;
                 PAIR;
                 EMIT %PoolCreated (pair (address %token0) (address %token1) (nat %fee) (int %tickSpacing) (address %pool));
                 CONS;
                 ITER { CONS };
                 DIP { DIG 14; DROP };
                 DUG 14;
                 DROP 11;
                 PAIR 3;
                 DIG 1;
                 PAIR }
               { DUP 2;
                 SENDER;
                 COMPARE;
                 EQ;
                 NOT;
                 IF
                   { PUSH string "INVALID_CALLER";
                     FAILWITH }
                   {  };
                 NIL operation;
                 NIL operation;
                 DUP 7;
                 ITER { CONS };
                 DUP 3;
                 DUP 5;
                 PAIR;
                 EMIT %OwnerChanged (pair (address %oldOwner) (address %newOwner));
                 CONS;
                 ITER { CONS };
                 DIP { DIG 4; DROP };
                 DUG 4;
                 DUP;
                 DIP { DIG 1; DROP };
                 DUG 1;
                 DROP;
                 PAIR 3;
                 DIG 1;
                 PAIR } }
           { UNPAIR;
             SWAP;
             DUP 3;
             SENDER;
             COMPARE;
             EQ;
             NOT;
             IF
               { PUSH string "INVALID_CALLER";
                 FAILWITH }
               {  };
             PUSH nat 1000000;
             DUP 3;
             COMPARE;
             LT;
             NOT;
             IF
               { PUSH string "enableFeeAmount1";
                 PUSH string "INVALID_CONDITION";
                 PAIR;
                 FAILWITH }
               {  };
             PUSH int 0;
             DUP 2;
             COMPARE;
             GT;
             NOT;
             IF
               { PUSH string "enableFeeAmount2";
                 PUSH string "INVALID_CONDITION";
                 PAIR;
                 FAILWITH }
               {  };
             PUSH int 16384;
             DUP 2;
             COMPARE;
             LT;
             NOT;
             IF
               { PUSH string "enableFeeAmount3";
                 PUSH string "INVALID_CONDITION";
                 PAIR;
                 FAILWITH }
               {  };
             DUP 4;
             DUP 3;
             GET;
             IF_NONE
               { NONE int }
               { DUP;
                 SOME;
                 SWAP;
                 DROP };
             IF_NONE
               { PUSH bool True }
               { PUSH bool False;
                 SWAP;
                 DROP };
             NOT;
             IF
               { PUSH string "enableFeeAmount4";
                 PUSH string "INVALID_CONDITION";
                 PAIR;
                 FAILWITH }
               {  };
             DUP 4;
             DUP 3;
             MEM;
             IF
               { DUP 4;
                 DUP 2;
                 SOME;
                 DUP 4;
                 UPDATE;
                 DIP { DIG 3; DROP };
                 DUG 3 }
               { DUP 4;
                 DUP 2;
                 SOME;
                 DUP 4;
                 UPDATE;
                 DIP { DIG 3; DROP };
                 DUG 3 };
             NIL operation;
             NIL operation;
             DUP 8;
             ITER { CONS };
             DUP 3;
             DUP 5;
             PAIR;
             EMIT %FeeAmountEnabled (pair (nat %fee) (int %tickSpacing));
             CONS;
             ITER { CONS };
             DIP { DIG 5; DROP };
             DUG 5;
             DROP 2;
             PAIR 3;
             DIG 1;
             PAIR };
         DIP { DROP 2 } };
  view
    "getOwner"
    unit
    address
    { CDR;
      UNPAIR;
      SWAP;
      DROP;
      UNIT;
      DUP 2;
      SWAP;
      DROP;
      DIP { DROP } }
}

