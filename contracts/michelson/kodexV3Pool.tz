{ storage
    (pair (address %factory)
          (address %token0)
          (address %token1)
          (address %kodexV3lib)
          (string %INVALID_OPERATION)
          (nat %fee)
          (int %tickSpacing)
          (nat %maxLiquidityPerTick)
          (nat %balance0)
          (nat %balance1)
          (pair %slot0
             (nat %sqrtPriceX96)
             (int %tick)
             (nat %observationIndex)
             (nat %observationCardinality)
             (nat %observationCardinalityNext)
             (nat %feeProtocol)
             (bool %unlocked))
          (nat %feeGrowthGlobal0X128)
          (nat %feeGrowthGlobal1X128)
          (pair %protocolFees (nat %token0) (nat %token1))
          (nat %liquidity)
          (big_map %ticks
             int
             (pair (nat %liquidityGross)
                   (int %liquidityNet)
                   (nat %feeGrowthOutside0X128)
                   (nat %feeGrowthOutside1X128)
                   (int %tickCumulativeOutside)
                   (nat %secondsPerLiquidityOutsideX128)
                   (nat %secondsOutside)
                   (bool %initialized)))
          (big_map %tickBitmap int nat)
          (big_map %positions
             (pair address int int)
             (pair (nat %liquidity)
                   (pair (nat %feeGrowthInside0LastX128) (nat %feeGrowthInside1LastX128))
                   (pair (nat %tokensOwed0) (nat %tokensOwed1))))
          (big_map %observations
             nat
             (pair (nat %blockTimestamp)
                   (pair (int %tickCumulative)
                         (nat %secondsPerLiquidityCumulativeX128)
                         (bool %initialized))))) ;
  parameter
    (or (or (or (nat %increaseObservationCardinalityNext) (nat %initialize))
            (or (pair %mint
                   (address %recipient_mint)
                   (pair (int %tickLower_mint)
                         (pair (int %tickUpper_mint) (pair (nat %amount_mint) (bytes %data_mint)))))
                (pair %collect
                   (address %recipient_collect)
                   (pair (int %tickLower_collect)
                         (pair (int %tickUpper_collect)
                               (pair (nat %amount0Requested_collect) (nat %amount1Requested_collect)))))))
        (or (or (pair %burn (int %tickLower_burn) (pair (int %tickUpper_burn) (nat %amount_burn)))
                (pair %swap
                   (address %recipient)
                   (pair (bool %zeroForOne)
                         (pair (int %amountSpecified) (pair (nat %sqrtPriceLimitX96) (bytes %data))))))
            (or (pair %setFeeProtocol (nat %feeProtocol0) (nat %feeProtocol1))
                (pair %collectProtocol
                   (address %recipient)
                   (pair (nat %amount0Requested) (nat %amount1Requested)))))) ;
  code { LAMBDA
           (pair string address)
           bool
           { UNPAIR ;
             PUSH unit Unit ;
             DUP 3 ;
             PUSH unit Unit ;
             VIEW "getOwner" address ;
             IF_NONE { DUP 2 ; FAILWITH } {} ;
             DUP ;
             SENDER ;
             COMPARE ;
             EQ ;
             NOT ;
             IF { PUSH string "FTY_ERR" ; FAILWITH } {} ;
             PUSH bool True ;
             DIP 1 { SWAP ; DROP 1 } ;
             SWAP ;
             DROP 1 ;
             DUG 2 ;
             DROP 2 } ;
         NIL operation ;
         DIG 2 ;
         UNPAIR ;
         DIP 1 { UNPAIR 19 } ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { SELF_ADDRESS ;
                     SELF_ADDRESS ;
                     COMPARE ;
                     EQ ;
                     NOT ;
                     IF { PUSH string "DCall" ; FAILWITH } {} ;
                     DUP 12 ;
                     GET 12 ;
                     NOT ;
                     IF { PUSH string "LOK" ; FAILWITH } {} ;
                     DUP 12 ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     DROP 1 ;
                     PUSH bool False ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DIP 1 { DIG 11 ; DROP 1 } ;
                     DUG 11 ;
                     DUP 12 ;
                     GET 9 ;
                     PUSH nat 0 ;
                     PUSH nat 0 ;
                     DUP 3 ;
                     COMPARE ;
                     GT ;
                     NOT ;
                     IF { PUSH string "I" ; FAILWITH } {} ;
                     DUP 2 ;
                     DUP 4 ;
                     COMPARE ;
                     LE ;
                     IF { DUP 2 ; SWAP ; DROP 1 }
                        { DUP 2 ;
                          DUP 4 ;
                          DUP 2 ;
                          COMPARE ;
                          LT ;
                          LOOP { DUP 23 ;
                                 DUP 24 ;
                                 DUP 3 ;
                                 GET ;
                                 IF_NONE
                                   { PUSH string "observations" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                   {} ;
                                 CDR ;
                                 PUSH nat 1 ;
                                 PAIR ;
                                 SOME ;
                                 DUP 3 ;
                                 UPDATE ;
                                 DIP 1 { DIG 22 ; DROP 1 } ;
                                 DUG 22 ;
                                 PUSH nat 1 ;
                                 DUP 2 ;
                                 ADD ;
                                 SWAP ;
                                 DROP 1 ;
                                 DUP 4 ;
                                 DUP 2 ;
                                 COMPARE ;
                                 LT } ;
                          DUP 4 ;
                          DIP 1 { SWAP ; DROP 1 } ;
                          SWAP ;
                          DROP 1 } ;
                     DUP 14 ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     CDR ;
                     DUP 6 ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DIP 1 { DIG 13 ; DROP 1 } ;
                     DUG 13 ;
                     DUP ;
                     DUP 3 ;
                     COMPARE ;
                     NEQ ;
                     IF { NIL operation ;
                          NIL operation ;
                          DUP 25 ;
                          ITER { CONS } ;
                          DUP 3 ;
                          DUP 5 ;
                          PAIR ;
                          EMIT %IncObsCardinalityNext
                            (pair (nat %observationCardinalityNextOld_event)
                                  (nat %observationCardinalityNextNew_event)) ;
                          CONS ;
                          ITER { CONS } ;
                          DIP 1 { DIG 22 ; DROP 1 } ;
                          DUG 22 }
                        {} ;
                     DUP 14 ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     DROP 1 ;
                     PUSH bool True ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DIP 1 { DIG 13 ; DROP 1 } ;
                     DUG 13 ;
                     DROP 3 ;
                     PAIR 19 ;
                     SWAP ;
                     PAIR }
                   { PUSH nat 0 ;
                     DUP 13 ;
                     GET 1 ;
                     COMPARE ;
                     EQ ;
                     NOT ;
                     IF { PUSH string "AI" ; FAILWITH } {} ;
                     DUP 5 ;
                     DUP 2 ;
                     VIEW "tickMathGetTickAtSqrtRatio" int ;
                     IF_NONE { DUP 6 ; FAILWITH } {} ;
                     DUP 6 ;
                     PUSH unit Unit ;
                     VIEW "blockTimestamp_" nat ;
                     IF_NONE { DUP 7 ; FAILWITH } {} ;
                     DUP 22 ;
                     PUSH bool True ;
                     PUSH nat 0 ;
                     PAIR ;
                     PUSH int 0 ;
                     PAIR ;
                     DUP 3 ;
                     PAIR ;
                     SOME ;
                     PUSH nat 0 ;
                     UPDATE ;
                     DIP 1 { DIG 21 ; DROP 1 } ;
                     DUG 21 ;
                     PUSH nat 1 ;
                     PUSH nat 1 ;
                     PUSH bool True ;
                     PUSH nat 0 ;
                     PAIR ;
                     DUP 2 ;
                     PAIR ;
                     DUP 3 ;
                     PAIR ;
                     PUSH nat 0 ;
                     PAIR ;
                     DUP 5 ;
                     PAIR ;
                     DUP 6 ;
                     PAIR ;
                     DIP 1 { DIG 15 ; DROP 1 } ;
                     DUG 15 ;
                     NIL operation ;
                     NIL operation ;
                     DUP 27 ;
                     ITER { CONS } ;
                     DUP 6 ;
                     DUP 8 ;
                     PAIR ;
                     EMIT %Initialize
                       (pair (nat %sqrtPriceX96_initialize_event) (int %tick_initialize_event)) ;
                     CONS ;
                     ITER { CONS } ;
                     DIP 1 { DIG 24 ; DROP 1 } ;
                     DUG 24 ;
                     DROP 5 ;
                     PAIR 19 ;
                     SWAP ;
                     PAIR } }
               { IF_LEFT
                   { UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     DUP 16 ;
                     GET 12 ;
                     NOT ;
                     IF { PUSH string "LOK" ; FAILWITH } {} ;
                     DUP 16 ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     DROP 1 ;
                     PUSH bool False ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DIP 1 { DIG 15 ; DROP 1 } ;
                     DUG 15 ;
                     PUSH nat 0 ;
                     DUP 3 ;
                     COMPARE ;
                     GT ;
                     NOT ;
                     IF { DUP 10 ; FAILWITH } {} ;
                     SELF_ADDRESS ;
                     SELF_ADDRESS ;
                     COMPARE ;
                     EQ ;
                     NOT ;
                     IF { PUSH string "DCall" ; FAILWITH } {} ;
                     DUP 9 ;
                     DUP 4 ;
                     DUP 6 ;
                     PAIR ;
                     VIEW "checkTicks" bool ;
                     IF_NONE { DUP 10 ; FAILWITH } {} ;
                     DUP ;
                     NOT ;
                     IF { DUP 11 ; FAILWITH } {} ;
                     DUP 17 ;
                     DUP 25 ;
                     DUP 6 ;
                     DUP 8 ;
                     PAIR ;
                     DUP 9 ;
                     PAIR ;
                     GET ;
                     IF_NONE
                       { PUSH nat 0 ;
                         PUSH nat 0 ;
                         PAIR ;
                         PUSH nat 0 ;
                         PUSH nat 0 ;
                         PAIR ;
                         PAIR ;
                         PUSH nat 0 ;
                         PAIR }
                       {} ;
                     DUP 20 ;
                     DUP 22 ;
                     PUSH bool False ;
                     PUSH bool False ;
                     PUSH nat 0 ;
                     DUP 10 ;
                     COMPARE ;
                     NEQ ;
                     IF { DUP 16 ;
                          PUSH unit Unit ;
                          VIEW "blockTimestamp_" nat ;
                          IF_NONE { DUP 17 ; FAILWITH } {} ;
                          DUP 17 ;
                          DUP 25 ;
                          GET 7 ;
                          DUP 30 ;
                          PAIR ;
                          DUP 26 ;
                          GET 5 ;
                          PAIR ;
                          DUP 26 ;
                          GET 3 ;
                          PAIR ;
                          PUSH nat 0 ;
                          PAIR ;
                          DUP 3 ;
                          PAIR ;
                          SELF_ADDRESS ;
                          PAIR ;
                          VIEW "observationsObserveSingle" (pair int nat) ;
                          IF_NONE { DUP 18 ; FAILWITH } {} ;
                          DUP ;
                          GET 1 ;
                          DUP 2 ;
                          GET 2 ;
                          DUP 32 ;
                          DUP 16 ;
                          GET ;
                          IF_NONE
                            { PUSH bool False ;
                              PUSH nat 0 ;
                              PAIR ;
                              PUSH nat 0 ;
                              PAIR ;
                              PUSH int 0 ;
                              PAIR ;
                              PUSH nat 0 ;
                              PAIR ;
                              PUSH nat 0 ;
                              PAIR ;
                              PUSH int 0 ;
                              PAIR ;
                              PUSH nat 0 ;
                              PAIR }
                            {} ;
                          DUP ;
                          GET 1 ;
                          DUP 15 ;
                          DUP 2 ;
                          ADD ;
                          DUP 27 ;
                          DUP 2 ;
                          COMPARE ;
                          LE ;
                          NOT ;
                          IF { PUSH string "LO" ; FAILWITH } {} ;
                          PUSH nat 0 ;
                          DUP 3 ;
                          COMPARE ;
                          EQ ;
                          PUSH nat 0 ;
                          DUP 3 ;
                          COMPARE ;
                          EQ ;
                          COMPARE ;
                          NEQ ;
                          DIP 1 { DIG 8 ; DROP 1 } ;
                          DUG 8 ;
                          PUSH nat 0 ;
                          DUP 3 ;
                          COMPARE ;
                          EQ ;
                          IF { DUP 13 ;
                               GET 3 ;
                               DUP 19 ;
                               COMPARE ;
                               LE ;
                               IF { DUP 3 ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    CDR ;
                                    DUP 14 ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    DIP 1 { DIG 2 ; DROP 1 } ;
                                    DUG 2 ;
                                    DUP 3 ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    CDR ;
                                    DUP 14 ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    DIP 1 { DIG 2 ; DROP 1 } ;
                                    DUG 2 ;
                                    DUP 3 ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    CDR ;
                                    DUP 10 ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    DIP 1 { DIG 2 ; DROP 1 } ;
                                    DUG 2 ;
                                    DUP 3 ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    CDR ;
                                    DUP 10 ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    DIP 1 { DIG 2 ; DROP 1 } ;
                                    DUG 2 ;
                                    DUP 3 ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    CDR ;
                                    DUP 14 ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    DIP 1 { DIG 2 ; DROP 1 } ;
                                    DUG 2 }
                                  {} ;
                               DUP 3 ;
                               UNPAIR ;
                               SWAP ;
                               UNPAIR ;
                               SWAP ;
                               UNPAIR ;
                               SWAP ;
                               UNPAIR ;
                               SWAP ;
                               UNPAIR ;
                               SWAP ;
                               UNPAIR ;
                               SWAP ;
                               UNPAIR ;
                               SWAP ;
                               DROP 1 ;
                               PUSH bool True ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               DIP 1 { DIG 2 ; DROP 1 } ;
                               DUG 2 }
                             {} ;
                          DUP 3 ;
                          CDR ;
                          DUP 2 ;
                          PAIR ;
                          DIP 1 { DIG 2 ; DROP 1 } ;
                          DUG 2 ;
                          DUP 3 ;
                          UNPAIR ;
                          SWAP ;
                          CDR ;
                          DUP 18 ;
                          INT ;
                          DUP 6 ;
                          GET 3 ;
                          ADD ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          DIP 1 { DIG 2 ; DROP 1 } ;
                          DUG 2 ;
                          DUP 35 ;
                          DUP 4 ;
                          SOME ;
                          DUP 20 ;
                          UPDATE ;
                          DIP 1 { DIG 34 ; DROP 1 } ;
                          DUG 34 ;
                          DUP 35 ;
                          DUP 18 ;
                          GET ;
                          IF_NONE
                            { PUSH bool False ;
                              PUSH nat 0 ;
                              PAIR ;
                              PUSH nat 0 ;
                              PAIR ;
                              PUSH int 0 ;
                              PAIR ;
                              PUSH nat 0 ;
                              PAIR ;
                              PUSH nat 0 ;
                              PAIR ;
                              PUSH int 0 ;
                              PAIR ;
                              PUSH nat 0 ;
                              PAIR }
                            {} ;
                          DUP ;
                          GET 1 ;
                          DIP 1 { DIG 2 ; DROP 1 } ;
                          DUG 2 ;
                          DUP 17 ;
                          DUP 4 ;
                          ADD ;
                          DIP 1 { SWAP ; DROP 1 } ;
                          SWAP ;
                          DUP 28 ;
                          DUP 3 ;
                          COMPARE ;
                          LE ;
                          NOT ;
                          IF { PUSH string "LO" ; FAILWITH } {} ;
                          PUSH nat 0 ;
                          DUP 4 ;
                          COMPARE ;
                          EQ ;
                          PUSH nat 0 ;
                          DUP 4 ;
                          COMPARE ;
                          EQ ;
                          COMPARE ;
                          NEQ ;
                          DIP 1 { DIG 8 ; DROP 1 } ;
                          DUG 8 ;
                          PUSH nat 0 ;
                          DUP 4 ;
                          COMPARE ;
                          EQ ;
                          IF { DUP 14 ;
                               GET 3 ;
                               DUP 19 ;
                               COMPARE ;
                               LE ;
                               IF { DUP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    CDR ;
                                    DUP 35 ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    DROP 1 ;
                                    DUP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    CDR ;
                                    DUP 37 ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    DROP 1 ;
                                    DUP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    CDR ;
                                    DUP 11 ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    DROP 1 ;
                                    DUP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    CDR ;
                                    DUP 11 ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    DROP 1 ;
                                    DUP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    CDR ;
                                    DUP 15 ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    DROP 1 }
                                  {} ;
                               DUP ;
                               UNPAIR ;
                               SWAP ;
                               UNPAIR ;
                               SWAP ;
                               UNPAIR ;
                               SWAP ;
                               UNPAIR ;
                               SWAP ;
                               UNPAIR ;
                               SWAP ;
                               UNPAIR ;
                               SWAP ;
                               UNPAIR ;
                               SWAP ;
                               DROP 1 ;
                               PUSH bool True ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               DROP 1 }
                             {} ;
                          DUP ;
                          CDR ;
                          DUP 3 ;
                          PAIR ;
                          SWAP ;
                          DROP 1 ;
                          DUP 4 ;
                          UNPAIR ;
                          SWAP ;
                          CDR ;
                          DUP 19 ;
                          INT ;
                          DUP 7 ;
                          GET 3 ;
                          SUB ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          DIP 1 { DIG 3 ; DROP 1 } ;
                          DUG 3 ;
                          DUP 36 ;
                          DUP 2 ;
                          SOME ;
                          DUP 20 ;
                          UPDATE ;
                          DIP 1 { DIG 35 ; DROP 1 } ;
                          DUG 35 ;
                          DUP 10 ;
                          IF { PUSH nat 0 ;
                               DUP 28 ;
                               DUP 21 ;
                               EDIV ;
                               IF_NONE
                                 { PUSH string "DIV_BY_ZERO" ; FAILWITH }
                                 { DUP ; CDR ; SWAP ; DROP 1 } ;
                               COMPARE ;
                               EQ ;
                               NOT ;
                               IF { DUP 25 ; FAILWITH } {} ;
                               PUSH nat 256 ;
                               DUP 28 ;
                               DUP 21 ;
                               EDIV ;
                               IF_NONE
                                 { PUSH string "DIV_BY_ZERO" ; FAILWITH }
                                 { DUP ; CAR ; SWAP ; DROP 1 } ;
                               EDIV ;
                               IF_NONE { DUP 25 ; FAILWITH } {} ;
                               DUP ;
                               GET 1 ;
                               DUP 2 ;
                               GET 2 ;
                               DUP ;
                               PUSH nat 1 ;
                               LSL ;
                               DUP 41 ;
                               DUP 4 ;
                               GET ;
                               IF_NONE { PUSH nat 0 } {} ;
                               DUP 42 ;
                               DUP 3 ;
                               DUP 3 ;
                               XOR ;
                               SOME ;
                               DUP 6 ;
                               UPDATE ;
                               DIP 1 { DIG 41 ; DROP 1 } ;
                               DUG 41 ;
                               DROP 5 }
                             {} ;
                          DUP 9 ;
                          IF { PUSH nat 0 ;
                               DUP 28 ;
                               DUP 20 ;
                               EDIV ;
                               IF_NONE
                                 { PUSH string "DIV_BY_ZERO" ; FAILWITH }
                                 { DUP ; CDR ; SWAP ; DROP 1 } ;
                               COMPARE ;
                               EQ ;
                               NOT ;
                               IF { DUP 25 ; FAILWITH } {} ;
                               PUSH nat 256 ;
                               DUP 28 ;
                               DUP 20 ;
                               EDIV ;
                               IF_NONE
                                 { PUSH string "DIV_BY_ZERO" ; FAILWITH }
                                 { DUP ; CAR ; SWAP ; DROP 1 } ;
                               EDIV ;
                               IF_NONE { DUP 25 ; FAILWITH } {} ;
                               DUP ;
                               GET 1 ;
                               DUP 2 ;
                               GET 2 ;
                               DUP ;
                               PUSH nat 1 ;
                               LSL ;
                               DUP 41 ;
                               DUP 4 ;
                               GET ;
                               IF_NONE { PUSH nat 0 } {} ;
                               DUP 42 ;
                               DUP 3 ;
                               DUP 3 ;
                               XOR ;
                               SOME ;
                               DUP 6 ;
                               UPDATE ;
                               DIP 1 { DIG 41 ; DROP 1 } ;
                               DUG 41 ;
                               DROP 5 }
                             {} ;
                          DROP 8 }
                        {} ;
                     DUP 16 ;
                     DUP 4 ;
                     DUP 6 ;
                     PAIR ;
                     DUP 8 ;
                     GET 3 ;
                     PAIR ;
                     DUP 12 ;
                     PAIR ;
                     DUP 13 ;
                     PAIR ;
                     DUP 30 ;
                     DUP 13 ;
                     GET ;
                     IF_NONE
                       { PUSH string "ticks" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                       {} ;
                     PAIR ;
                     DUP 30 ;
                     DUP 14 ;
                     GET ;
                     IF_NONE
                       { PUSH string "ticks" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                       {} ;
                     PAIR ;
                     VIEW "getFeeGrowthInside" (pair nat nat) ;
                     IF_NONE { DUP 17 ; FAILWITH } {} ;
                     DUP ;
                     GET 1 ;
                     DUP 2 ;
                     GET 2 ;
                     PUSH nat 0 ;
                     PUSH nat 0 ;
                     DUP 14 ;
                     COMPARE ;
                     EQ ;
                     IF { PUSH nat 0 ;
                          DUP 10 ;
                          GET 1 ;
                          GET 0 ;
                          COMPARE ;
                          GT ;
                          NOT ;
                          IF { PUSH string "NP" ; FAILWITH } {} ;
                          DUP 9 ;
                          GET 1 ;
                          GET 0 ;
                          SWAP ;
                          DROP 1 }
                        { DUP 13 ; DUP 10 ; GET 1 ; GET 0 ; ADD ; SWAP ; DROP 1 } ;
                     PUSH nat 128 ;
                     PUSH nat 1 ;
                     LSL ;
                     INT ;
                     DUP 10 ;
                     GET 1 ;
                     GET 0 ;
                     INT ;
                     DUP 11 ;
                     GET 3 ;
                     GET 1 ;
                     INT ;
                     DUP 6 ;
                     INT ;
                     SUB ;
                     MUL ;
                     EDIV ;
                     IF_NONE
                       { PUSH string "DIV_BY_ZERO" ; FAILWITH }
                       { DUP ; CAR ; SWAP ; DROP 1 } ;
                     ISNAT ;
                     IF_NONE { DUP 21 ; FAILWITH } {} ;
                     PUSH nat 128 ;
                     PUSH nat 1 ;
                     LSL ;
                     INT ;
                     DUP 11 ;
                     GET 1 ;
                     GET 0 ;
                     INT ;
                     DUP 12 ;
                     GET 3 ;
                     GET 2 ;
                     INT ;
                     DUP 6 ;
                     INT ;
                     SUB ;
                     MUL ;
                     EDIV ;
                     IF_NONE
                       { PUSH string "DIV_BY_ZERO" ; FAILWITH }
                       { DUP ; CAR ; SWAP ; DROP 1 } ;
                     ISNAT ;
                     IF_NONE { DUP 22 ; FAILWITH } {} ;
                     PUSH nat 0 ;
                     DUP 16 ;
                     COMPARE ;
                     NEQ ;
                     IF { DUP 11 ; CDR ; DUP 4 ; PAIR ; DIP 1 { DIG 10 ; DROP 1 } ; DUG 10 }
                        {} ;
                     DUP 11 ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     CDR ;
                     DUP 8 ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DIP 1 { DIG 10 ; DROP 1 } ;
                     DUG 10 ;
                     DUP 11 ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     DROP 1 ;
                     DUP 7 ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DIP 1 { DIG 10 ; DROP 1 } ;
                     DUG 10 ;
                     PUSH nat 0 ;
                     DUP 3 ;
                     COMPARE ;
                     GT ;
                     IF { PUSH bool True }
                        { PUSH nat 0 ;
                          DUP 2 ;
                          COMPARE ;
                          GT ;
                          IF { PUSH bool True } { PUSH bool False } } ;
                     IF { DUP 11 ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          SWAP ;
                          CDR ;
                          DUP 5 ;
                          DUP 15 ;
                          GET 4 ;
                          GET 1 ;
                          ADD ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          DIP 1 { DIG 10 ; DROP 1 } ;
                          DUG 10 ;
                          DUP 11 ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          SWAP ;
                          DROP 1 ;
                          DUP 4 ;
                          DUP 15 ;
                          GET 4 ;
                          GET 2 ;
                          ADD ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          DIP 1 { DIG 10 ; DROP 1 } ;
                          DUG 10 }
                        {} ;
                     DUP 36 ;
                     DUP 12 ;
                     SOME ;
                     DUP 18 ;
                     DUP 20 ;
                     PAIR ;
                     DUP 21 ;
                     PAIR ;
                     UPDATE ;
                     DIP 1 { DIG 35 ; DROP 1 } ;
                     DUG 35 ;
                     PUSH int 0 ;
                     PUSH int 0 ;
                     PUSH nat 0 ;
                     DUP 18 ;
                     COMPARE ;
                     NEQ ;
                     IF { DUP 19 ;
                          DUP 15 ;
                          GET 3 ;
                          COMPARE ;
                          LT ;
                          IF { DUP 24 ;
                               DUP 20 ;
                               VIEW "tickMathGetSqrtRatioAtTick" nat ;
                               IF_NONE { DUP 25 ; FAILWITH } {} ;
                               DUP 25 ;
                               DUP 20 ;
                               VIEW "tickMathGetSqrtRatioAtTick" nat ;
                               IF_NONE { DUP 26 ; FAILWITH } {} ;
                               DUP 26 ;
                               PUSH int 0 ;
                               DUP 21 ;
                               INT ;
                               SUB ;
                               DUP 3 ;
                               PAIR ;
                               DUP 4 ;
                               PAIR ;
                               VIEW "sqrtPriceMathGetAmount0Delta" int ;
                               IF_NONE { DUP 27 ; FAILWITH } {} ;
                               DIP 1 { DIG 3 ; DROP 1 } ;
                               DUG 3 ;
                               DROP 2 }
                             { DUP 18 ;
                               DUP 15 ;
                               GET 3 ;
                               COMPARE ;
                               LT ;
                               IF { DUP 35 ;
                                    DUP 40 ;
                                    DUP 16 ;
                                    GET 5 ;
                                    GET ;
                                    IF_NONE
                                      { PUSH bool False ;
                                        PUSH nat 0 ;
                                        PAIR ;
                                        PUSH int 0 ;
                                        PAIR ;
                                        PUSH nat 0 ;
                                        PAIR }
                                      {} ;
                                    DUP 26 ;
                                    PUSH unit Unit ;
                                    VIEW "blockTimestamp_" nat ;
                                    IF_NONE { DUP 27 ; FAILWITH } {} ;
                                    DUP ;
                                    DUP 3 ;
                                    GET 1 ;
                                    GET 0 ;
                                    COMPARE ;
                                    EQ ;
                                    IF { DUP 34 ;
                                         UNPAIR ;
                                         SWAP ;
                                         UNPAIR ;
                                         SWAP ;
                                         CDR ;
                                         DUP 20 ;
                                         GET 5 ;
                                         PAIR ;
                                         SWAP ;
                                         PAIR ;
                                         SWAP ;
                                         PAIR ;
                                         DIP 1 { DIG 33 ; DROP 1 } ;
                                         DUG 33 ;
                                         DUP 34 ;
                                         UNPAIR ;
                                         SWAP ;
                                         UNPAIR ;
                                         SWAP ;
                                         UNPAIR ;
                                         SWAP ;
                                         CDR ;
                                         DUP 21 ;
                                         GET 7 ;
                                         PAIR ;
                                         SWAP ;
                                         PAIR ;
                                         SWAP ;
                                         PAIR ;
                                         SWAP ;
                                         PAIR ;
                                         DIP 1 { DIG 33 ; DROP 1 } ;
                                         DUG 33 }
                                       { PUSH nat 0 ;
                                         PUSH nat 0 ;
                                         DUP 19 ;
                                         GET 7 ;
                                         DUP 20 ;
                                         GET 9 ;
                                         COMPARE ;
                                         GT ;
                                         IF { PUSH int 1 ;
                                              DUP 20 ;
                                              GET 7 ;
                                              INT ;
                                              SUB ;
                                              DUP 20 ;
                                              GET 5 ;
                                              INT ;
                                              COMPARE ;
                                              EQ ;
                                              IF { PUSH bool True } { PUSH bool False } }
                                            { PUSH bool False } ;
                                         IF { DUP 19 ; GET 9 ; SWAP ; DROP 1 } { DUP 19 ; GET 7 ; SWAP ; DROP 1 } ;
                                         DUP ;
                                         INT ;
                                         PUSH nat 1 ;
                                         DUP 21 ;
                                         GET 5 ;
                                         ADD ;
                                         INT ;
                                         EDIV ;
                                         IF_NONE
                                           { PUSH string "DIV_BY_ZERO" ; FAILWITH }
                                           { DUP ; CDR ; SWAP ; DROP 1 } ;
                                         DIP 1 { SWAP ; DROP 1 } ;
                                         SWAP ;
                                         DUP 29 ;
                                         PUSH unit Unit ;
                                         VIEW "blockTimestamp_" nat ;
                                         IF_NONE { DUP 30 ; FAILWITH } {} ;
                                         DUP 45 ;
                                         DUP 31 ;
                                         DUP 8 ;
                                         DUP 23 ;
                                         GET 3 ;
                                         PAIR ;
                                         DUP 4 ;
                                         PAIR ;
                                         DUP 8 ;
                                         PAIR ;
                                         VIEW "transform"
                                              (pair (nat %blockTimestamp)
                                                    (pair (int %tickCumulative)
                                                          (nat %secondsPerLiquidityCumulativeX128)
                                                          (bool %initialized))) ;
                                         IF_NONE { DUP 32 ; FAILWITH } {} ;
                                         SOME ;
                                         DUP 5 ;
                                         UPDATE ;
                                         DIP 1 { DIG 44 ; DROP 1 } ;
                                         DUG 44 ;
                                         DUP 37 ;
                                         UNPAIR ;
                                         SWAP ;
                                         UNPAIR ;
                                         SWAP ;
                                         CDR ;
                                         DUP 6 ;
                                         PAIR ;
                                         SWAP ;
                                         PAIR ;
                                         SWAP ;
                                         PAIR ;
                                         DIP 1 { DIG 36 ; DROP 1 } ;
                                         DUG 36 ;
                                         DUP 37 ;
                                         UNPAIR ;
                                         SWAP ;
                                         UNPAIR ;
                                         SWAP ;
                                         UNPAIR ;
                                         SWAP ;
                                         CDR ;
                                         DUP 6 ;
                                         PAIR ;
                                         SWAP ;
                                         PAIR ;
                                         SWAP ;
                                         PAIR ;
                                         SWAP ;
                                         PAIR ;
                                         DIP 1 { DIG 36 ; DROP 1 } ;
                                         DUG 36 ;
                                         DROP 3 } ;
                                    DUP 27 ;
                                    DUP 22 ;
                                    VIEW "tickMathGetSqrtRatioAtTick" nat ;
                                    IF_NONE { DUP 28 ; FAILWITH } {} ;
                                    DUP 28 ;
                                    PUSH int 0 ;
                                    DUP 23 ;
                                    INT ;
                                    SUB ;
                                    DUP 3 ;
                                    PAIR ;
                                    DUP 20 ;
                                    GET 1 ;
                                    PAIR ;
                                    VIEW "sqrtPriceMathGetAmount0Delta" int ;
                                    IF_NONE { DUP 29 ; FAILWITH } {} ;
                                    DIP 1 { DIG 5 ; DROP 1 } ;
                                    DUG 5 ;
                                    DUP 28 ;
                                    DUP 24 ;
                                    VIEW "tickMathGetSqrtRatioAtTick" nat ;
                                    IF_NONE { DUP 29 ; FAILWITH } {} ;
                                    DUP 29 ;
                                    PUSH int 0 ;
                                    DUP 24 ;
                                    INT ;
                                    SUB ;
                                    DUP 21 ;
                                    GET 1 ;
                                    PAIR ;
                                    DUP 3 ;
                                    PAIR ;
                                    VIEW "sqrtPriceMathGetAmount1Delta" int ;
                                    IF_NONE { DUP 30 ; FAILWITH } {} ;
                                    DIP 1 { DIG 5 ; DROP 1 } ;
                                    DUG 5 ;
                                    DUP 22 ;
                                    DUP 6 ;
                                    ADD ;
                                    DIP 1 { DIG 39 ; DROP 1 } ;
                                    DUG 39 ;
                                    DROP 5 }
                                  { DUP 24 ;
                                    DUP 20 ;
                                    VIEW "tickMathGetSqrtRatioAtTick" nat ;
                                    IF_NONE { DUP 25 ; FAILWITH } {} ;
                                    DUP 25 ;
                                    DUP 20 ;
                                    VIEW "tickMathGetSqrtRatioAtTick" nat ;
                                    IF_NONE { DUP 26 ; FAILWITH } {} ;
                                    DUP 26 ;
                                    PUSH int 0 ;
                                    DUP 21 ;
                                    INT ;
                                    SUB ;
                                    DUP 3 ;
                                    PAIR ;
                                    DUP 4 ;
                                    PAIR ;
                                    VIEW "sqrtPriceMathGetAmount1Delta" int ;
                                    IF_NONE { DUP 27 ; FAILWITH } {} ;
                                    DIP 1 { DIG 2 ; DROP 1 } ;
                                    DUG 2 ;
                                    DROP 2 } } }
                        {} ;
                     DUP 2 ;
                     ISNAT ;
                     IF_NONE { DUP 25 ; FAILWITH } {} ;
                     DUP 2 ;
                     ISNAT ;
                     IF_NONE { DUP 26 ; FAILWITH } {} ;
                     DUP 2 ;
                     DUP 32 ;
                     ADD ;
                     DIP 1 { DIG 30 ; DROP 1 } ;
                     DUG 30 ;
                     DUP ;
                     DUP 33 ;
                     ADD ;
                     DIP 1 { DIG 31 ; DROP 1 } ;
                     DUG 31 ;
                     NIL operation ;
                     NIL operation ;
                     DUP 44 ;
                     ITER { CONS } ;
                     SENDER ;
                     CONTRACT %kodexV3MintCallback (pair nat nat bytes) ;
                     IF_NONE
                       { PUSH string "kodexV3MintCallback" ;
                         PUSH string "ENTRY_NOT_FOUND" ;
                         PAIR ;
                         FAILWITH }
                       {} ;
                     PUSH mutez 0 ;
                     DUP 22 ;
                     DUP 6 ;
                     PAIR ;
                     DUP 7 ;
                     PAIR ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     ITER { CONS } ;
                     DIP 1 { DIG 41 ; DROP 1 } ;
                     DUG 41 ;
                     NIL operation ;
                     NIL operation ;
                     DUP 44 ;
                     ITER { CONS } ;
                     DUP 3 ;
                     DUP 5 ;
                     PAIR ;
                     DUP 22 ;
                     PAIR ;
                     DUP 23 ;
                     PAIR ;
                     DUP 24 ;
                     PAIR ;
                     DUP 25 ;
                     PAIR ;
                     SENDER ;
                     PAIR ;
                     EMIT %Mint
                       (pair (address %sender_mint_event)
                             (address %owner_mint_event)
                             (int %tickLower_mint_event)
                             (int %tickUpper_mint_event)
                             (nat %amount_mint_event)
                             (nat %amount0_mint_event)
                             (nat %amount1_mint_event)) ;
                     CONS ;
                     ITER { CONS } ;
                     DIP 1 { DIG 41 ; DROP 1 } ;
                     DUG 41 ;
                     DUP 33 ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     DROP 1 ;
                     PUSH bool True ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DIP 1 { DIG 32 ; DROP 1 } ;
                     DUG 32 ;
                     DROP 22 ;
                     PAIR 19 ;
                     SWAP ;
                     PAIR }
                   { UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     DUP 16 ;
                     GET 12 ;
                     NOT ;
                     IF { PUSH string "LOK" ; FAILWITH } {} ;
                     DUP 16 ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     DROP 1 ;
                     PUSH bool False ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DIP 1 { DIG 15 ; DROP 1 } ;
                     DUG 15 ;
                     DUP 23 ;
                     DUP 4 ;
                     DUP 6 ;
                     PAIR ;
                     SENDER ;
                     PAIR ;
                     GET ;
                     IF_NONE
                       { PUSH nat 0 ;
                         PUSH nat 0 ;
                         PAIR ;
                         PUSH nat 0 ;
                         PUSH nat 0 ;
                         PAIR ;
                         PAIR ;
                         PUSH nat 0 ;
                         PAIR }
                       {} ;
                     DUP ;
                     GET 4 ;
                     GET 1 ;
                     DUP 4 ;
                     COMPARE ;
                     GT ;
                     IF { DUP ; GET 4 ; GET 1 } { DUP 3 } ;
                     DUP 2 ;
                     GET 4 ;
                     GET 2 ;
                     DUP 4 ;
                     COMPARE ;
                     GT ;
                     IF { DUP 2 ; GET 4 ; GET 2 } { DUP 3 } ;
                     PUSH nat 0 ;
                     DUP 3 ;
                     COMPARE ;
                     GT ;
                     IF { DUP 3 ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          SWAP ;
                          CDR ;
                          PUSH int 0 ;
                          DUP 6 ;
                          INT ;
                          DUP 8 ;
                          GET 4 ;
                          GET 1 ;
                          SUB ;
                          COMPARE ;
                          GE ;
                          IF { DUP 5 ; INT ; DUP 7 ; GET 4 ; GET 1 ; SUB ; ABS }
                             { PUSH string "NAT_NEG_ASSIGN" ; FAILWITH } ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          DIP 1 { DIG 2 ; DROP 1 } ;
                          DUG 2 ;
                          PUSH int 0 ;
                          DUP 3 ;
                          INT ;
                          DUP 19 ;
                          SUB ;
                          COMPARE ;
                          GE ;
                          IF { DUP 2 ; INT ; DUP 18 ; SUB ; ABS }
                             { PUSH string "NAT_NEG_ASSIGN" ; FAILWITH } ;
                          DIP 1 { DIG 16 ; DROP 1 } ;
                          DUG 16 ;
                          NIL operation ;
                          NIL operation ;
                          DUP 30 ;
                          ITER { CONS } ;
                          DUP 12 ;
                          CONTRACT %transfer (pair address address nat) ;
                          IF_NONE
                            { PUSH string "transfer" ; PUSH string "ENTRY_NOT_FOUND" ; PAIR ; FAILWITH }
                            {} ;
                          PUSH mutez 0 ;
                          DUP 6 ;
                          DUP 13 ;
                          PAIR ;
                          SELF_ADDRESS ;
                          PAIR ;
                          TRANSFER_TOKENS ;
                          CONS ;
                          ITER { CONS } ;
                          DIP 1 { DIG 27 ; DROP 1 } ;
                          DUG 27 }
                        {} ;
                     PUSH nat 0 ;
                     DUP 2 ;
                     COMPARE ;
                     GT ;
                     IF { DUP 3 ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          SWAP ;
                          DROP 1 ;
                          PUSH int 0 ;
                          DUP 5 ;
                          INT ;
                          DUP 8 ;
                          GET 4 ;
                          GET 2 ;
                          SUB ;
                          COMPARE ;
                          GE ;
                          IF { DUP 4 ; INT ; DUP 7 ; GET 4 ; GET 2 ; SUB ; ABS }
                             { PUSH string "NAT_NEG_ASSIGN" ; FAILWITH } ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          DIP 1 { DIG 2 ; DROP 1 } ;
                          DUG 2 ;
                          PUSH int 0 ;
                          DUP 2 ;
                          INT ;
                          DUP 20 ;
                          SUB ;
                          COMPARE ;
                          GE ;
                          IF { DUP ; INT ; DUP 19 ; SUB ; ABS }
                             { PUSH string "NAT_NEG_ASSIGN" ; FAILWITH } ;
                          DIP 1 { DIG 17 ; DROP 1 } ;
                          DUG 17 ;
                          NIL operation ;
                          NIL operation ;
                          DUP 30 ;
                          ITER { CONS } ;
                          DUP 13 ;
                          CONTRACT %transfer (pair address address nat) ;
                          IF_NONE
                            { PUSH string "transfer" ; PUSH string "ENTRY_NOT_FOUND" ; PAIR ; FAILWITH }
                            {} ;
                          PUSH mutez 0 ;
                          DUP 5 ;
                          DUP 13 ;
                          PAIR ;
                          SELF_ADDRESS ;
                          PAIR ;
                          TRANSFER_TOKENS ;
                          CONS ;
                          ITER { CONS } ;
                          DIP 1 { DIG 27 ; DROP 1 } ;
                          DUG 27 }
                        {} ;
                     DUP 26 ;
                     DUP 4 ;
                     SOME ;
                     DUP 8 ;
                     DUP 10 ;
                     PAIR ;
                     SENDER ;
                     PAIR ;
                     UPDATE ;
                     DIP 1 { DIG 25 ; DROP 1 } ;
                     DUG 25 ;
                     NIL operation ;
                     NIL operation ;
                     DUP 30 ;
                     ITER { CONS } ;
                     DUP 3 ;
                     DUP 5 ;
                     PAIR ;
                     DUP 9 ;
                     PAIR ;
                     DUP 10 ;
                     PAIR ;
                     DUP 11 ;
                     PAIR ;
                     SENDER ;
                     PAIR ;
                     EMIT %Collect
                       (pair (address %owner_collect_event)
                             (address %recipient_collect_event)
                             (int %tickLower_collect_event)
                             (int %tickUpper_collect_event)
                             (nat %amount0_collect_event)
                             (nat %amount1_collect_event)) ;
                     CONS ;
                     ITER { CONS } ;
                     DIP 1 { DIG 27 ; DROP 1 } ;
                     DUG 27 ;
                     DUP 19 ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     DROP 1 ;
                     PUSH bool True ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DIP 1 { DIG 18 ; DROP 1 } ;
                     DUG 18 ;
                     DROP 8 ;
                     PAIR 19 ;
                     SWAP ;
                     PAIR } } }
           { IF_LEFT
               { IF_LEFT
                   { UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     DUP 14 ;
                     GET 12 ;
                     NOT ;
                     IF { PUSH string "LOK" ; FAILWITH } {} ;
                     DUP 14 ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     DROP 1 ;
                     PUSH bool False ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DIP 1 { DIG 13 ; DROP 1 } ;
                     DUG 13 ;
                     SELF_ADDRESS ;
                     SELF_ADDRESS ;
                     COMPARE ;
                     EQ ;
                     NOT ;
                     IF { PUSH string "DCall" ; FAILWITH } {} ;
                     DUP 7 ;
                     DUP 3 ;
                     DUP 5 ;
                     PAIR ;
                     VIEW "checkTicks" bool ;
                     IF_NONE { DUP 8 ; FAILWITH } {} ;
                     DUP ;
                     NOT ;
                     IF { DUP 9 ; FAILWITH } {} ;
                     DUP 15 ;
                     DUP 23 ;
                     DUP 5 ;
                     DUP 7 ;
                     PAIR ;
                     SENDER ;
                     PAIR ;
                     GET ;
                     IF_NONE
                       { PUSH nat 0 ;
                         PUSH nat 0 ;
                         PAIR ;
                         PUSH nat 0 ;
                         PUSH nat 0 ;
                         PAIR ;
                         PAIR ;
                         PUSH nat 0 ;
                         PAIR }
                       {} ;
                     DUP 18 ;
                     DUP 20 ;
                     PUSH bool False ;
                     PUSH bool False ;
                     PUSH nat 0 ;
                     DUP 9 ;
                     COMPARE ;
                     NEQ ;
                     IF { DUP 14 ;
                          PUSH unit Unit ;
                          VIEW "blockTimestamp_" nat ;
                          IF_NONE { DUP 15 ; FAILWITH } {} ;
                          DUP 15 ;
                          DUP 23 ;
                          GET 7 ;
                          DUP 28 ;
                          PAIR ;
                          DUP 24 ;
                          GET 5 ;
                          PAIR ;
                          DUP 24 ;
                          GET 3 ;
                          PAIR ;
                          PUSH nat 0 ;
                          PAIR ;
                          DUP 3 ;
                          PAIR ;
                          SELF_ADDRESS ;
                          PAIR ;
                          VIEW "observationsObserveSingle" (pair int nat) ;
                          IF_NONE { DUP 16 ; FAILWITH } {} ;
                          DUP ;
                          GET 1 ;
                          DUP 2 ;
                          GET 2 ;
                          DUP 30 ;
                          DUP 15 ;
                          GET ;
                          IF_NONE
                            { PUSH string "ticks" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                            {} ;
                          DUP ;
                          GET 1 ;
                          DUP 14 ;
                          DUP 2 ;
                          ADD ;
                          DUP 25 ;
                          DUP 2 ;
                          COMPARE ;
                          LE ;
                          NOT ;
                          IF { PUSH string "LO" ; FAILWITH } {} ;
                          PUSH nat 0 ;
                          DUP 3 ;
                          COMPARE ;
                          EQ ;
                          PUSH nat 0 ;
                          DUP 3 ;
                          COMPARE ;
                          EQ ;
                          COMPARE ;
                          NEQ ;
                          DIP 1 { DIG 8 ; DROP 1 } ;
                          DUG 8 ;
                          PUSH nat 0 ;
                          DUP 3 ;
                          COMPARE ;
                          EQ ;
                          IF { DUP 13 ;
                               GET 3 ;
                               DUP 18 ;
                               COMPARE ;
                               LE ;
                               IF { DUP 3 ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    CDR ;
                                    DUP 14 ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    DIP 1 { DIG 2 ; DROP 1 } ;
                                    DUG 2 ;
                                    DUP 3 ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    CDR ;
                                    DUP 14 ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    DIP 1 { DIG 2 ; DROP 1 } ;
                                    DUG 2 ;
                                    DUP 3 ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    CDR ;
                                    DUP 10 ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    DIP 1 { DIG 2 ; DROP 1 } ;
                                    DUG 2 ;
                                    DUP 3 ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    CDR ;
                                    DUP 10 ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    DIP 1 { DIG 2 ; DROP 1 } ;
                                    DUG 2 ;
                                    DUP 3 ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    CDR ;
                                    DUP 14 ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    DIP 1 { DIG 2 ; DROP 1 } ;
                                    DUG 2 }
                                  {} ;
                               DUP 3 ;
                               UNPAIR ;
                               SWAP ;
                               UNPAIR ;
                               SWAP ;
                               UNPAIR ;
                               SWAP ;
                               UNPAIR ;
                               SWAP ;
                               UNPAIR ;
                               SWAP ;
                               UNPAIR ;
                               SWAP ;
                               UNPAIR ;
                               SWAP ;
                               DROP 1 ;
                               PUSH bool True ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               DIP 1 { DIG 2 ; DROP 1 } ;
                               DUG 2 }
                             {} ;
                          DUP 3 ;
                          CDR ;
                          DUP 2 ;
                          PAIR ;
                          DIP 1 { DIG 2 ; DROP 1 } ;
                          DUG 2 ;
                          DUP 3 ;
                          UNPAIR ;
                          SWAP ;
                          CDR ;
                          DUP 17 ;
                          INT ;
                          DUP 6 ;
                          GET 3 ;
                          ADD ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          DIP 1 { DIG 2 ; DROP 1 } ;
                          DUG 2 ;
                          DUP 33 ;
                          DUP 4 ;
                          SOME ;
                          DUP 19 ;
                          UPDATE ;
                          DIP 1 { DIG 32 ; DROP 1 } ;
                          DUG 32 ;
                          DUP 33 ;
                          DUP 17 ;
                          GET ;
                          IF_NONE
                            { PUSH string "ticks" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                            {} ;
                          DUP ;
                          GET 1 ;
                          DIP 1 { DIG 2 ; DROP 1 } ;
                          DUG 2 ;
                          DUP 16 ;
                          DUP 4 ;
                          ADD ;
                          DIP 1 { SWAP ; DROP 1 } ;
                          SWAP ;
                          DUP 26 ;
                          DUP 3 ;
                          COMPARE ;
                          LE ;
                          NOT ;
                          IF { PUSH string "LO" ; FAILWITH } {} ;
                          PUSH nat 0 ;
                          DUP 4 ;
                          COMPARE ;
                          EQ ;
                          PUSH nat 0 ;
                          DUP 4 ;
                          COMPARE ;
                          EQ ;
                          COMPARE ;
                          NEQ ;
                          DIP 1 { DIG 8 ; DROP 1 } ;
                          DUG 8 ;
                          PUSH nat 0 ;
                          DUP 4 ;
                          COMPARE ;
                          EQ ;
                          IF { DUP 14 ;
                               GET 3 ;
                               DUP 18 ;
                               COMPARE ;
                               LE ;
                               IF { DUP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    CDR ;
                                    DUP 33 ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    DROP 1 ;
                                    DUP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    CDR ;
                                    DUP 35 ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    DROP 1 ;
                                    DUP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    CDR ;
                                    DUP 11 ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    DROP 1 ;
                                    DUP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    CDR ;
                                    DUP 11 ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    DROP 1 ;
                                    DUP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    CDR ;
                                    DUP 15 ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    DROP 1 }
                                  {} ;
                               DUP ;
                               UNPAIR ;
                               SWAP ;
                               UNPAIR ;
                               SWAP ;
                               UNPAIR ;
                               SWAP ;
                               UNPAIR ;
                               SWAP ;
                               UNPAIR ;
                               SWAP ;
                               UNPAIR ;
                               SWAP ;
                               UNPAIR ;
                               SWAP ;
                               DROP 1 ;
                               PUSH bool True ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               DROP 1 }
                             {} ;
                          DUP ;
                          CDR ;
                          DUP 3 ;
                          PAIR ;
                          SWAP ;
                          DROP 1 ;
                          DUP 4 ;
                          UNPAIR ;
                          SWAP ;
                          CDR ;
                          DUP 18 ;
                          INT ;
                          DUP 7 ;
                          GET 3 ;
                          SUB ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          DIP 1 { DIG 3 ; DROP 1 } ;
                          DUG 3 ;
                          DUP 34 ;
                          DUP 2 ;
                          SOME ;
                          DUP 19 ;
                          UPDATE ;
                          DIP 1 { DIG 33 ; DROP 1 } ;
                          DUG 33 ;
                          DUP 10 ;
                          IF { PUSH nat 0 ;
                               DUP 26 ;
                               DUP 20 ;
                               EDIV ;
                               IF_NONE
                                 { PUSH string "DIV_BY_ZERO" ; FAILWITH }
                                 { DUP ; CDR ; SWAP ; DROP 1 } ;
                               COMPARE ;
                               EQ ;
                               NOT ;
                               IF { DUP 23 ; FAILWITH } {} ;
                               PUSH nat 256 ;
                               DUP 26 ;
                               DUP 20 ;
                               EDIV ;
                               IF_NONE
                                 { PUSH string "DIV_BY_ZERO" ; FAILWITH }
                                 { DUP ; CAR ; SWAP ; DROP 1 } ;
                               EDIV ;
                               IF_NONE { DUP 23 ; FAILWITH } {} ;
                               DUP ;
                               GET 1 ;
                               DUP 2 ;
                               GET 2 ;
                               DUP ;
                               PUSH nat 1 ;
                               LSL ;
                               DUP 39 ;
                               DUP 2 ;
                               DUP 41 ;
                               DUP 6 ;
                               GET ;
                               IF_NONE
                                 { PUSH string "tickBitmap" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                 {} ;
                               XOR ;
                               SOME ;
                               DUP 5 ;
                               UPDATE ;
                               DIP 1 { DIG 38 ; DROP 1 } ;
                               DUG 38 ;
                               DROP 4 }
                             {} ;
                          DUP 9 ;
                          IF { PUSH nat 0 ;
                               DUP 26 ;
                               DUP 19 ;
                               EDIV ;
                               IF_NONE
                                 { PUSH string "DIV_BY_ZERO" ; FAILWITH }
                                 { DUP ; CDR ; SWAP ; DROP 1 } ;
                               COMPARE ;
                               EQ ;
                               NOT ;
                               IF { DUP 23 ; FAILWITH } {} ;
                               PUSH nat 256 ;
                               DUP 26 ;
                               DUP 19 ;
                               EDIV ;
                               IF_NONE
                                 { PUSH string "DIV_BY_ZERO" ; FAILWITH }
                                 { DUP ; CAR ; SWAP ; DROP 1 } ;
                               EDIV ;
                               IF_NONE { DUP 23 ; FAILWITH } {} ;
                               DUP ;
                               GET 1 ;
                               DUP 2 ;
                               GET 2 ;
                               DUP ;
                               PUSH nat 1 ;
                               LSL ;
                               DUP 39 ;
                               DUP 2 ;
                               DUP 41 ;
                               DUP 6 ;
                               GET ;
                               IF_NONE
                                 { PUSH string "tickBitmap" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                 {} ;
                               XOR ;
                               SOME ;
                               DUP 5 ;
                               UPDATE ;
                               DIP 1 { DIG 38 ; DROP 1 } ;
                               DUG 38 ;
                               DROP 4 }
                             {} ;
                          DROP 8 }
                        {} ;
                     DUP 14 ;
                     DUP 4 ;
                     DUP 6 ;
                     PAIR ;
                     DUP 8 ;
                     GET 3 ;
                     PAIR ;
                     DUP 11 ;
                     PAIR ;
                     DUP 12 ;
                     PAIR ;
                     DUP 28 ;
                     DUP 12 ;
                     GET ;
                     IF_NONE
                       { PUSH string "ticks" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                       {} ;
                     PAIR ;
                     DUP 28 ;
                     DUP 13 ;
                     GET ;
                     IF_NONE
                       { PUSH string "ticks" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                       {} ;
                     PAIR ;
                     VIEW "getFeeGrowthInside" (pair nat nat) ;
                     IF_NONE { DUP 15 ; FAILWITH } {} ;
                     DUP ;
                     GET 1 ;
                     DUP 2 ;
                     GET 2 ;
                     PUSH nat 0 ;
                     PUSH nat 0 ;
                     DUP 13 ;
                     COMPARE ;
                     EQ ;
                     IF { PUSH nat 0 ;
                          DUP 10 ;
                          GET 1 ;
                          GET 0 ;
                          COMPARE ;
                          GT ;
                          NOT ;
                          IF { PUSH string "NP" ; FAILWITH } {} ;
                          DUP 9 ;
                          GET 1 ;
                          GET 0 ;
                          SWAP ;
                          DROP 1 }
                        { DUP 12 ; DUP 10 ; GET 1 ; GET 0 ; ADD ; SWAP ; DROP 1 } ;
                     PUSH nat 128 ;
                     PUSH nat 1 ;
                     LSL ;
                     INT ;
                     DUP 10 ;
                     GET 1 ;
                     GET 0 ;
                     INT ;
                     DUP 11 ;
                     GET 3 ;
                     GET 1 ;
                     INT ;
                     DUP 6 ;
                     INT ;
                     SUB ;
                     MUL ;
                     EDIV ;
                     IF_NONE
                       { PUSH string "DIV_BY_ZERO" ; FAILWITH }
                       { DUP ; CAR ; SWAP ; DROP 1 } ;
                     ISNAT ;
                     IF_NONE { DUP 19 ; FAILWITH } {} ;
                     PUSH nat 128 ;
                     PUSH nat 1 ;
                     LSL ;
                     INT ;
                     DUP 11 ;
                     GET 1 ;
                     GET 0 ;
                     INT ;
                     DUP 12 ;
                     GET 3 ;
                     GET 2 ;
                     INT ;
                     DUP 6 ;
                     INT ;
                     SUB ;
                     MUL ;
                     EDIV ;
                     IF_NONE
                       { PUSH string "DIV_BY_ZERO" ; FAILWITH }
                       { DUP ; CAR ; SWAP ; DROP 1 } ;
                     ISNAT ;
                     IF_NONE { DUP 20 ; FAILWITH } {} ;
                     PUSH nat 0 ;
                     DUP 15 ;
                     COMPARE ;
                     NEQ ;
                     IF { DUP 11 ; CDR ; DUP 4 ; PAIR ; DIP 1 { DIG 10 ; DROP 1 } ; DUG 10 }
                        {} ;
                     DUP 11 ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     CDR ;
                     DUP 8 ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DIP 1 { DIG 10 ; DROP 1 } ;
                     DUG 10 ;
                     DUP 11 ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     DROP 1 ;
                     DUP 7 ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DIP 1 { DIG 10 ; DROP 1 } ;
                     DUG 10 ;
                     PUSH nat 0 ;
                     DUP 3 ;
                     COMPARE ;
                     GT ;
                     IF { PUSH bool True }
                        { PUSH nat 0 ;
                          DUP 2 ;
                          COMPARE ;
                          GT ;
                          IF { PUSH bool True } { PUSH bool False } } ;
                     IF { DUP 11 ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          SWAP ;
                          CDR ;
                          DUP 5 ;
                          DUP 15 ;
                          GET 4 ;
                          GET 1 ;
                          ADD ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          DIP 1 { DIG 10 ; DROP 1 } ;
                          DUG 10 ;
                          DUP 11 ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          SWAP ;
                          DROP 1 ;
                          DUP 4 ;
                          DUP 15 ;
                          GET 4 ;
                          GET 2 ;
                          ADD ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          DIP 1 { DIG 10 ; DROP 1 } ;
                          DUG 10 }
                        {} ;
                     PUSH int 0 ;
                     PUSH int 0 ;
                     PUSH nat 0 ;
                     DUP 17 ;
                     COMPARE ;
                     NEQ ;
                     IF { DUP 18 ;
                          DUP 15 ;
                          GET 3 ;
                          COMPARE ;
                          LT ;
                          IF { DUP 22 ;
                               DUP 19 ;
                               VIEW "tickMathGetSqrtRatioAtTick" nat ;
                               IF_NONE { DUP 23 ; FAILWITH } {} ;
                               DUP 23 ;
                               DUP 19 ;
                               VIEW "tickMathGetSqrtRatioAtTick" nat ;
                               IF_NONE { DUP 24 ; FAILWITH } {} ;
                               DUP 24 ;
                               PUSH int 0 ;
                               DUP 20 ;
                               INT ;
                               SUB ;
                               DUP 3 ;
                               PAIR ;
                               DUP 4 ;
                               PAIR ;
                               VIEW "sqrtPriceMathGetAmount0Delta" int ;
                               IF_NONE { DUP 25 ; FAILWITH } {} ;
                               DIP 1 { DIG 3 ; DROP 1 } ;
                               DUG 3 ;
                               DROP 2 }
                             { DUP 17 ;
                               DUP 15 ;
                               GET 3 ;
                               COMPARE ;
                               LT ;
                               IF { DUP 33 ;
                                    DUP 38 ;
                                    DUP 16 ;
                                    GET 5 ;
                                    GET ;
                                    IF_NONE
                                      { PUSH bool False ;
                                        PUSH nat 0 ;
                                        PAIR ;
                                        PUSH int 0 ;
                                        PAIR ;
                                        PUSH nat 0 ;
                                        PAIR }
                                      {} ;
                                    DUP 24 ;
                                    PUSH unit Unit ;
                                    VIEW "blockTimestamp_" nat ;
                                    IF_NONE { DUP 25 ; FAILWITH } {} ;
                                    DUP ;
                                    DUP 3 ;
                                    GET 1 ;
                                    GET 0 ;
                                    COMPARE ;
                                    EQ ;
                                    IF { DUP 32 ;
                                         UNPAIR ;
                                         SWAP ;
                                         UNPAIR ;
                                         SWAP ;
                                         CDR ;
                                         DUP 20 ;
                                         GET 5 ;
                                         PAIR ;
                                         SWAP ;
                                         PAIR ;
                                         SWAP ;
                                         PAIR ;
                                         DIP 1 { DIG 31 ; DROP 1 } ;
                                         DUG 31 ;
                                         DUP 32 ;
                                         UNPAIR ;
                                         SWAP ;
                                         UNPAIR ;
                                         SWAP ;
                                         UNPAIR ;
                                         SWAP ;
                                         CDR ;
                                         DUP 21 ;
                                         GET 7 ;
                                         PAIR ;
                                         SWAP ;
                                         PAIR ;
                                         SWAP ;
                                         PAIR ;
                                         SWAP ;
                                         PAIR ;
                                         DIP 1 { DIG 31 ; DROP 1 } ;
                                         DUG 31 }
                                       { PUSH nat 0 ;
                                         PUSH nat 0 ;
                                         DUP 19 ;
                                         GET 7 ;
                                         DUP 20 ;
                                         GET 9 ;
                                         COMPARE ;
                                         GT ;
                                         IF { PUSH int 1 ;
                                              DUP 20 ;
                                              GET 7 ;
                                              INT ;
                                              SUB ;
                                              DUP 20 ;
                                              GET 5 ;
                                              INT ;
                                              COMPARE ;
                                              EQ ;
                                              IF { PUSH bool True } { PUSH bool False } }
                                            { PUSH bool False } ;
                                         IF { DUP 19 ; GET 9 ; SWAP ; DROP 1 } { DUP 19 ; GET 7 ; SWAP ; DROP 1 } ;
                                         DUP ;
                                         INT ;
                                         PUSH nat 1 ;
                                         DUP 21 ;
                                         GET 5 ;
                                         ADD ;
                                         INT ;
                                         EDIV ;
                                         IF_NONE
                                           { PUSH string "DIV_BY_ZERO" ; FAILWITH }
                                           { DUP ; CDR ; SWAP ; DROP 1 } ;
                                         DIP 1 { SWAP ; DROP 1 } ;
                                         SWAP ;
                                         DUP 27 ;
                                         PUSH unit Unit ;
                                         VIEW "blockTimestamp_" nat ;
                                         IF_NONE { DUP 28 ; FAILWITH } {} ;
                                         DUP 43 ;
                                         DUP 29 ;
                                         DUP 8 ;
                                         DUP 23 ;
                                         GET 3 ;
                                         PAIR ;
                                         DUP 4 ;
                                         PAIR ;
                                         DUP 8 ;
                                         PAIR ;
                                         VIEW "transform"
                                              (pair (nat %blockTimestamp)
                                                    (pair (int %tickCumulative)
                                                          (nat %secondsPerLiquidityCumulativeX128)
                                                          (bool %initialized))) ;
                                         IF_NONE { DUP 30 ; FAILWITH } {} ;
                                         SOME ;
                                         DUP 5 ;
                                         UPDATE ;
                                         DIP 1 { DIG 42 ; DROP 1 } ;
                                         DUG 42 ;
                                         DUP 35 ;
                                         UNPAIR ;
                                         SWAP ;
                                         UNPAIR ;
                                         SWAP ;
                                         CDR ;
                                         DUP 6 ;
                                         PAIR ;
                                         SWAP ;
                                         PAIR ;
                                         SWAP ;
                                         PAIR ;
                                         DIP 1 { DIG 34 ; DROP 1 } ;
                                         DUG 34 ;
                                         DUP 35 ;
                                         UNPAIR ;
                                         SWAP ;
                                         UNPAIR ;
                                         SWAP ;
                                         UNPAIR ;
                                         SWAP ;
                                         CDR ;
                                         DUP 6 ;
                                         PAIR ;
                                         SWAP ;
                                         PAIR ;
                                         SWAP ;
                                         PAIR ;
                                         SWAP ;
                                         PAIR ;
                                         DIP 1 { DIG 34 ; DROP 1 } ;
                                         DUG 34 ;
                                         DROP 3 } ;
                                    DUP 25 ;
                                    DUP 21 ;
                                    VIEW "tickMathGetSqrtRatioAtTick" nat ;
                                    IF_NONE { DUP 26 ; FAILWITH } {} ;
                                    DUP 26 ;
                                    PUSH int 0 ;
                                    DUP 22 ;
                                    INT ;
                                    SUB ;
                                    DUP 3 ;
                                    PAIR ;
                                    DUP 20 ;
                                    GET 1 ;
                                    PAIR ;
                                    VIEW "sqrtPriceMathGetAmount0Delta" int ;
                                    IF_NONE { DUP 27 ; FAILWITH } {} ;
                                    DIP 1 { DIG 5 ; DROP 1 } ;
                                    DUG 5 ;
                                    DUP 26 ;
                                    DUP 23 ;
                                    VIEW "tickMathGetSqrtRatioAtTick" nat ;
                                    IF_NONE { DUP 27 ; FAILWITH } {} ;
                                    DUP 27 ;
                                    PUSH int 0 ;
                                    DUP 23 ;
                                    INT ;
                                    SUB ;
                                    DUP 21 ;
                                    GET 1 ;
                                    PAIR ;
                                    DUP 3 ;
                                    PAIR ;
                                    VIEW "sqrtPriceMathGetAmount1Delta" int ;
                                    IF_NONE { DUP 28 ; FAILWITH } {} ;
                                    DIP 1 { DIG 5 ; DROP 1 } ;
                                    DUG 5 ;
                                    DUP 21 ;
                                    DUP 6 ;
                                    ADD ;
                                    DIP 1 { DIG 37 ; DROP 1 } ;
                                    DUG 37 ;
                                    DROP 5 }
                                  { DUP 22 ;
                                    DUP 19 ;
                                    VIEW "tickMathGetSqrtRatioAtTick" nat ;
                                    IF_NONE { DUP 23 ; FAILWITH } {} ;
                                    DUP 23 ;
                                    DUP 19 ;
                                    VIEW "tickMathGetSqrtRatioAtTick" nat ;
                                    IF_NONE { DUP 24 ; FAILWITH } {} ;
                                    DUP 24 ;
                                    PUSH int 0 ;
                                    DUP 20 ;
                                    INT ;
                                    SUB ;
                                    DUP 3 ;
                                    PAIR ;
                                    DUP 4 ;
                                    PAIR ;
                                    VIEW "sqrtPriceMathGetAmount1Delta" int ;
                                    IF_NONE { DUP 25 ; FAILWITH } {} ;
                                    DIP 1 { DIG 2 ; DROP 1 } ;
                                    DUG 2 ;
                                    DROP 2 } } }
                        {} ;
                     PUSH int 0 ;
                     DUP 3 ;
                     COMPARE ;
                     LT ;
                     IF { PUSH int 1 ;
                          DUP 3 ;
                          PUSH nat
                               115792089237316195423570985008687907853269984665640564039457584007913129639935 ;
                          INT ;
                          SUB ;
                          ADD ;
                          DIP 1 { SWAP ; DROP 1 } ;
                          SWAP }
                        {} ;
                     PUSH int 0 ;
                     DUP 2 ;
                     COMPARE ;
                     LT ;
                     IF { PUSH int 1 ;
                          DUP 2 ;
                          PUSH nat
                               115792089237316195423570985008687907853269984665640564039457584007913129639935 ;
                          INT ;
                          SUB ;
                          ADD ;
                          SWAP ;
                          DROP 1 }
                        {} ;
                     DUP 2 ;
                     ISNAT ;
                     IF_NONE { DUP 23 ; FAILWITH } {} ;
                     DUP 2 ;
                     ISNAT ;
                     IF_NONE { DUP 24 ; FAILWITH } {} ;
                     PUSH nat 0 ;
                     DUP 3 ;
                     COMPARE ;
                     GT ;
                     IF { PUSH bool True }
                        { PUSH nat 0 ;
                          DUP 2 ;
                          COMPARE ;
                          GT ;
                          IF { PUSH bool True } { PUSH bool False } } ;
                     IF { DUP 15 ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          SWAP ;
                          CDR ;
                          DUP 5 ;
                          DUP 19 ;
                          GET 4 ;
                          GET 1 ;
                          ADD ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          DIP 1 { DIG 14 ; DROP 1 } ;
                          DUG 14 ;
                          DUP 15 ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          SWAP ;
                          DROP 1 ;
                          DUP 4 ;
                          DUP 19 ;
                          GET 4 ;
                          GET 2 ;
                          ADD ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          DIP 1 { DIG 14 ; DROP 1 } ;
                          DUG 14 }
                        {} ;
                     DUP 38 ;
                     DUP 16 ;
                     SOME ;
                     DUP 21 ;
                     DUP 23 ;
                     PAIR ;
                     SENDER ;
                     PAIR ;
                     UPDATE ;
                     DIP 1 { DIG 37 ; DROP 1 } ;
                     DUG 37 ;
                     NIL operation ;
                     NIL operation ;
                     DUP 42 ;
                     ITER { CONS } ;
                     DUP 3 ;
                     DUP 5 ;
                     PAIR ;
                     DUP 21 ;
                     PAIR ;
                     DUP 22 ;
                     PAIR ;
                     DUP 23 ;
                     PAIR ;
                     SENDER ;
                     PAIR ;
                     EMIT %Burn
                       (pair (address %owner_burn_event)
                             (int %tickLower_burn_event)
                             (int %tickUpper_burn_event)
                             (nat %amount_burn_event)
                             (nat %amount0_burn_event)
                             (nat %amount1_burn_event)) ;
                     CONS ;
                     ITER { CONS } ;
                     DIP 1 { DIG 39 ; DROP 1 } ;
                     DUG 39 ;
                     DUP 31 ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     DROP 1 ;
                     PUSH bool True ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DIP 1 { DIG 30 ; DROP 1 } ;
                     DUG 30 ;
                     DROP 20 ;
                     PAIR 19 ;
                     SWAP ;
                     PAIR }
                   { UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     SELF_ADDRESS ;
                     SELF_ADDRESS ;
                     COMPARE ;
                     EQ ;
                     NOT ;
                     IF { PUSH string "DCall" ; FAILWITH } {} ;
                     PUSH int 0 ;
                     DUP 4 ;
                     COMPARE ;
                     NEQ ;
                     NOT ;
                     IF { PUSH string "AS" ; FAILWITH } {} ;
                     DUP 16 ;
                     DUP ;
                     GET 12 ;
                     NOT ;
                     IF { PUSH string "LOK" ; FAILWITH } {} ;
                     DUP 5 ;
                     IF { DUP ;
                          GET 1 ;
                          DUP 4 ;
                          COMPARE ;
                          LT ;
                          NOT ;
                          IF { PUSH string "SPL1" ; FAILWITH } {} ;
                          PUSH nat 4295128739 ;
                          DUP ;
                          DUP 5 ;
                          COMPARE ;
                          GT ;
                          NOT ;
                          IF { PUSH string "SPL2" ; FAILWITH } {} ;
                          DROP 1 }
                        { DUP ;
                          GET 1 ;
                          DUP 4 ;
                          COMPARE ;
                          GT ;
                          NOT ;
                          IF { PUSH string "SPL3" ; FAILWITH } {} ;
                          PUSH nat 1461446703485210103287273052203988822378723970342 ;
                          DUP ;
                          DUP 5 ;
                          COMPARE ;
                          LT ;
                          NOT ;
                          IF { PUSH string "SPL4" ; FAILWITH } {} ;
                          DROP 1 } ;
                     DUP 17 ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     DROP 1 ;
                     PUSH bool False ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DIP 1 { DIG 16 ; DROP 1 } ;
                     DUG 16 ;
                     DUP 10 ;
                     PUSH unit Unit ;
                     VIEW "blockTimestamp_" nat ;
                     IF_NONE { DUP 11 ; FAILWITH } {} ;
                     PUSH bool False ;
                     PUSH nat 0 ;
                     PAIR ;
                     PUSH int 0 ;
                     PAIR ;
                     DUP 2 ;
                     PAIR ;
                     DUP 23 ;
                     PAIR ;
                     DUP 7 ;
                     IF { PUSH int 16 ;
                          DUP 4 ;
                          GET 11 ;
                          INT ;
                          EDIV ;
                          IF_NONE
                            { PUSH string "DIV_BY_ZERO" ; FAILWITH }
                            { DUP ; CDR ; SWAP ; DROP 1 } }
                        { PUSH nat 4 ; DUP 4 ; GET 11 ; LSR } ;
                     PAIR ;
                     PUSH int 0 ;
                     DUP 7 ;
                     COMPARE ;
                     GT ;
                     DUP 2 ;
                     GET 3 ;
                     PUSH nat 0 ;
                     PAIR ;
                     DUP 9 ;
                     IF { DUP 22 } { DUP 23 } ;
                     PAIR ;
                     DUP 5 ;
                     GET 3 ;
                     PAIR ;
                     DUP 5 ;
                     GET 1 ;
                     PAIR ;
                     PUSH int 0 ;
                     PAIR ;
                     DUP 8 ;
                     PAIR ;
                     PUSH int 0 ;
                     DUP 2 ;
                     GET 1 ;
                     COMPARE ;
                     NEQ ;
                     IF { DUP 7 ;
                          DUP 2 ;
                          GET 5 ;
                          COMPARE ;
                          NEQ ;
                          IF { PUSH bool True } { PUSH bool False } }
                        { PUSH bool False } ;
                     LOOP { PUSH nat 0 ;
                            PUSH nat 0 ;
                            PAIR ;
                            PUSH nat 0 ;
                            PAIR ;
                            PUSH nat 0 ;
                            PAIR ;
                            PUSH bool False ;
                            PAIR ;
                            PUSH int 0 ;
                            PAIR ;
                            PUSH nat 0 ;
                            PAIR ;
                            DUP ;
                            CDR ;
                            DUP 3 ;
                            GET 5 ;
                            PAIR ;
                            SWAP ;
                            DROP 1 ;
                            DUP 15 ;
                            DUP 11 ;
                            DUP 20 ;
                            PAIR ;
                            DUP 4 ;
                            GET 7 ;
                            PAIR ;
                            SELF_ADDRESS ;
                            PAIR ;
                            VIEW "tickBmpNextInitTickWithOneW" (pair int bool) ;
                            IF_NONE { DUP 16 ; FAILWITH } {} ;
                            DUP 2 ;
                            UNPAIR ;
                            SWAP ;
                            CDR ;
                            DUP 3 ;
                            GET 1 ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            DIP 1 { SWAP ; DROP 1 } ;
                            SWAP ;
                            DUP 2 ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            SWAP ;
                            CDR ;
                            DUP 4 ;
                            GET 2 ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            DIP 1 { SWAP ; DROP 1 } ;
                            SWAP ;
                            PUSH int -887272 ;
                            DUP 3 ;
                            GET 3 ;
                            COMPARE ;
                            LT ;
                            IF { DUP 2 ;
                                 UNPAIR ;
                                 SWAP ;
                                 CDR ;
                                 PUSH int -887272 ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 DIP 1 { SWAP ; DROP 1 } ;
                                 SWAP }
                               { PUSH int 887272 ;
                                 DUP 3 ;
                                 GET 3 ;
                                 COMPARE ;
                                 GT ;
                                 IF { DUP 2 ;
                                      UNPAIR ;
                                      SWAP ;
                                      CDR ;
                                      PUSH int 887272 ;
                                      PAIR ;
                                      SWAP ;
                                      PAIR ;
                                      DIP 1 { SWAP ; DROP 1 } ;
                                      SWAP }
                                    {} } ;
                            DUP 2 ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            SWAP ;
                            CDR ;
                            DUP 20 ;
                            DUP 7 ;
                            GET 3 ;
                            VIEW "tickMathGetSqrtRatioAtTick" nat ;
                            IF_NONE { DUP 21 ; FAILWITH } {} ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            DIP 1 { SWAP ; DROP 1 } ;
                            SWAP ;
                            DUP 16 ;
                            DUP 19 ;
                            DUP 5 ;
                            GET 1 ;
                            PAIR ;
                            DUP 5 ;
                            GET 12 ;
                            PAIR ;
                            DUP 13 ;
                            IF { DUP 11 ; DUP 5 ; GET 7 ; COMPARE ; LT }
                               { DUP 11 ; DUP 5 ; GET 7 ; COMPARE ; GT } ;
                            IF { DUP 11 } { DUP 4 ; GET 7 } ;
                            PAIR ;
                            DUP 5 ;
                            GET 5 ;
                            PAIR ;
                            VIEW "swapMathComputeSwapStep" (pair nat nat nat nat) ;
                            IF_NONE { DUP 17 ; FAILWITH } {} ;
                            DUP 4 ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            SWAP ;
                            CDR ;
                            DUP 4 ;
                            GET 1 ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            DIP 1 { DIG 3 ; DROP 1 } ;
                            DUG 3 ;
                            DUP 3 ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            SWAP ;
                            CDR ;
                            DUP 6 ;
                            GET 3 ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            DIP 1 { DIG 2 ; DROP 1 } ;
                            DUG 2 ;
                            DUP 3 ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            SWAP ;
                            CDR ;
                            DUP 7 ;
                            GET 5 ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            DIP 1 { DIG 2 ; DROP 1 } ;
                            DUG 2 ;
                            DUP 3 ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            SWAP ;
                            DROP 1 ;
                            DUP 7 ;
                            GET 6 ;
                            SWAP ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            DIP 1 { DIG 2 ; DROP 1 } ;
                            DUG 2 ;
                            DUP 5 ;
                            IF { DUP 4 ;
                                 CDR ;
                                 DUP 4 ;
                                 GET 12 ;
                                 DUP 5 ;
                                 GET 9 ;
                                 ADD ;
                                 INT ;
                                 DUP 6 ;
                                 GET 1 ;
                                 SUB ;
                                 PAIR ;
                                 DIP 1 { DIG 3 ; DROP 1 } ;
                                 DUG 3 ;
                                 DUP 4 ;
                                 UNPAIR ;
                                 SWAP ;
                                 CDR ;
                                 DUP 5 ;
                                 GET 11 ;
                                 INT ;
                                 DUP 7 ;
                                 GET 3 ;
                                 SUB ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 DIP 1 { DIG 3 ; DROP 1 } ;
                                 DUG 3 }
                               { DUP 4 ;
                                 CDR ;
                                 DUP 4 ;
                                 GET 11 ;
                                 INT ;
                                 DUP 6 ;
                                 GET 1 ;
                                 ADD ;
                                 PAIR ;
                                 DIP 1 { DIG 3 ; DROP 1 } ;
                                 DUG 3 ;
                                 DUP 4 ;
                                 UNPAIR ;
                                 SWAP ;
                                 CDR ;
                                 DUP 5 ;
                                 GET 12 ;
                                 INT ;
                                 DUP 6 ;
                                 GET 9 ;
                                 INT ;
                                 DUP 8 ;
                                 GET 3 ;
                                 ADD ;
                                 ADD ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 DIP 1 { DIG 3 ; DROP 1 } ;
                                 DUG 3 } ;
                            PUSH nat 0 ;
                            DUP 7 ;
                            GET 1 ;
                            COMPARE ;
                            GT ;
                            IF { DUP 6 ;
                                 GET 1 ;
                                 DUP 4 ;
                                 GET 12 ;
                                 EDIV ;
                                 IF_NONE
                                   { PUSH string "DIV_BY_ZERO" ; FAILWITH }
                                   { DUP ; CAR ; SWAP ; DROP 1 } ;
                                 DUP 4 ;
                                 UNPAIR ;
                                 SWAP ;
                                 UNPAIR ;
                                 SWAP ;
                                 UNPAIR ;
                                 SWAP ;
                                 UNPAIR ;
                                 SWAP ;
                                 UNPAIR ;
                                 SWAP ;
                                 UNPAIR ;
                                 SWAP ;
                                 DROP 1 ;
                                 PUSH int 0 ;
                                 DUP 8 ;
                                 INT ;
                                 DUP 12 ;
                                 GET 12 ;
                                 SUB ;
                                 COMPARE ;
                                 GE ;
                                 IF { DUP 7 ; INT ; DUP 11 ; GET 12 ; SUB ; ABS }
                                    { PUSH string "NAT_NEG_ASSIGN" ; FAILWITH } ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 DIP 1 { DIG 3 ; DROP 1 } ;
                                 DUG 3 ;
                                 DUP 5 ;
                                 UNPAIR ;
                                 SWAP ;
                                 UNPAIR ;
                                 SWAP ;
                                 UNPAIR ;
                                 SWAP ;
                                 UNPAIR ;
                                 SWAP ;
                                 UNPAIR ;
                                 SWAP ;
                                 CDR ;
                                 DUP 7 ;
                                 DUP 12 ;
                                 GET 11 ;
                                 ADD ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 DIP 1 { DIG 4 ; DROP 1 } ;
                                 DUG 4 ;
                                 DROP 1 }
                               {} ;
                            PUSH nat 0 ;
                            DUP 5 ;
                            GET 12 ;
                            COMPARE ;
                            GT ;
                            IF { DUP 4 ;
                                 UNPAIR ;
                                 SWAP ;
                                 UNPAIR ;
                                 SWAP ;
                                 UNPAIR ;
                                 SWAP ;
                                 UNPAIR ;
                                 SWAP ;
                                 CDR ;
                                 DUP 9 ;
                                 GET 12 ;
                                 PUSH nat 128 ;
                                 PUSH nat 1 ;
                                 LSL ;
                                 DUP 10 ;
                                 GET 12 ;
                                 MUL ;
                                 EDIV ;
                                 IF_NONE
                                   { PUSH string "DIV_BY_ZERO" ; FAILWITH }
                                   { DUP ; CAR ; SWAP ; DROP 1 } ;
                                 DUP 10 ;
                                 GET 9 ;
                                 ADD ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 DIP 1 { DIG 3 ; DROP 1 } ;
                                 DUG 3 }
                               {} ;
                            DUP 3 ;
                            GET 7 ;
                            DUP 5 ;
                            GET 5 ;
                            COMPARE ;
                            EQ ;
                            IF { DUP 3 ;
                                 GET 5 ;
                                 IF { DUP 6 ;
                                      GET 10 ;
                                      NOT ;
                                      IF { DUP 17 ;
                                           DUP 9 ;
                                           GET 7 ;
                                           DUP 8 ;
                                           GET 3 ;
                                           PAIR ;
                                           DUP 10 ;
                                           GET 5 ;
                                           PAIR ;
                                           DUP 10 ;
                                           GET 3 ;
                                           PAIR ;
                                           PUSH nat 0 ;
                                           PAIR ;
                                           DUP 8 ;
                                           GET 5 ;
                                           PAIR ;
                                           SELF_ADDRESS ;
                                           PAIR ;
                                           VIEW "observationsObserveSingle" (pair int nat) ;
                                           IF_NONE { DUP 18 ; FAILWITH } {} ;
                                           DUP 7 ;
                                           UNPAIR ;
                                           SWAP ;
                                           UNPAIR ;
                                           SWAP ;
                                           UNPAIR ;
                                           SWAP ;
                                           CDR ;
                                           DUP 5 ;
                                           GET 1 ;
                                           PAIR ;
                                           SWAP ;
                                           PAIR ;
                                           SWAP ;
                                           PAIR ;
                                           SWAP ;
                                           PAIR ;
                                           DIP 1 { DIG 6 ; DROP 1 } ;
                                           DUG 6 ;
                                           DUP 7 ;
                                           UNPAIR ;
                                           SWAP ;
                                           UNPAIR ;
                                           SWAP ;
                                           UNPAIR ;
                                           SWAP ;
                                           UNPAIR ;
                                           SWAP ;
                                           CDR ;
                                           DUP 6 ;
                                           GET 2 ;
                                           PAIR ;
                                           SWAP ;
                                           PAIR ;
                                           SWAP ;
                                           PAIR ;
                                           SWAP ;
                                           PAIR ;
                                           SWAP ;
                                           PAIR ;
                                           DIP 1 { DIG 6 ; DROP 1 } ;
                                           DUG 6 ;
                                           DUP 7 ;
                                           UNPAIR ;
                                           SWAP ;
                                           UNPAIR ;
                                           SWAP ;
                                           UNPAIR ;
                                           SWAP ;
                                           UNPAIR ;
                                           SWAP ;
                                           UNPAIR ;
                                           SWAP ;
                                           DROP 1 ;
                                           PUSH bool True ;
                                           SWAP ;
                                           PAIR ;
                                           SWAP ;
                                           PAIR ;
                                           SWAP ;
                                           PAIR ;
                                           SWAP ;
                                           PAIR ;
                                           SWAP ;
                                           PAIR ;
                                           DIP 1 { DIG 6 ; DROP 1 } ;
                                           DUG 6 ;
                                           DROP 1 }
                                         {} ;
                                      DUP 3 ;
                                      GET 3 ;
                                      DUP 13 ;
                                      IF { DUP 5 ; GET 9 } { DUP 26 } ;
                                      DUP 14 ;
                                      IF { DUP 28 } { DUP 6 ; GET 9 } ;
                                      DUP 9 ;
                                      GET 9 ;
                                      DUP 10 ;
                                      GET 7 ;
                                      DUP 11 ;
                                      GET 5 ;
                                      DUP 35 ;
                                      DUP 7 ;
                                      GET ;
                                      IF_NONE
                                        { PUSH string "ticks" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                        {} ;
                                      CDR ;
                                      CDR ;
                                      CAR ;
                                      INT ;
                                      DUP 6 ;
                                      INT ;
                                      SUB ;
                                      ISNAT ;
                                      IF_NONE { DUP 24 ; FAILWITH } {} ;
                                      DUP 36 ;
                                      DUP 8 ;
                                      GET ;
                                      IF_NONE
                                        { PUSH string "ticks" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                        {} ;
                                      CDR ;
                                      CDR ;
                                      CDR ;
                                      CAR ;
                                      INT ;
                                      DUP 6 ;
                                      INT ;
                                      SUB ;
                                      ISNAT ;
                                      IF_NONE { DUP 25 ; FAILWITH } {} ;
                                      DUP 37 ;
                                      DUP 9 ;
                                      GET ;
                                      IF_NONE
                                        { PUSH string "ticks" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                        {} ;
                                      CDR ;
                                      CDR ;
                                      CDR ;
                                      CDR ;
                                      CDR ;
                                      CAR ;
                                      INT ;
                                      DUP 6 ;
                                      INT ;
                                      SUB ;
                                      ISNAT ;
                                      IF_NONE { DUP 26 ; FAILWITH } {} ;
                                      DUP 38 ;
                                      DUP 10 ;
                                      GET ;
                                      IF_NONE
                                        { PUSH string "ticks" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                        {} ;
                                      CDR ;
                                      CDR ;
                                      CDR ;
                                      CDR ;
                                      CAR ;
                                      DUP 6 ;
                                      SUB ;
                                      DUP 39 ;
                                      DUP 11 ;
                                      GET ;
                                      IF_NONE
                                        { PUSH string "ticks" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                        {} ;
                                      CDR ;
                                      CDR ;
                                      CDR ;
                                      CDR ;
                                      CDR ;
                                      CDR ;
                                      CAR ;
                                      INT ;
                                      DUP 6 ;
                                      INT ;
                                      SUB ;
                                      ISNAT ;
                                      IF_NONE { DUP 28 ; FAILWITH } {} ;
                                      DUP 40 ;
                                      DUP 41 ;
                                      DUP 13 ;
                                      GET ;
                                      IF_NONE
                                        { PUSH string "ticks" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                        {} ;
                                      UNPAIR ;
                                      SWAP ;
                                      UNPAIR ;
                                      SWAP ;
                                      CDR ;
                                      DUP 9 ;
                                      SWAP ;
                                      CDR ;
                                      DUP 9 ;
                                      SWAP ;
                                      CDR ;
                                      DUP 8 ;
                                      SWAP ;
                                      CDR ;
                                      DUP 10 ;
                                      SWAP ;
                                      CDR ;
                                      DUP 9 ;
                                      PAIR ;
                                      SWAP ;
                                      PAIR ;
                                      SWAP ;
                                      PAIR ;
                                      SWAP ;
                                      PAIR ;
                                      SWAP ;
                                      PAIR ;
                                      SWAP ;
                                      PAIR ;
                                      SWAP ;
                                      PAIR ;
                                      SOME ;
                                      DUP 13 ;
                                      UPDATE ;
                                      DIP 1 { DIG 39 ; DROP 1 } ;
                                      DUG 39 ;
                                      DUP 40 ;
                                      DUP 12 ;
                                      GET ;
                                      IF_NONE
                                        { PUSH string "ticks" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
                                        {} ;
                                      CDR ;
                                      CAR ;
                                      DUP 24 ;
                                      IF { DUP ; NEG ; SWAP ; DROP 1 } {} ;
                                      DUP 16 ;
                                      UNPAIR ;
                                      SWAP ;
                                      UNPAIR ;
                                      SWAP ;
                                      UNPAIR ;
                                      SWAP ;
                                      UNPAIR ;
                                      SWAP ;
                                      UNPAIR ;
                                      SWAP ;
                                      UNPAIR ;
                                      SWAP ;
                                      DROP 1 ;
                                      DUP 7 ;
                                      DUP 23 ;
                                      GET 12 ;
                                      INT ;
                                      ADD ;
                                      ISNAT ;
                                      IF_NONE { DUP 36 ; FAILWITH } {} ;
                                      SWAP ;
                                      PAIR ;
                                      SWAP ;
                                      PAIR ;
                                      SWAP ;
                                      PAIR ;
                                      SWAP ;
                                      PAIR ;
                                      SWAP ;
                                      PAIR ;
                                      SWAP ;
                                      PAIR ;
                                      DIP 1 { DIG 15 ; DROP 1 } ;
                                      DUG 15 ;
                                      DROP 12 }
                                    {} ;
                                 DUP 4 ;
                                 UNPAIR ;
                                 SWAP ;
                                 UNPAIR ;
                                 SWAP ;
                                 UNPAIR ;
                                 SWAP ;
                                 CDR ;
                                 DUP 16 ;
                                 IF { PUSH int 1 ; DUP 8 ; GET 3 ; SUB } { DUP 7 ; GET 3 } ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 DIP 1 { DIG 3 ; DROP 1 } ;
                                 DUG 3 }
                               { DUP 3 ;
                                 GET 1 ;
                                 DUP 5 ;
                                 GET 5 ;
                                 COMPARE ;
                                 NEQ ;
                                 IF { DUP 4 ;
                                      UNPAIR ;
                                      SWAP ;
                                      UNPAIR ;
                                      SWAP ;
                                      UNPAIR ;
                                      SWAP ;
                                      CDR ;
                                      DUP 21 ;
                                      DUP 9 ;
                                      GET 5 ;
                                      VIEW "tickMathGetTickAtSqrtRatio" int ;
                                      IF_NONE { DUP 22 ; FAILWITH } {} ;
                                      PAIR ;
                                      SWAP ;
                                      PAIR ;
                                      SWAP ;
                                      PAIR ;
                                      SWAP ;
                                      PAIR ;
                                      DIP 1 { DIG 3 ; DROP 1 } ;
                                      DUG 3 }
                                    {} } ;
                            DROP 3 ;
                            PUSH int 0 ;
                            DUP 2 ;
                            GET 1 ;
                            COMPARE ;
                            NEQ ;
                            IF { DUP 7 ;
                                 DUP 2 ;
                                 GET 5 ;
                                 COMPARE ;
                                 NEQ ;
                                 IF { PUSH bool True } { PUSH bool False } }
                               { PUSH bool False } } ;
                     DUP 5 ;
                     GET 3 ;
                     DUP 2 ;
                     GET 7 ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH nat 0 ;
                          PUSH nat 0 ;
                          DUP 31 ;
                          DUP 8 ;
                          GET 5 ;
                          GET ;
                          IF_NONE
                            { PUSH bool False ;
                              PUSH nat 0 ;
                              PAIR ;
                              PUSH int 0 ;
                              PAIR ;
                              PUSH nat 0 ;
                              PAIR }
                            {} ;
                          DUP 6 ;
                          GET 5 ;
                          DUP 2 ;
                          GET 1 ;
                          GET 0 ;
                          COMPARE ;
                          EQ ;
                          IF { DUP 8 ;
                               GET 5 ;
                               DIP 1 { DIG 2 ; DROP 1 } ;
                               DUG 2 ;
                               DUP 8 ;
                               GET 7 ;
                               DIP 1 { SWAP ; DROP 1 } ;
                               SWAP }
                             { PUSH nat 0 ;
                               PUSH nat 0 ;
                               DUP 10 ;
                               GET 7 ;
                               DUP 11 ;
                               GET 9 ;
                               COMPARE ;
                               GT ;
                               IF { PUSH int 1 ;
                                    DUP 11 ;
                                    GET 7 ;
                                    INT ;
                                    SUB ;
                                    DUP 11 ;
                                    GET 5 ;
                                    INT ;
                                    COMPARE ;
                                    EQ ;
                                    IF { PUSH bool True } { PUSH bool False } }
                                  { PUSH bool False } ;
                               IF { DUP 10 ; GET 9 ; SWAP ; DROP 1 } { DUP 10 ; GET 7 ; SWAP ; DROP 1 } ;
                               DUP ;
                               INT ;
                               PUSH nat 1 ;
                               DUP 12 ;
                               GET 5 ;
                               ADD ;
                               INT ;
                               EDIV ;
                               IF_NONE
                                 { PUSH string "DIV_BY_ZERO" ; FAILWITH }
                                 { DUP ; CDR ; SWAP ; DROP 1 } ;
                               DIP 1 { SWAP ; DROP 1 } ;
                               SWAP ;
                               DUP 34 ;
                               DUP 20 ;
                               DUP 10 ;
                               GET 3 ;
                               DUP 13 ;
                               GET 3 ;
                               PAIR ;
                               DUP 11 ;
                               GET 5 ;
                               PAIR ;
                               DUP 6 ;
                               PAIR ;
                               VIEW "transform"
                                    (pair (nat %blockTimestamp)
                                          (pair (int %tickCumulative)
                                                (nat %secondsPerLiquidityCumulativeX128)
                                                (bool %initialized))) ;
                               IF_NONE { DUP 21 ; FAILWITH } {} ;
                               SOME ;
                               DUP 4 ;
                               UPDATE ;
                               DIP 1 { DIG 33 ; DROP 1 } ;
                               DUG 33 ;
                               DUP 2 ;
                               DIP 1 { DIG 4 ; DROP 1 } ;
                               DUG 4 ;
                               DUP ;
                               DIP 1 { DIG 3 ; DROP 1 } ;
                               DUG 3 ;
                               DROP 2 } ;
                          DUP 24 ;
                          CDR ;
                          DUP 5 ;
                          GET 5 ;
                          PAIR ;
                          DIP 1 { DIG 23 ; DROP 1 } ;
                          DUG 23 ;
                          DUP 24 ;
                          UNPAIR ;
                          SWAP ;
                          CDR ;
                          DUP 6 ;
                          GET 7 ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          DIP 1 { DIG 23 ; DROP 1 } ;
                          DUG 23 ;
                          DUP 24 ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          SWAP ;
                          CDR ;
                          DUP 6 ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          DIP 1 { DIG 23 ; DROP 1 } ;
                          DUG 23 ;
                          DUP 24 ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          SWAP ;
                          CDR ;
                          DUP 6 ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          DIP 1 { DIG 23 ; DROP 1 } ;
                          DUG 23 ;
                          DROP 3 }
                        { DUP 21 ;
                          CDR ;
                          DUP 2 ;
                          GET 5 ;
                          PAIR ;
                          DIP 1 { DIG 20 ; DROP 1 } ;
                          DUG 20 } ;
                     DUP ;
                     GET 12 ;
                     DUP 4 ;
                     GET 3 ;
                     COMPARE ;
                     NEQ ;
                     IF { DUP ; GET 12 ; DIP 1 { DIG 24 ; DROP 1 } ; DUG 24 } {} ;
                     DUP 9 ;
                     IF { DUP ;
                          GET 9 ;
                          DIP 1 { DIG 21 ; DROP 1 } ;
                          DUG 21 ;
                          PUSH nat 0 ;
                          DUP 2 ;
                          GET 11 ;
                          COMPARE ;
                          GT ;
                          IF { DUP 24 ;
                               CDR ;
                               DUP 2 ;
                               GET 11 ;
                               DUP 26 ;
                               GET 1 ;
                               ADD ;
                               PAIR ;
                               DIP 1 { DIG 23 ; DROP 1 } ;
                               DUG 23 }
                             {} }
                        { DUP ;
                          GET 9 ;
                          DIP 1 { DIG 22 ; DROP 1 } ;
                          DUG 22 ;
                          PUSH nat 0 ;
                          DUP 2 ;
                          GET 11 ;
                          COMPARE ;
                          GT ;
                          IF { DUP 24 ;
                               UNPAIR ;
                               SWAP ;
                               DROP 1 ;
                               DUP 2 ;
                               GET 11 ;
                               DUP 26 ;
                               GET 2 ;
                               ADD ;
                               SWAP ;
                               PAIR ;
                               DIP 1 { DIG 23 ; DROP 1 } ;
                               DUG 23 }
                             {} } ;
                     DUP 2 ;
                     DUP 10 ;
                     COMPARE ;
                     EQ ;
                     IF { DUP ; GET 1 ; DUP 9 ; SUB } { DUP ; GET 3 } ;
                     DUP 3 ;
                     DUP 11 ;
                     COMPARE ;
                     EQ ;
                     IF { DUP 2 ; GET 3 } { DUP 2 ; GET 1 ; DUP 10 ; SUB } ;
                     DUP 11 ;
                     IF { PUSH int 0 ;
                          DUP 2 ;
                          COMPARE ;
                          LT ;
                          IF { DUP ;
                               ABS ;
                               INT ;
                               DUP 23 ;
                               INT ;
                               SUB ;
                               ISNAT ;
                               IF_NONE { DUP 17 ; FAILWITH } {} ;
                               DIP 1 { DIG 21 ; DROP 1 } ;
                               DUG 21 ;
                               NIL operation ;
                               NIL operation ;
                               DUP 34 ;
                               ITER { CONS } ;
                               DUP 17 ;
                               CONTRACT %transfer (pair address address nat) ;
                               IF_NONE
                                 { PUSH string "transfer" ; PUSH string "ENTRY_NOT_FOUND" ; PAIR ; FAILWITH }
                                 {} ;
                               PUSH mutez 0 ;
                               DUP 5 ;
                               ABS ;
                               DUP 17 ;
                               PAIR ;
                               SELF_ADDRESS ;
                               PAIR ;
                               TRANSFER_TOKENS ;
                               CONS ;
                               ITER { CONS } ;
                               DIP 1 { DIG 31 ; DROP 1 } ;
                               DUG 31 }
                             {} ;
                          DUP 2 ;
                          DUP 22 ;
                          INT ;
                          ADD ;
                          ISNAT ;
                          IF_NONE { DUP 17 ; FAILWITH } {} ;
                          DIP 1 { DIG 20 ; DROP 1 } ;
                          DUG 20 ;
                          NIL operation ;
                          NIL operation ;
                          DUP 34 ;
                          ITER { CONS } ;
                          SENDER ;
                          CONTRACT %kodexV3SwapCallback (pair int int bytes) ;
                          IF_NONE
                            { PUSH string "kodexV3SwapCallback" ;
                              PUSH string "ENTRY_NOT_FOUND" ;
                              PAIR ;
                              FAILWITH }
                            {} ;
                          PUSH mutez 0 ;
                          DUP 12 ;
                          DUP 6 ;
                          PAIR ;
                          DUP 7 ;
                          PAIR ;
                          TRANSFER_TOKENS ;
                          CONS ;
                          ITER { CONS } ;
                          DIP 1 { DIG 31 ; DROP 1 } ;
                          DUG 31 }
                        { PUSH int 0 ;
                          DUP 3 ;
                          COMPARE ;
                          LT ;
                          IF { DUP 2 ;
                               ABS ;
                               INT ;
                               DUP 22 ;
                               INT ;
                               SUB ;
                               ISNAT ;
                               IF_NONE { DUP 17 ; FAILWITH } {} ;
                               DIP 1 { DIG 20 ; DROP 1 } ;
                               DUG 20 ;
                               NIL operation ;
                               NIL operation ;
                               DUP 34 ;
                               ITER { CONS } ;
                               DUP 16 ;
                               CONTRACT %transfer (pair address address nat) ;
                               IF_NONE
                                 { PUSH string "transfer" ; PUSH string "ENTRY_NOT_FOUND" ; PAIR ; FAILWITH }
                                 {} ;
                               PUSH mutez 0 ;
                               DUP 6 ;
                               ABS ;
                               DUP 17 ;
                               PAIR ;
                               SELF_ADDRESS ;
                               PAIR ;
                               TRANSFER_TOKENS ;
                               CONS ;
                               ITER { CONS } ;
                               DIP 1 { DIG 31 ; DROP 1 } ;
                               DUG 31 }
                             {} ;
                          DUP ;
                          DUP 22 ;
                          INT ;
                          ADD ;
                          ISNAT ;
                          IF_NONE { DUP 17 ; FAILWITH } {} ;
                          DIP 1 { DIG 20 ; DROP 1 } ;
                          DUG 20 ;
                          NIL operation ;
                          NIL operation ;
                          DUP 34 ;
                          ITER { CONS } ;
                          SENDER ;
                          CONTRACT %kodexV3SwapCallback (pair int int bytes) ;
                          IF_NONE
                            { PUSH string "kodexV3SwapCallback" ;
                              PUSH string "ENTRY_NOT_FOUND" ;
                              PAIR ;
                              FAILWITH }
                            {} ;
                          PUSH mutez 0 ;
                          DUP 12 ;
                          DUP 6 ;
                          PAIR ;
                          DUP 7 ;
                          PAIR ;
                          TRANSFER_TOKENS ;
                          CONS ;
                          ITER { CONS } ;
                          DIP 1 { DIG 31 ; DROP 1 } ;
                          DUG 31 } ;
                     NIL operation ;
                     NIL operation ;
                     DUP 34 ;
                     ITER { CONS } ;
                     DUP 5 ;
                     GET 7 ;
                     DUP 6 ;
                     GET 12 ;
                     PAIR ;
                     DUP 6 ;
                     GET 5 ;
                     PAIR ;
                     DUP 4 ;
                     PAIR ;
                     DUP 5 ;
                     PAIR ;
                     DUP 15 ;
                     PAIR ;
                     SENDER ;
                     PAIR ;
                     EMIT %Swap
                       (pair (address %sender_swap_event)
                             (address %recipient_swap_event)
                             (int %amount0_swap_event)
                             (int %amount1_swap_event)
                             (nat %sqrtPriceX96_swap_event)
                             (nat %liquidity_swap_event)
                             (int %tick_swap_event)) ;
                     CONS ;
                     ITER { CONS } ;
                     DIP 1 { DIG 31 ; DROP 1 } ;
                     DUG 31 ;
                     DUP 23 ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     DROP 1 ;
                     PUSH bool True ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DIP 1 { DIG 22 ; DROP 1 } ;
                     DUG 22 ;
                     DROP 12 ;
                     PAIR 19 ;
                     SWAP ;
                     PAIR } }
               { IF_LEFT
                   { UNPAIR ;
                     SWAP ;
                     DUP 13 ;
                     GET 12 ;
                     NOT ;
                     IF { PUSH string "LOK" ; FAILWITH } {} ;
                     DUP 13 ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     DROP 1 ;
                     PUSH bool False ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DIP 1 { DIG 12 ; DROP 1 } ;
                     DUG 12 ;
                     DUP 23 ;
                     DUP 4 ;
                     DUP 9 ;
                     PAIR ;
                     EXEC ;
                     NOT ;
                     IF { DUP 7 ; FAILWITH } {} ;
                     PUSH nat 0 ;
                     DUP 3 ;
                     COMPARE ;
                     EQ ;
                     IF { PUSH bool True }
                        { PUSH nat 4 ;
                          DUP 3 ;
                          COMPARE ;
                          GE ;
                          IF { PUSH nat 10 ;
                               DUP 3 ;
                               COMPARE ;
                               LE ;
                               IF { PUSH bool True } { PUSH bool False } }
                             { PUSH bool False } ;
                          IF { PUSH bool True } { PUSH bool False } } ;
                     IF { PUSH nat 0 ;
                          DUP 2 ;
                          COMPARE ;
                          EQ ;
                          IF { PUSH bool True }
                             { PUSH nat 4 ;
                               DUP 2 ;
                               COMPARE ;
                               GE ;
                               IF { PUSH nat 10 ;
                                    DUP 2 ;
                                    COMPARE ;
                                    LE ;
                                    IF { PUSH bool True } { PUSH bool False } }
                                  { PUSH bool False } ;
                               IF { PUSH bool True } { PUSH bool False } } ;
                          IF { PUSH bool True } { PUSH bool False } }
                        { PUSH bool False } ;
                     NOT ;
                     IF { DUP 7 ; FAILWITH } {} ;
                     DUP 13 ;
                     GET 11 ;
                     DUP 14 ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     CDR ;
                     PUSH nat 4 ;
                     DUP 9 ;
                     LSL ;
                     DUP 10 ;
                     ADD ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DIP 1 { DIG 13 ; DROP 1 } ;
                     DUG 13 ;
                     NIL operation ;
                     NIL operation ;
                     DUP 25 ;
                     ITER { CONS } ;
                     DUP 4 ;
                     DUP 6 ;
                     PAIR ;
                     PUSH nat 4 ;
                     DUP 5 ;
                     LSR ;
                     PAIR ;
                     PUSH int 16 ;
                     DUP 5 ;
                     INT ;
                     EDIV ;
                     IF_NONE
                       { PUSH string "DIV_BY_ZERO" ; FAILWITH }
                       { DUP ; CDR ; SWAP ; DROP 1 } ;
                     PAIR ;
                     EMIT %SetFeeProtocol
                       (pair (nat %feeProtocol0Old_setFeeProtocol_event)
                             (nat %feeProtocol1Old_setFeeProtocol_event)
                             (nat %feeProtocol0New_setFeeProtocol_event)
                             (nat %feeProtocol1New_setFeeProtocol_event)) ;
                     CONS ;
                     ITER { CONS } ;
                     DIP 1 { DIG 22 ; DROP 1 } ;
                     DUG 22 ;
                     DUP 14 ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     DROP 1 ;
                     PUSH bool True ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DIP 1 { DIG 13 ; DROP 1 } ;
                     DUG 13 ;
                     DROP 3 ;
                     PAIR 19 ;
                     SWAP ;
                     PAIR }
                   { UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     DUP 14 ;
                     GET 12 ;
                     NOT ;
                     IF { PUSH string "LOK" ; FAILWITH } {} ;
                     DUP 14 ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     DROP 1 ;
                     PUSH bool False ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DIP 1 { DIG 13 ; DROP 1 } ;
                     DUG 13 ;
                     DUP 24 ;
                     DUP 5 ;
                     DUP 10 ;
                     PAIR ;
                     EXEC ;
                     NOT ;
                     IF { DUP 8 ; FAILWITH } {} ;
                     DUP 17 ;
                     GET 1 ;
                     DUP 3 ;
                     COMPARE ;
                     GT ;
                     IF { DUP 17 ; GET 1 } { DUP 2 } ;
                     DUP 18 ;
                     GET 2 ;
                     DUP 3 ;
                     COMPARE ;
                     GT ;
                     IF { DUP 18 ; GET 2 } { DUP 2 } ;
                     PUSH nat 0 ;
                     DUP 3 ;
                     COMPARE ;
                     GT ;
                     IF { DUP 19 ;
                          GET 1 ;
                          DUP 3 ;
                          COMPARE ;
                          EQ ;
                          IF { PUSH int 0 ;
                               PUSH int 1 ;
                               DUP 4 ;
                               SUB ;
                               COMPARE ;
                               GE ;
                               IF { PUSH int 1 ; DUP 3 ; SUB ; ABS }
                                  { PUSH string "NAT_NEG_ASSIGN" ; FAILWITH } ;
                               DIP 1 { SWAP ; DROP 1 } ;
                               SWAP }
                             {} ;
                          DUP 19 ;
                          CDR ;
                          PUSH int 0 ;
                          DUP 4 ;
                          INT ;
                          DUP 22 ;
                          GET 1 ;
                          SUB ;
                          COMPARE ;
                          GE ;
                          IF { DUP 3 ; INT ; DUP 21 ; GET 1 ; SUB ; ABS }
                             { PUSH string "NAT_NEG_ASSIGN" ; FAILWITH } ;
                          PAIR ;
                          DIP 1 { DIG 18 ; DROP 1 } ;
                          DUG 18 ;
                          PUSH int 0 ;
                          DUP 3 ;
                          INT ;
                          DUP 16 ;
                          SUB ;
                          COMPARE ;
                          GE ;
                          IF { DUP 2 ; INT ; DUP 15 ; SUB ; ABS }
                             { PUSH string "NAT_NEG_ASSIGN" ; FAILWITH } ;
                          DIP 1 { DIG 13 ; DROP 1 } ;
                          DUG 13 ;
                          NIL operation ;
                          NIL operation ;
                          DUP 27 ;
                          ITER { CONS } ;
                          DUP 9 ;
                          CONTRACT %transfer (pair address address nat) ;
                          IF_NONE
                            { PUSH string "transfer" ; PUSH string "ENTRY_NOT_FOUND" ; PAIR ; FAILWITH }
                            {} ;
                          PUSH mutez 0 ;
                          DUP 6 ;
                          DUP 10 ;
                          PAIR ;
                          SELF_ADDRESS ;
                          PAIR ;
                          TRANSFER_TOKENS ;
                          CONS ;
                          ITER { CONS } ;
                          DIP 1 { DIG 24 ; DROP 1 } ;
                          DUG 24 }
                        {} ;
                     PUSH nat 0 ;
                     DUP 2 ;
                     COMPARE ;
                     GT ;
                     IF { DUP 19 ;
                          GET 2 ;
                          DUP 2 ;
                          COMPARE ;
                          EQ ;
                          IF { PUSH int 0 ;
                               PUSH int 1 ;
                               DUP 3 ;
                               SUB ;
                               COMPARE ;
                               GE ;
                               IF { PUSH int 1 ; DUP 2 ; SUB ; ABS }
                                  { PUSH string "NAT_NEG_ASSIGN" ; FAILWITH } ;
                               SWAP ;
                               DROP 1 }
                             {} ;
                          DUP 19 ;
                          UNPAIR ;
                          SWAP ;
                          DROP 1 ;
                          PUSH int 0 ;
                          DUP 3 ;
                          INT ;
                          DUP 22 ;
                          GET 2 ;
                          SUB ;
                          COMPARE ;
                          GE ;
                          IF { DUP 2 ; INT ; DUP 21 ; GET 2 ; SUB ; ABS }
                             { PUSH string "NAT_NEG_ASSIGN" ; FAILWITH } ;
                          SWAP ;
                          PAIR ;
                          DIP 1 { DIG 18 ; DROP 1 } ;
                          DUG 18 ;
                          PUSH int 0 ;
                          DUP 2 ;
                          INT ;
                          DUP 17 ;
                          SUB ;
                          COMPARE ;
                          GE ;
                          IF { DUP ; INT ; DUP 16 ; SUB ; ABS }
                             { PUSH string "NAT_NEG_ASSIGN" ; FAILWITH } ;
                          DIP 1 { DIG 14 ; DROP 1 } ;
                          DUG 14 ;
                          NIL operation ;
                          NIL operation ;
                          DUP 27 ;
                          ITER { CONS } ;
                          DUP 10 ;
                          CONTRACT %transfer (pair address address nat) ;
                          IF_NONE
                            { PUSH string "transfer" ; PUSH string "ENTRY_NOT_FOUND" ; PAIR ; FAILWITH }
                            {} ;
                          PUSH mutez 0 ;
                          DUP 5 ;
                          DUP 10 ;
                          PAIR ;
                          SELF_ADDRESS ;
                          PAIR ;
                          TRANSFER_TOKENS ;
                          CONS ;
                          ITER { CONS } ;
                          DIP 1 { DIG 24 ; DROP 1 } ;
                          DUG 24 }
                        {} ;
                     NIL operation ;
                     NIL operation ;
                     DUP 27 ;
                     ITER { CONS } ;
                     DUP 3 ;
                     DUP 5 ;
                     PAIR ;
                     DUP 8 ;
                     PAIR ;
                     SENDER ;
                     PAIR ;
                     EMIT %CollectProtocol
                       (pair (address %sender_collectProtocol_event)
                             (address %recipient_collectProtocol_event)
                             (nat %amount0_collectProtocol_event)
                             (nat %amount1_collectProtocol_event)) ;
                     CONS ;
                     ITER { CONS } ;
                     DIP 1 { DIG 24 ; DROP 1 } ;
                     DUG 24 ;
                     DUP 16 ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     DROP 1 ;
                     PUSH bool True ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DIP 1 { DIG 15 ; DROP 1 } ;
                     DUG 15 ;
                     DROP 5 ;
                     PAIR 19 ;
                     SWAP ;
                     PAIR } } } ;
         DIP 1 { DROP 1 } } ;
  view "getObservation"
       nat
       (pair (nat %blockTimestamp)
             (pair (int %tickCumulative)
                   (nat %secondsPerLiquidityCumulativeX128)
                   (bool %initialized)))
       { UNPAIR ;
         DIP 1
             { CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR } ;
         UNIT ;
         DUP 3 ;
         DUP 3 ;
         GET ;
         IF_NONE
           { PUSH bool False ;
             PUSH nat 0 ;
             PAIR ;
             PUSH int 0 ;
             PAIR ;
             PUSH nat 0 ;
             PAIR }
           {} ;
         SWAP ;
         DROP 1 ;
         DIP 1 { DROP 2 } } ;
  view "getTickBitmap"
       int
       nat
       { UNPAIR ;
         DIP 1
             { CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               UNPAIR ;
               SWAP ;
               DROP 1 } ;
         UNIT ;
         DUP 3 ;
         DUP 3 ;
         GET ;
         IF_NONE { PUSH nat 0 } {} ;
         SWAP ;
         DROP 1 ;
         DIP 1 { DROP 2 } } ;
  view "getSlot0"
       unit
       (pair (nat %sqrtPriceX96)
             (int %tick)
             (nat %observationIndex)
             (nat %observationCardinality)
             (nat %observationCardinalityNext)
             (nat %feeProtocol)
             (bool %unlocked))
       { CDR ;
         CDR ;
         CDR ;
         CDR ;
         CDR ;
         CDR ;
         CDR ;
         CDR ;
         CDR ;
         CDR ;
         CDR ;
         UNPAIR ;
         SWAP ;
         DROP 1 ;
         UNIT ;
         DUP 2 ;
         SWAP ;
         DROP 1 ;
         DIP 1 { DROP 1 } } ;
  view "getPositionInfo"
       (pair address int int)
       (pair (nat %liquidity)
             (pair (nat %feeGrowthInside0LastX128) (nat %feeGrowthInside1LastX128))
             (pair (nat %tokensOwed0) (nat %tokensOwed1)))
       { UNPAIR ;
         DIP 1
             { CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               UNPAIR ;
               SWAP ;
               DROP 1 } ;
         UNPAIR 3 ;
         UNIT ;
         DUP 5 ;
         DUP 5 ;
         DUP 5 ;
         PAIR ;
         DUP 4 ;
         PAIR ;
         GET ;
         IF_NONE
           { PUSH nat 0 ;
             PUSH nat 0 ;
             PAIR ;
             PUSH nat 0 ;
             PUSH nat 0 ;
             PAIR ;
             PAIR ;
             PUSH nat 0 ;
             PAIR }
           {} ;
         SWAP ;
         DROP 1 ;
         DIP 1 { DROP 4 } } ;
  view "getTick"
       int
       (pair (nat %liquidityGross)
             (int %liquidityNet)
             (nat %feeGrowthOutside0X128)
             (nat %feeGrowthOutside1X128)
             (int %tickCumulativeOutside)
             (nat %secondsPerLiquidityOutsideX128)
             (nat %secondsOutside)
             (bool %initialized))
       { UNPAIR ;
         DIP 1
             { CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               UNPAIR ;
               SWAP ;
               DROP 1 } ;
         UNIT ;
         DUP 3 ;
         DUP 3 ;
         GET ;
         IF_NONE
           { PUSH bool False ;
             PUSH nat 0 ;
             PAIR ;
             PUSH nat 0 ;
             PAIR ;
             PUSH int 0 ;
             PAIR ;
             PUSH nat 0 ;
             PAIR ;
             PUSH nat 0 ;
             PAIR ;
             PUSH int 0 ;
             PAIR ;
             PUSH nat 0 ;
             PAIR }
           {} ;
         SWAP ;
         DROP 1 ;
         DIP 1 { DROP 2 } } ;
  view "snapshotCumulativesInside"
       (pair int int)
       (pair int nat nat)
       { UNPAIR ;
         DIP 1
             { CDR ;
               CDR ;
               CDR ;
               UNPAIR ;
               SWAP ;
               UNPAIR ;
               SWAP ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               UNPAIR ;
               SWAP ;
               CDR ;
               CDR ;
               CDR ;
               UNPAIR ;
               SWAP ;
               UNPAIR ;
               SWAP ;
               DROP 1 } ;
         UNPAIR ;
         UNIT ;
         SELF_ADDRESS ;
         SELF_ADDRESS ;
         COMPARE ;
         EQ ;
         NOT ;
         IF { PUSH string "DCall" ; FAILWITH } {} ;
         DUP 8 ;
         DUP 6 ;
         DUP 8 ;
         PAIR ;
         DUP 5 ;
         PAIR ;
         DUP 4 ;
         PAIR ;
         DUP 6 ;
         DUP 6 ;
         GET ;
         IF_NONE
           { PUSH string "ticks" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
           {} ;
         PAIR ;
         DUP 6 ;
         DUP 5 ;
         GET ;
         IF_NONE
           { PUSH string "ticks" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
           {} ;
         PAIR ;
         VIEW "snapshotCumulativesInside" (pair int nat nat) ;
         IF_NONE { DUP 7 ; FAILWITH } {} ;
         DUP ;
         DIP 1 { SWAP ; DROP 1 } ;
         SWAP ;
         DROP 1 ;
         DIP 1 { DROP 7 } } ;
  view "observe"
       (list nat)
       (pair (list int) (list nat))
       { UNPAIR ;
         DIP 1
             { CDR ;
               CDR ;
               CDR ;
               UNPAIR ;
               SWAP ;
               UNPAIR ;
               SWAP ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               UNPAIR ;
               SWAP ;
               CDR ;
               CDR ;
               CDR ;
               UNPAIR ;
               SWAP ;
               DROP 1 } ;
         UNIT ;
         SELF_ADDRESS ;
         SELF_ADDRESS ;
         COMPARE ;
         EQ ;
         NOT ;
         IF { PUSH string "DCall" ; FAILWITH } {} ;
         DUP 6 ;
         DUP 4 ;
         DUP 6 ;
         PAIR ;
         DUP 4 ;
         PAIR ;
         VIEW "observe" (pair (list int) (list nat)) ;
         IF_NONE { DUP 5 ; FAILWITH } {} ;
         DUP ;
         DIP 1 { SWAP ; DROP 1 } ;
         SWAP ;
         DROP 1 ;
         DIP 1 { DROP 5 } } ;
  view "mint_burn_PositionInfo_view"
       (pair bool address int int nat)
       (pair (nat %liquidity)
             (pair (nat %feeGrowthInside0LastX128) (nat %feeGrowthInside1LastX128))
             (pair (nat %tokensOwed0) (nat %tokensOwed1)))
       { UNPAIR ;
         DIP 1
             { CDR ;
               CDR ;
               CDR ;
               UNPAIR ;
               SWAP ;
               UNPAIR ;
               SWAP ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               UNPAIR ;
               SWAP ;
               UNPAIR ;
               SWAP ;
               DROP 1 } ;
         UNPAIR 5 ;
         UNIT ;
         DUP 2 ;
         IF { DUP 10 ;
              DUP 8 ;
              DUP 10 ;
              PAIR ;
              DUP 7 ;
              PAIR ;
              DUP 6 ;
              PAIR ;
              SELF_ADDRESS ;
              PAIR ;
              DUP 5 ;
              PAIR ;
              DUP 8 ;
              PAIR ;
              VIEW "mint_PositionInfo_view"
                   (pair (nat %liquidity)
                         (pair (nat %feeGrowthInside0LastX128) (nat %feeGrowthInside1LastX128))
                         (pair (nat %tokensOwed0) (nat %tokensOwed1))) ;
              IF_NONE { DUP 9 ; FAILWITH } {} ;
              DUP ;
              DIP 1 { SWAP ; DROP 1 } ;
              SWAP ;
              DROP 1 }
            { DUP 10 ;
              DUP 8 ;
              DUP 10 ;
              PAIR ;
              DUP 7 ;
              PAIR ;
              DUP 6 ;
              PAIR ;
              SELF_ADDRESS ;
              PAIR ;
              SENDER ;
              PAIR ;
              DUP 8 ;
              PAIR ;
              VIEW "burn_PositionInfo_view"
                   (pair (nat %liquidity)
                         (pair (nat %feeGrowthInside0LastX128) (nat %feeGrowthInside1LastX128))
                         (pair (nat %tokensOwed0) (nat %tokensOwed1))) ;
              IF_NONE { DUP 9 ; FAILWITH } {} ;
              DUP ;
              DIP 1 { SWAP ; DROP 1 } ;
              SWAP ;
              DROP 1 } ;
         DIP 1 { DROP 9 } } ;
  view "swap_view"
       (pair bool int nat)
       (pair int int)
       { UNPAIR ;
         DIP 1
             { CDR ;
               CDR ;
               CDR ;
               UNPAIR ;
               SWAP ;
               UNPAIR ;
               SWAP ;
               UNPAIR ;
               SWAP ;
               UNPAIR ;
               SWAP ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               UNPAIR ;
               SWAP ;
               UNPAIR ;
               SWAP ;
               CDR ;
               UNPAIR ;
               SWAP ;
               DROP 1 } ;
         UNPAIR 3 ;
         UNIT ;
         DUP 11 ;
         DUP 10 ;
         DUP 10 ;
         PAIR ;
         SELF_ADDRESS ;
         PAIR ;
         DUP 8 ;
         PAIR ;
         DUP 9 ;
         PAIR ;
         DUP 7 ;
         PAIR ;
         DUP 6 ;
         PAIR ;
         DUP 5 ;
         PAIR ;
         DUP 4 ;
         PAIR ;
         VIEW "swap" (pair int int) ;
         IF_NONE { DUP 10 ; FAILWITH } {} ;
         DUP ;
         DIP 1 { SWAP ; DROP 1 } ;
         SWAP ;
         DROP 1 ;
         DIP 1 { DROP 10 } } }
