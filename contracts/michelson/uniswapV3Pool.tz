# (Pair factory token0 token1 0 0 0 (Pair 0 0 0 0 0 0 False) 0 0 (Pair 0 0) 0 { } { } { } { })
{
  storage (pair (address %factory) (address %token0) (address %token1) (nat %fee) (int %tickSpacing) (nat %maxLiquidityPerTick) (pair %slot0 (nat %sqrtPriceX96) (int %tick) (nat %observationIndex) (nat %observationCardinality) (nat %observationCardinalityNext) (nat %feeProtocol) (bool %unlocked)) (nat %feeGrowthGlobal0X128) (nat %feeGrowthGlobal1X128) (pair %protocolFees (nat %token0) (nat %token1)) (nat %liquidity) (big_map %ticks int (pair (nat %liquidityGross) (int %liquidityNet) (nat %feeGrowthOutside0X128) (nat %feeGrowthOutside1X128) (int %tickCumulativeOutside) (nat %secondsPerLiquidityOutsideX128) (nat %secondsOutside) (bool %initialized))) (big_map %tickBitmap int nat) (big_map %positions bytes (pair (nat %liquidity) (pair (nat %feeGrowthInside0LastX128) (nat %feeGrowthInside1LastX128)) (pair (nat %tokensOwed0) (nat %tokensOwed1)))) (list %observations (pair (nat %blockTimestamp) (int %tickCumulative) (nat %secondsPerLiquidityCumulativeX128) (bool %initialized))));
  parameter unit;
  code { LAMBDA
           unit
           bool
           { PUSH unit Unit;
             SELF_ADDRESS;
             SELF_ADDRESS;
             COMPARE;
             NEQ;
             IF
               { SELF_ADDRESS;
                 PUSH string "DelegateCall";
                 PAIR;
                 FAILWITH }
               {  };
             PUSH bool True;
             SWAP;
             DROP;
             SWAP;
             DROP };
         DIG 1;
         CDR;
         NIL operation;
         PAIR;
         DIP { DROP } };
}
